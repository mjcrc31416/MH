/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
/**
 * Defines values for PathResourceType.
 * Possible values include: 'directory', 'file'
 * @readonly
 * @enum {string}
 */
export var PathResourceType;
(function (PathResourceType) {
    PathResourceType["Directory"] = "directory";
    PathResourceType["File"] = "file";
})(PathResourceType || (PathResourceType = {}));
/**
 * Defines values for PathRenameMode.
 * Possible values include: 'legacy', 'posix'
 * @readonly
 * @enum {string}
 */
export var PathRenameMode;
(function (PathRenameMode) {
    PathRenameMode["Legacy"] = "legacy";
    PathRenameMode["Posix"] = "posix";
})(PathRenameMode || (PathRenameMode = {}));
/**
 * Defines values for PathUpdateAction.
 * Possible values include: 'append', 'flush', 'setProperties', 'setAccessControl'
 * @readonly
 * @enum {string}
 */
export var PathUpdateAction;
(function (PathUpdateAction) {
    PathUpdateAction["Append"] = "append";
    PathUpdateAction["Flush"] = "flush";
    PathUpdateAction["SetProperties"] = "setProperties";
    PathUpdateAction["SetAccessControl"] = "setAccessControl";
})(PathUpdateAction || (PathUpdateAction = {}));
/**
 * Defines values for PathLeaseAction.
 * Possible values include: 'acquire', 'break', 'change', 'renew', 'release'
 * @readonly
 * @enum {string}
 */
export var PathLeaseAction;
(function (PathLeaseAction) {
    PathLeaseAction["Acquire"] = "acquire";
    PathLeaseAction["Break"] = "break";
    PathLeaseAction["Change"] = "change";
    PathLeaseAction["Renew"] = "renew";
    PathLeaseAction["Release"] = "release";
})(PathLeaseAction || (PathLeaseAction = {}));
/**
 * Defines values for PathGetPropertiesAction.
 * Possible values include: 'getAccessControl', 'getStatus'
 * @readonly
 * @enum {string}
 */
export var PathGetPropertiesAction;
(function (PathGetPropertiesAction) {
    PathGetPropertiesAction["GetAccessControl"] = "getAccessControl";
    PathGetPropertiesAction["GetStatus"] = "getStatus";
})(PathGetPropertiesAction || (PathGetPropertiesAction = {}));
//# sourceMappingURL=index.js.map