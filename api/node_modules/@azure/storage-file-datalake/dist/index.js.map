{"version":3,"file":"index.js","sources":["../src/policies/CredentialPolicy.ts","../src/policies/AnonymousCredentialPolicy.ts","../src/credentials/Credential.ts","../src/credentials/AnonymousCredential.ts","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/types/0.2.0/node_modules/@opentelemetry/types/build/src/distributed_context/EntryValue.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/types/0.2.0/node_modules/@opentelemetry/types/build/src/metrics/Metric.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/types/0.2.0/node_modules/@opentelemetry/types/build/src/trace/span_kind.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/types/0.2.0/node_modules/@opentelemetry/types/build/src/trace/status.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/types/0.2.0/node_modules/@opentelemetry/types/build/src/trace/trace_flags.js","../../../../common/temp/node_modules/.pnpm/registry.npmjs.org/@opentelemetry/types/0.2.0/node_modules/@opentelemetry/types/build/src/index.js","../src/utils/tracing.ts","../src/DataLakeLeaseClient.ts","../src/generated/src/models/mappers.ts","../src/generated/src/models/parameters.ts","../src/generated/src/models/fileSystemOperationsMappers.ts","../src/generated/src/operations/fileSystemOperations.ts","../src/generated/src/models/pathOperationsMappers.ts","../src/generated/src/operations/pathOperations.ts","../src/log.ts","../src/utils/constants.ts","../src/utils/utils.common.ts","../src/policies/StorageBrowserPolicy.ts","../src/StorageBrowserPolicyFactory.ts","../src/policies/StorageRetryPolicy.ts","../src/StorageRetryPolicyFactory.ts","../src/policies/TelemetryPolicy.ts","../src/TelemetryPolicyFactory.ts","../src/Pipeline.ts","../src/policies/StorageSharedKeyCredentialPolicy.ts","../src/credentials/StorageSharedKeyCredential.ts","../src/generated/src/storageClientContext.ts","../src/transforms.ts","../src/StorageClient.ts","../src/generated/src/models/index.ts","../src/utils/cache.ts","../src/clients.ts","../src/DataLakeFileSystemClient.ts","../src/DataLakeServiceClient.ts","../src/AccountSASPermissions.ts","../src/AccountSASResourceTypes.ts","../src/AccountSASServices.ts","../src/SasIPRange.ts","../src/SASQueryParameters.ts","../src/AccountSASSignatureValues.ts","../src/DataLakeSASPermissions.ts","../src/FileSystemSASPermissions.ts","../src/credentials/UserDelegationKeyCredential.ts","../src/DataLakeSASSignatureValues.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { BaseRequestPolicy, HttpOperationResponse, WebResource } from \"@azure/core-http\";\n\n/**\n * Credential policy used to sign HTTP(S) requests before sending. This is an\n * abstract class.\n *\n * @export\n * @abstract\n * @class CredentialPolicy\n * @extends {BaseRequestPolicy}\n */\nexport abstract class CredentialPolicy extends BaseRequestPolicy {\n  /**\n   * Sends out request.\n   *\n   * @param {WebResource} request\n   * @returns {Promise<HttpOperationResponse>}\n   * @memberof CredentialPolicy\n   */\n  public sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    return this._nextPolicy.sendRequest(this.signRequest(request));\n  }\n\n  /**\n   * Child classes must implement this method with request signing. This method\n   * will be executed in {@link sendRequest}.\n   *\n   * @protected\n   * @abstract\n   * @param {WebResource} request\n   * @returns {WebResource}\n   * @memberof CredentialPolicy\n   */\n  protected signRequest(request: WebResource): WebResource {\n    // Child classes must override this method with request signing. This method\n    // will be executed in sendRequest().\n    return request;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { RequestPolicy, RequestPolicyOptions } from \"@azure/core-http\";\n\nimport { CredentialPolicy } from \"./CredentialPolicy\";\n\n/**\n * AnonymousCredentialPolicy is used with HTTP(S) requests that read public resources\n * or for use with Shared Access Signatures (SAS).\n *\n * @export\n * @class AnonymousCredentialPolicy\n * @extends {CredentialPolicy}\n */\nexport class AnonymousCredentialPolicy extends CredentialPolicy {\n  /**\n   * Creates an instance of AnonymousCredentialPolicy.\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @memberof AnonymousCredentialPolicy\n   */\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { RequestPolicy, RequestPolicyFactory, RequestPolicyOptions } from \"@azure/core-http\";\nimport { CredentialPolicy } from \"../policies/CredentialPolicy\";\n\n/**\n * Credential is an abstract class for Azure Storage HTTP requests signing. This\n * class will host an credentialPolicyCreator factory which generates CredentialPolicy.\n *\n * @export\n * @abstract\n * @class Credential\n */\nexport abstract class Credential implements RequestPolicyFactory {\n  /**\n   * Creates a RequestPolicy object.\n   *\n   * @param {RequestPolicy} _nextPolicy\n   * @param {RequestPolicyOptions} _options\n   * @returns {RequestPolicy}\n   * @memberof Credential\n   */\n  public create(\n    // tslint:disable-next-line:variable-name\n    _nextPolicy: RequestPolicy,\n    // tslint:disable-next-line:variable-name\n    _options: RequestPolicyOptions\n  ): RequestPolicy {\n    throw new Error(\"Method should be implemented in children classes.\");\n  }\n}\n\n/**\n * A factory function that creates a new CredentialPolicy that uses the provided nextPolicy.\n */\nexport type CredentialPolicyCreator = (\n  nextPolicy: RequestPolicy,\n  options: RequestPolicyOptions\n) => CredentialPolicy;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { RequestPolicy, RequestPolicyOptions } from \"@azure/core-http\";\n\nimport { AnonymousCredentialPolicy } from \"../policies/AnonymousCredentialPolicy\";\nimport { Credential } from \"./Credential\";\n\n/**\n * AnonymousCredential provides a credentialPolicyCreator member used to create\n * AnonymousCredentialPolicy objects. AnonymousCredentialPolicy is used with\n * HTTP(S) requests that read public resources or for use with Shared Access\n * Signatures (SAS).\n *\n * @export\n * @class AnonymousCredential\n * @extends {Credential}\n */\nexport class AnonymousCredential extends Credential {\n  /**\n   * Creates an {@link AnonymousCredentialPolicy} object.\n   *\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @returns {AnonymousCredentialPolicy}\n   * @memberof AnonymousCredential\n   */\n  public create(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions\n  ): AnonymousCredentialPolicy {\n    return new AnonymousCredentialPolicy(nextPolicy, options);\n  }\n}\n","\"use strict\";\n/*!\n * Copyright 2019, OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * EntryTtl is an integer that represents number of hops an entry can propagate.\n *\n * For now, ONLY special values (0 and -1) are supported.\n */\nvar EntryTtl;\n(function (EntryTtl) {\n    /**\n     * NO_PROPAGATION is considered to have local scope and is used within the\n     * process it created.\n     */\n    EntryTtl[EntryTtl[\"NO_PROPAGATION\"] = 0] = \"NO_PROPAGATION\";\n    /** UNLIMITED_PROPAGATION can propagate unlimited hops. */\n    EntryTtl[EntryTtl[\"UNLIMITED_PROPAGATION\"] = -1] = \"UNLIMITED_PROPAGATION\";\n})(EntryTtl = exports.EntryTtl || (exports.EntryTtl = {}));\n//# sourceMappingURL=EntryValue.js.map","\"use strict\";\n/*!\n * Copyright 2019, OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** The Type of value. It describes how the data is reported. */\nvar ValueType;\n(function (ValueType) {\n    ValueType[ValueType[\"INT\"] = 0] = \"INT\";\n    ValueType[ValueType[\"DOUBLE\"] = 1] = \"DOUBLE\";\n})(ValueType = exports.ValueType || (exports.ValueType = {}));\n//# sourceMappingURL=Metric.js.map","\"use strict\";\n/*!\n * Copyright 2019, OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Type of span. Can be used to specify additional relationships between spans\n * in addition to a parent/child relationship.\n */\nvar SpanKind;\n(function (SpanKind) {\n    /** Default value. Indicates that the span is used internally. */\n    SpanKind[SpanKind[\"INTERNAL\"] = 0] = \"INTERNAL\";\n    /**\n     * Indicates that the span covers server-side handling of an RPC or other\n     * remote request.\n     */\n    SpanKind[SpanKind[\"SERVER\"] = 1] = \"SERVER\";\n    /**\n     * Indicates that the span covers the client-side wrapper around an RPC or\n     * other remote request.\n     */\n    SpanKind[SpanKind[\"CLIENT\"] = 2] = \"CLIENT\";\n    /**\n     * Indicates that the span describes producer sending a message to a\n     * broker. Unlike client and server, there is no direct critical path latency\n     * relationship between producer and consumer spans.\n     */\n    SpanKind[SpanKind[\"PRODUCER\"] = 3] = \"PRODUCER\";\n    /**\n     * Indicates that the span describes consumer receiving a message from a\n     * broker. Unlike client and server, there is no direct critical path latency\n     * relationship between producer and consumer spans.\n     */\n    SpanKind[SpanKind[\"CONSUMER\"] = 4] = \"CONSUMER\";\n})(SpanKind = exports.SpanKind || (exports.SpanKind = {}));\n//# sourceMappingURL=span_kind.js.map","\"use strict\";\n/*!\n * Copyright 2019, OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * An enumeration of canonical status codes.\n */\nvar CanonicalCode;\n(function (CanonicalCode) {\n    /**\n     * Not an error; returned on success\n     */\n    CanonicalCode[CanonicalCode[\"OK\"] = 0] = \"OK\";\n    /**\n     * The operation was cancelled (typically by the caller).\n     */\n    CanonicalCode[CanonicalCode[\"CANCELLED\"] = 1] = \"CANCELLED\";\n    /**\n     * Unknown error.  An example of where this error may be returned is\n     * if a status value received from another address space belongs to\n     * an error-space that is not known in this address space.  Also\n     * errors raised by APIs that do not return enough error information\n     * may be converted to this error.\n     */\n    CanonicalCode[CanonicalCode[\"UNKNOWN\"] = 2] = \"UNKNOWN\";\n    /**\n     * Client specified an invalid argument.  Note that this differs\n     * from FAILED_PRECONDITION.  INVALID_ARGUMENT indicates arguments\n     * that are problematic regardless of the state of the system\n     * (e.g., a malformed file name).\n     */\n    CanonicalCode[CanonicalCode[\"INVALID_ARGUMENT\"] = 3] = \"INVALID_ARGUMENT\";\n    /**\n     * Deadline expired before operation could complete.  For operations\n     * that change the state of the system, this error may be returned\n     * even if the operation has completed successfully.  For example, a\n     * successful response from a server could have been delayed long\n     * enough for the deadline to expire.\n     */\n    CanonicalCode[CanonicalCode[\"DEADLINE_EXCEEDED\"] = 4] = \"DEADLINE_EXCEEDED\";\n    /**\n     * Some requested entity (e.g., file or directory) was not found.\n     */\n    CanonicalCode[CanonicalCode[\"NOT_FOUND\"] = 5] = \"NOT_FOUND\";\n    /**\n     * Some entity that we attempted to create (e.g., file or directory)\n     * already exists.\n     */\n    CanonicalCode[CanonicalCode[\"ALREADY_EXISTS\"] = 6] = \"ALREADY_EXISTS\";\n    /**\n     * The caller does not have permission to execute the specified\n     * operation.  PERMISSION_DENIED must not be used for rejections\n     * caused by exhausting some resource (use RESOURCE_EXHAUSTED\n     * instead for those errors).  PERMISSION_DENIED must not be\n     * used if the caller can not be identified (use UNAUTHENTICATED\n     * instead for those errors).\n     */\n    CanonicalCode[CanonicalCode[\"PERMISSION_DENIED\"] = 7] = \"PERMISSION_DENIED\";\n    /**\n     * Some resource has been exhausted, perhaps a per-user quota, or\n     * perhaps the entire file system is out of space.\n     */\n    CanonicalCode[CanonicalCode[\"RESOURCE_EXHAUSTED\"] = 8] = \"RESOURCE_EXHAUSTED\";\n    /**\n     * Operation was rejected because the system is not in a state\n     * required for the operation's execution.  For example, directory\n     * to be deleted may be non-empty, an rmdir operation is applied to\n     * a non-directory, etc.\n     *\n     * A litmus test that may help a service implementor in deciding\n     * between FAILED_PRECONDITION, ABORTED, and UNAVAILABLE:\n     *\n     *  - Use UNAVAILABLE if the client can retry just the failing call.\n     *  - Use ABORTED if the client should retry at a higher-level\n     *    (e.g., restarting a read-modify-write sequence).\n     *  - Use FAILED_PRECONDITION if the client should not retry until\n     *    the system state has been explicitly fixed.  E.g., if an \"rmdir\"\n     *    fails because the directory is non-empty, FAILED_PRECONDITION\n     *    should be returned since the client should not retry unless\n     *    they have first fixed up the directory by deleting files from it.\n     *  - Use FAILED_PRECONDITION if the client performs conditional\n     *    REST Get/Update/Delete on a resource and the resource on the\n     *    server does not match the condition. E.g., conflicting\n     *    read-modify-write on the same resource.\n     */\n    CanonicalCode[CanonicalCode[\"FAILED_PRECONDITION\"] = 9] = \"FAILED_PRECONDITION\";\n    /**\n     * The operation was aborted, typically due to a concurrency issue\n     * like sequencer check failures, transaction aborts, etc.\n     *\n     * See litmus test above for deciding between FAILED_PRECONDITION,\n     * ABORTED, and UNAVAILABLE.\n     */\n    CanonicalCode[CanonicalCode[\"ABORTED\"] = 10] = \"ABORTED\";\n    /**\n     * Operation was attempted past the valid range.  E.g., seeking or\n     * reading past end of file.\n     *\n     * Unlike INVALID_ARGUMENT, this error indicates a problem that may\n     * be fixed if the system state changes. For example, a 32-bit file\n     * system will generate INVALID_ARGUMENT if asked to read at an\n     * offset that is not in the range [0,2^32-1], but it will generate\n     * OUT_OF_RANGE if asked to read from an offset past the current\n     * file size.\n     *\n     * There is a fair bit of overlap between FAILED_PRECONDITION and\n     * OUT_OF_RANGE.  We recommend using OUT_OF_RANGE (the more specific\n     * error) when it applies so that callers who are iterating through\n     * a space can easily look for an OUT_OF_RANGE error to detect when\n     * they are done.\n     */\n    CanonicalCode[CanonicalCode[\"OUT_OF_RANGE\"] = 11] = \"OUT_OF_RANGE\";\n    /**\n     * Operation is not implemented or not supported/enabled in this service.\n     */\n    CanonicalCode[CanonicalCode[\"UNIMPLEMENTED\"] = 12] = \"UNIMPLEMENTED\";\n    /**\n     * Internal errors.  Means some invariants expected by underlying\n     * system has been broken.  If you see one of these errors,\n     * something is very broken.\n     */\n    CanonicalCode[CanonicalCode[\"INTERNAL\"] = 13] = \"INTERNAL\";\n    /**\n     * The service is currently unavailable.  This is a most likely a\n     * transient condition and may be corrected by retrying with\n     * a backoff.\n     *\n     * See litmus test above for deciding between FAILED_PRECONDITION,\n     * ABORTED, and UNAVAILABLE.\n     */\n    CanonicalCode[CanonicalCode[\"UNAVAILABLE\"] = 14] = \"UNAVAILABLE\";\n    /**\n     * Unrecoverable data loss or corruption.\n     */\n    CanonicalCode[CanonicalCode[\"DATA_LOSS\"] = 15] = \"DATA_LOSS\";\n    /**\n     * The request does not have valid authentication credentials for the\n     * operation.\n     */\n    CanonicalCode[CanonicalCode[\"UNAUTHENTICATED\"] = 16] = \"UNAUTHENTICATED\";\n})(CanonicalCode = exports.CanonicalCode || (exports.CanonicalCode = {}));\n//# sourceMappingURL=status.js.map","\"use strict\";\n/*!\n * Copyright 2019, OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * An enumeration that represents global trace flags. These flags are\n * propagated to all child {@link Span}. These determine features such as\n * whether a Span should be traced. It is implemented as a bitmask.\n */\nvar TraceFlags;\n(function (TraceFlags) {\n    /** Bit to represent whether trace is unsampled in trace flags. */\n    TraceFlags[TraceFlags[\"UNSAMPLED\"] = 0] = \"UNSAMPLED\";\n    /** Bit to represent whether trace is sampled in trace flags. */\n    TraceFlags[TraceFlags[\"SAMPLED\"] = 1] = \"SAMPLED\";\n})(TraceFlags = exports.TraceFlags || (exports.TraceFlags = {}));\n//# sourceMappingURL=trace_flags.js.map","\"use strict\";\n/*!\n * Copyright 2019, OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./distributed_context/EntryValue\"));\n__export(require(\"./metrics/Metric\"));\n__export(require(\"./trace/span_kind\"));\n__export(require(\"./trace/status\"));\n__export(require(\"./trace/trace_flags\"));\n//# sourceMappingURL=index.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { getTracer } from \"@azure/core-tracing\";\nimport { Span, SpanKind, SpanOptions } from \"@opentelemetry/types\";\n\nimport { OperationTracingOptions } from \"../StorageClient\";\n\n/**\n * Creates a span using the global tracer.\n * @param name The name of the operation being performed.\n * @param tracingOptions The options for the underlying http request.\n */\nexport function createSpan(\n  operationName: string,\n  tracingOptions: OperationTracingOptions = {}\n): { span: Span; spanOptions: SpanOptions } {\n  const tracer = getTracer();\n  const spanOptions: SpanOptions = {\n    ...tracingOptions.spanOptions,\n    kind: SpanKind.INTERNAL\n  };\n\n  const span = tracer.startSpan(`Azure.Storage.DataLake.${operationName}`, spanOptions);\n  span.setAttribute(\"az.namespace\", \"Microsoft.Storage\");\n\n  let newOptions = tracingOptions.spanOptions || {};\n  if (span.isRecording()) {\n    newOptions = {\n      ...tracingOptions.spanOptions,\n      parent: span,\n      attributes: {\n        ...spanOptions.attributes,\n        \"az.namespace\": \"Microsoft.Storage\"\n      }\n    };\n  }\n\n  return {\n    span,\n    spanOptions: newOptions\n  };\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { BlobLeaseClient } from \"@azure/storage-blob\";\nimport { CanonicalCode } from \"@opentelemetry/types\";\n\nimport { Lease, LeaseOperationOptions, LeaseOperationResponse } from \"./models\";\nimport { createSpan } from \"./utils/tracing\";\n\nexport class DataLakeLeaseClient {\n  public get leaseId(): string {\n    return this.client.leaseId;\n  }\n\n  public get url(): string {\n    return this.client.url;\n  }\n\n  constructor(private readonly client: BlobLeaseClient) {}\n\n  public async acquireLease(\n    duration: number,\n    options: LeaseOperationOptions = {}\n  ): Promise<LeaseOperationResponse> {\n    options.conditions = options.conditions || {};\n    const { span, spanOptions } = createSpan(\n      \"DataLakeLeaseClient-acquireLease\",\n      options.tracingOptions\n    );\n    try {\n      return await this.client.acquireLease(duration, {\n        ...options,\n        tracingOptions: {\n          ...options.tracingOptions,\n          spanOptions\n        }\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  public async changeLease(\n    proposedLeaseId: string,\n    options: LeaseOperationOptions = {}\n  ): Promise<LeaseOperationResponse> {\n    options.conditions = options.conditions || {};\n    const { span, spanOptions } = createSpan(\n      \"DataLakeLeaseClient-changeLease\",\n      options.tracingOptions\n    );\n    try {\n      return await this.client.changeLease(proposedLeaseId, {\n        ...options,\n        tracingOptions: {\n          ...options.tracingOptions,\n          spanOptions\n        }\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  public async releaseLease(options: LeaseOperationOptions = {}): Promise<LeaseOperationResponse> {\n    options.conditions = options.conditions || {};\n    const { span, spanOptions } = createSpan(\n      \"DataLakeLeaseClient-releaseLease\",\n      options.tracingOptions\n    );\n    try {\n      return await this.client.releaseLease({\n        ...options,\n        tracingOptions: {\n          ...options.tracingOptions,\n          spanOptions\n        }\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  public async renewLease(options: LeaseOperationOptions = {}): Promise<Lease> {\n    options.conditions = options.conditions || {};\n    const { span, spanOptions } = createSpan(\n      \"DataLakeLeaseClient-renewLease\",\n      options.tracingOptions\n    );\n    try {\n      return await this.client.renewLease({\n        ...options,\n        tracingOptions: {\n          ...options.tracingOptions,\n          spanOptions\n        }\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  public async breakLease(\n    breakPeriod: number,\n    options: LeaseOperationOptions = {}\n  ): Promise<LeaseOperationResponse> {\n    options.conditions = options.conditions || {};\n    const { span, spanOptions } = createSpan(\n      \"DataLakeLeaseClient-renewLease\",\n      options.tracingOptions\n    );\n    try {\n      return await this.client.breakLease(breakPeriod, {\n        ...options,\n        tracingOptions: {\n          ...options.tracingOptions,\n          spanOptions\n        }\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\n\n\nexport const Path: coreHttp.CompositeMapper = {\n  serializedName: \"Path\",\n  type: {\n    name: \"Composite\",\n    className: \"Path\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isDirectory: {\n        serializedName: \"isDirectory\",\n        defaultValue: false,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      lastModified: {\n        serializedName: \"lastModified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      eTag: {\n        serializedName: \"eTag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentLength: {\n        serializedName: \"contentLength\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      owner: {\n        serializedName: \"owner\",\n        type: {\n          name: \"String\"\n        }\n      },\n      group: {\n        serializedName: \"group\",\n        type: {\n          name: \"String\"\n        }\n      },\n      permissions: {\n        serializedName: \"permissions\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PathList: coreHttp.CompositeMapper = {\n  serializedName: \"PathList\",\n  type: {\n    name: \"Composite\",\n    className: \"PathList\",\n    modelProperties: {\n      paths: {\n        serializedName: \"paths\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Path\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const FileSystem: coreHttp.CompositeMapper = {\n  serializedName: \"FileSystem\",\n  type: {\n    name: \"Composite\",\n    className: \"FileSystem\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"lastModified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      eTag: {\n        serializedName: \"eTag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileSystemList: coreHttp.CompositeMapper = {\n  serializedName: \"FileSystemList\",\n  type: {\n    name: \"Composite\",\n    className: \"FileSystemList\",\n    modelProperties: {\n      filesystems: {\n        serializedName: \"filesystems\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"FileSystem\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const StorageErrorError: coreHttp.CompositeMapper = {\n  serializedName: \"StorageError_error\",\n  type: {\n    name: \"Composite\",\n    className: \"StorageErrorError\",\n    modelProperties: {\n      code: {\n        serializedName: \"Code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"Message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const StorageError: coreHttp.CompositeMapper = {\n  serializedName: \"StorageError\",\n  type: {\n    name: \"Composite\",\n    className: \"StorageError\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"StorageErrorError\"\n        }\n      }\n    }\n  }\n};\n\nexport const ModifiedAccessConditions: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ModifiedAccessConditions\",\n    modelProperties: {\n      ifModifiedSince: {\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      ifUnmodifiedSince: {\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      ifMatch: {\n        type: {\n          name: \"String\"\n        }\n      },\n      ifNoneMatch: {\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PathHttpHeaders: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PathHttpHeaders\",\n    modelProperties: {\n      cacheControl: {\n        type: {\n          name: \"String\"\n        }\n      },\n      contentEncoding: {\n        type: {\n          name: \"String\"\n        }\n      },\n      contentLanguage: {\n        type: {\n          name: \"String\"\n        }\n      },\n      contentDisposition: {\n        type: {\n          name: \"String\"\n        }\n      },\n      contentType: {\n        type: {\n          name: \"String\"\n        }\n      },\n      contentMD5: {\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      transactionalContentHash: {\n        type: {\n          name: \"ByteArray\"\n        }\n      }\n    }\n  }\n};\n\nexport const LeaseAccessConditions: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LeaseAccessConditions\",\n    modelProperties: {\n      leaseId: {\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SourceModifiedAccessConditions: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SourceModifiedAccessConditions\",\n    modelProperties: {\n      sourceIfMatch: {\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceIfNoneMatch: {\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceIfModifiedSince: {\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      sourceIfUnmodifiedSince: {\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceListFileSystemsHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"service-listfilesystems-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceListFileSystemsHeaders\",\n    modelProperties: {\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      continuation: {\n        serializedName: \"x-ms-continuation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentType: {\n        serializedName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileSystemCreateHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"filesystem-create-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"FileSystemCreateHeaders\",\n    modelProperties: {\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      namespaceEnabled: {\n        serializedName: \"x-ms-namespace-enabled\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileSystemSetPropertiesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"filesystem-setproperties-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"FileSystemSetPropertiesHeaders\",\n    modelProperties: {\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileSystemGetPropertiesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"filesystem-getproperties-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"FileSystemGetPropertiesHeaders\",\n    modelProperties: {\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"x-ms-properties\",\n        type: {\n          name: \"String\"\n        }\n      },\n      namespaceEnabled: {\n        serializedName: \"x-ms-namespace-enabled\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileSystemDeleteHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"filesystem-delete-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"FileSystemDeleteHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileSystemListPathsHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"filesystem-listpaths-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"FileSystemListPathsHeaders\",\n    modelProperties: {\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      continuation: {\n        serializedName: \"x-ms-continuation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PathCreateHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"path-create-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"PathCreateHeaders\",\n    modelProperties: {\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      continuation: {\n        serializedName: \"x-ms-continuation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentLength: {\n        serializedName: \"content-length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PathUpdateHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"path-update-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"PathUpdateHeaders\",\n    modelProperties: {\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      acceptRanges: {\n        serializedName: \"accept-ranges\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cacheControl: {\n        serializedName: \"cache-control\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentDisposition: {\n        serializedName: \"content-disposition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentEncoding: {\n        serializedName: \"content-encoding\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentLanguage: {\n        serializedName: \"content-language\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentLength: {\n        serializedName: \"content-length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      contentRange: {\n        serializedName: \"content-range\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentType: {\n        serializedName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"x-ms-properties\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PathLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"path-lease-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"PathLeaseHeaders\",\n    modelProperties: {\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      leaseTime: {\n        serializedName: \"x-ms-lease-time\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PathReadHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"path-read-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"PathReadHeaders\",\n    modelProperties: {\n      acceptRanges: {\n        serializedName: \"accept-ranges\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cacheControl: {\n        serializedName: \"cache-control\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentDisposition: {\n        serializedName: \"content-disposition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentEncoding: {\n        serializedName: \"content-encoding\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentLanguage: {\n        serializedName: \"content-language\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentLength: {\n        serializedName: \"content-length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      contentRange: {\n        serializedName: \"content-range\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentType: {\n        serializedName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceType: {\n        serializedName: \"x-ms-resource-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"x-ms-properties\",\n        type: {\n          name: \"String\"\n        }\n      },\n      leaseDuration: {\n        serializedName: \"x-ms-lease-duration\",\n        type: {\n          name: \"String\"\n        }\n      },\n      leaseState: {\n        serializedName: \"x-ms-lease-state\",\n        type: {\n          name: \"String\"\n        }\n      },\n      leaseStatus: {\n        serializedName: \"x-ms-lease-status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      xMsContentMd5: {\n        serializedName: \"x-ms-content-md5\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PathGetPropertiesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"path-getproperties-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"PathGetPropertiesHeaders\",\n    modelProperties: {\n      acceptRanges: {\n        serializedName: \"accept-ranges\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cacheControl: {\n        serializedName: \"cache-control\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentDisposition: {\n        serializedName: \"content-disposition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentEncoding: {\n        serializedName: \"content-encoding\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentLanguage: {\n        serializedName: \"content-language\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentLength: {\n        serializedName: \"content-length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      contentRange: {\n        serializedName: \"content-range\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentType: {\n        serializedName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceType: {\n        serializedName: \"x-ms-resource-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"x-ms-properties\",\n        type: {\n          name: \"String\"\n        }\n      },\n      owner: {\n        serializedName: \"x-ms-owner\",\n        type: {\n          name: \"String\"\n        }\n      },\n      group: {\n        serializedName: \"x-ms-group\",\n        type: {\n          name: \"String\"\n        }\n      },\n      permissions: {\n        serializedName: \"x-ms-permissions\",\n        type: {\n          name: \"String\"\n        }\n      },\n      acl: {\n        serializedName: \"x-ms-acl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      leaseDuration: {\n        serializedName: \"x-ms-lease-duration\",\n        type: {\n          name: \"String\"\n        }\n      },\n      leaseState: {\n        serializedName: \"x-ms-lease-state\",\n        type: {\n          name: \"String\"\n        }\n      },\n      leaseStatus: {\n        serializedName: \"x-ms-lease-status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PathDeleteHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"path-delete-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"PathDeleteHeaders\",\n    modelProperties: {\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      continuation: {\n        serializedName: \"x-ms-continuation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PathSetAccessControlHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"path-setaccesscontrol-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"PathSetAccessControlHeaders\",\n    modelProperties: {\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PathFlushDataHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"path-flushdata-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"PathFlushDataHeaders\",\n    modelProperties: {\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      eTag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      contentLength: {\n        serializedName: \"content-length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PathAppendDataHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"path-appenddata-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"PathAppendDataHeaders\",\n    modelProperties: {\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\n\nexport const acl: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"acl\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-acl\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const action0: coreHttp.OperationQueryParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    required: true,\n    serializedName: \"action\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\n        \"append\",\n        \"flush\",\n        \"setProperties\",\n        \"setAccessControl\"\n      ]\n    }\n  }\n};\nexport const action1: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"action\"\n  ],\n  mapper: {\n    serializedName: \"action\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\n        \"getAccessControl\",\n        \"getStatus\"\n      ]\n    }\n  }\n};\nexport const action2: coreHttp.OperationQueryParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"action\",\n    defaultValue: 'setAccessControl',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const action3: coreHttp.OperationQueryParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"action\",\n    defaultValue: 'flush',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const action4: coreHttp.OperationQueryParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"action\",\n    defaultValue: 'append',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const cacheControl: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"pathHttpHeaders\",\n    \"cacheControl\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-cache-control\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const close: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"close\"\n  ],\n  mapper: {\n    serializedName: \"close\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\nexport const contentDisposition: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"pathHttpHeaders\",\n    \"contentDisposition\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-content-disposition\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const contentEncoding: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"pathHttpHeaders\",\n    \"contentEncoding\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-content-encoding\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const contentLanguage: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"pathHttpHeaders\",\n    \"contentLanguage\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-content-language\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const contentLength: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"contentLength\"\n  ],\n  mapper: {\n    serializedName: \"Content-Length\",\n    constraints: {\n      InclusiveMinimum: 0\n    },\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const contentMD5: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"pathHttpHeaders\",\n    \"contentMD5\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-content-md5\",\n    type: {\n      name: \"ByteArray\"\n    }\n  }\n};\nexport const contentType: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"pathHttpHeaders\",\n    \"contentType\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-content-type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const continuation: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"continuation\"\n  ],\n  mapper: {\n    serializedName: \"continuation\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const group: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"group\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-group\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const ifMatch: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"modifiedAccessConditions\",\n    \"ifMatch\"\n  ],\n  mapper: {\n    serializedName: \"If-Match\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const ifModifiedSince: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"modifiedAccessConditions\",\n    \"ifModifiedSince\"\n  ],\n  mapper: {\n    serializedName: \"If-Modified-Since\",\n    type: {\n      name: \"DateTimeRfc1123\"\n    }\n  }\n};\nexport const ifNoneMatch: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"modifiedAccessConditions\",\n    \"ifNoneMatch\"\n  ],\n  mapper: {\n    serializedName: \"If-None-Match\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const ifUnmodifiedSince: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"modifiedAccessConditions\",\n    \"ifUnmodifiedSince\"\n  ],\n  mapper: {\n    serializedName: \"If-Unmodified-Since\",\n    type: {\n      name: \"DateTimeRfc1123\"\n    }\n  }\n};\nexport const leaseId: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"leaseAccessConditions\",\n    \"leaseId\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-lease-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const maxResults: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"maxResults\"\n  ],\n  mapper: {\n    serializedName: \"maxResults\",\n    constraints: {\n      InclusiveMinimum: 1\n    },\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const mode: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"mode\"\n  ],\n  mapper: {\n    serializedName: \"mode\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\n        \"legacy\",\n        \"posix\"\n      ]\n    }\n  }\n};\nexport const owner: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"owner\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-owner\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const path: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"path\"\n  ],\n  mapper: {\n    serializedName: \"directory\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const permissions: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"permissions\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-permissions\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const position: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"position\"\n  ],\n  mapper: {\n    serializedName: \"position\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const prefix: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"prefix\"\n  ],\n  mapper: {\n    serializedName: \"prefix\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const properties: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"properties\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-properties\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const proposedLeaseId: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"proposedLeaseId\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-proposed-lease-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const range: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"range\"\n  ],\n  mapper: {\n    serializedName: \"Range\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const recursive0: coreHttp.OperationQueryParameter = {\n  parameterPath: \"recursive\",\n  mapper: {\n    required: true,\n    serializedName: \"recursive\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\nexport const recursive1: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"recursive\"\n  ],\n  mapper: {\n    serializedName: \"recursive\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\nexport const renameSource: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"renameSource\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-rename-source\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const requestId: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"requestId\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-client-request-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const resource0: coreHttp.OperationQueryParameter = {\n  parameterPath: \"resource\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"resource\",\n    defaultValue: 'account',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const resource1: coreHttp.OperationQueryParameter = {\n  parameterPath: \"resource\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"resource\",\n    defaultValue: 'filesystem',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const resource2: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"resource\"\n  ],\n  mapper: {\n    serializedName: \"resource\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\n        \"directory\",\n        \"file\"\n      ]\n    }\n  }\n};\nexport const retainUncommittedData: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"retainUncommittedData\"\n  ],\n  mapper: {\n    serializedName: \"retainUncommittedData\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\nexport const sourceIfMatch: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceModifiedAccessConditions\",\n    \"sourceIfMatch\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-if-match\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const sourceIfModifiedSince: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceModifiedAccessConditions\",\n    \"sourceIfModifiedSince\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-if-modified-since\",\n    type: {\n      name: \"DateTimeRfc1123\"\n    }\n  }\n};\nexport const sourceIfNoneMatch: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceModifiedAccessConditions\",\n    \"sourceIfNoneMatch\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-if-none-match\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const sourceIfUnmodifiedSince: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceModifiedAccessConditions\",\n    \"sourceIfUnmodifiedSince\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-if-unmodified-since\",\n    type: {\n      name: \"DateTimeRfc1123\"\n    }\n  }\n};\nexport const sourceLeaseId: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceLeaseId\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-lease-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const timeout: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"timeout\"\n  ],\n  mapper: {\n    serializedName: \"timeout\",\n    constraints: {\n      InclusiveMinimum: 0\n    },\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const transactionalContentHash: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"pathHttpHeaders\",\n    \"transactionalContentHash\"\n  ],\n  mapper: {\n    serializedName: \"Content-MD5\",\n    type: {\n      name: \"ByteArray\"\n    }\n  }\n};\nexport const umask: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"umask\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-umask\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const upn: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"upn\"\n  ],\n  mapper: {\n    serializedName: \"upn\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\nexport const url: coreHttp.OperationURLParameter = {\n  parameterPath: \"url\",\n  mapper: {\n    required: true,\n    serializedName: \"url\",\n    defaultValue: '',\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\nexport const version: coreHttp.OperationParameter = {\n  parameterPath: \"version\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-version\",\n    defaultValue: '2019-07-07',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const xMsLeaseAction: coreHttp.OperationParameter = {\n  parameterPath: \"xMsLeaseAction\",\n  mapper: {\n    required: true,\n    serializedName: \"x-ms-lease-action\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\n        \"acquire\",\n        \"break\",\n        \"change\",\n        \"renew\",\n        \"release\"\n      ]\n    }\n  }\n};\nexport const xMsLeaseBreakPeriod: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"xMsLeaseBreakPeriod\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-lease-break-period\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const xMsLeaseDuration: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"xMsLeaseDuration\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-lease-duration\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const xMsRangeGetContentMd5: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"xMsRangeGetContentMd5\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-range-get-content-md5\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  FileSystemCreateHeaders,\n  FileSystemDeleteHeaders,\n  FileSystemGetPropertiesHeaders,\n  FileSystemListPathsHeaders,\n  FileSystemSetPropertiesHeaders,\n  Path,\n  PathList,\n  StorageError,\n  StorageErrorError\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/fileSystemOperationsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClientContext } from \"../storageClientContext\";\n\n/** Class representing a FileSystemOperations. */\nexport class FileSystemOperations {\n  private readonly client: StorageClientContext;\n\n  /**\n   * Create a FileSystemOperations.\n   * @param {StorageClientContext} client Reference to the service client.\n   */\n  constructor(client: StorageClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Create a FileSystem rooted at the specified location. If the FileSystem already exists, the\n   * operation fails.  This operation does not support conditional HTTP requests.\n   * @summary Create FileSystem\n   * @param [options] The optional parameters\n   * @returns Promise<Models.FileSystemCreateResponse>\n   */\n  create(options?: Models.FileSystemCreateOptionalParams): Promise<Models.FileSystemCreateResponse>;\n  /**\n   * @param callback The callback\n   */\n  create(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  create(options: Models.FileSystemCreateOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  create(options?: Models.FileSystemCreateOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.FileSystemCreateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      createOperationSpec,\n      callback) as Promise<Models.FileSystemCreateResponse>;\n  }\n\n  /**\n   * Set properties for the FileSystem.  This operation supports conditional HTTP requests.  For more\n   * information, see [Specifying Conditional Headers for Blob Service\n   * Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).\n   * @summary Set FileSystem Properties\n   * @param [options] The optional parameters\n   * @returns Promise<Models.FileSystemSetPropertiesResponse>\n   */\n  setProperties(options?: Models.FileSystemSetPropertiesOptionalParams): Promise<Models.FileSystemSetPropertiesResponse>;\n  /**\n   * @param callback The callback\n   */\n  setProperties(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  setProperties(options: Models.FileSystemSetPropertiesOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  setProperties(options?: Models.FileSystemSetPropertiesOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.FileSystemSetPropertiesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      setPropertiesOperationSpec,\n      callback) as Promise<Models.FileSystemSetPropertiesResponse>;\n  }\n\n  /**\n   * All system and user-defined filesystem properties are specified in the response headers.\n   * @summary Get FileSystem Properties.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.FileSystemGetPropertiesResponse>\n   */\n  getProperties(options?: Models.FileSystemGetPropertiesOptionalParams): Promise<Models.FileSystemGetPropertiesResponse>;\n  /**\n   * @param callback The callback\n   */\n  getProperties(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getProperties(options: Models.FileSystemGetPropertiesOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  getProperties(options?: Models.FileSystemGetPropertiesOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.FileSystemGetPropertiesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getPropertiesOperationSpec,\n      callback) as Promise<Models.FileSystemGetPropertiesResponse>;\n  }\n\n  /**\n   * Marks the FileSystem for deletion.  When a FileSystem is deleted, a FileSystem with the same\n   * identifier cannot be created for at least 30 seconds. While the filesystem is being deleted,\n   * attempts to create a filesystem with the same identifier will fail with status code 409\n   * (Conflict), with the service returning additional error information indicating that the\n   * filesystem is being deleted. All other operations, including operations on any files or\n   * directories within the filesystem, will fail with status code 404 (Not Found) while the\n   * filesystem is being deleted. This operation supports conditional HTTP requests.  For more\n   * information, see [Specifying Conditional Headers for Blob Service\n   * Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).\n   * @summary Delete FileSystem\n   * @param [options] The optional parameters\n   * @returns Promise<Models.FileSystemDeleteResponse>\n   */\n  deleteMethod(options?: Models.FileSystemDeleteMethodOptionalParams): Promise<Models.FileSystemDeleteResponse>;\n  /**\n   * @param callback The callback\n   */\n  deleteMethod(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  deleteMethod(options: Models.FileSystemDeleteMethodOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  deleteMethod(options?: Models.FileSystemDeleteMethodOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.FileSystemDeleteResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      deleteMethodOperationSpec,\n      callback) as Promise<Models.FileSystemDeleteResponse>;\n  }\n\n  /**\n   * List FileSystem paths and their properties.\n   * @summary List Paths\n   * @param recursive Required\n   * @param [options] The optional parameters\n   * @returns Promise<Models.FileSystemListPathsResponse>\n   */\n  listPaths(recursive: boolean, options?: Models.FileSystemListPathsOptionalParams): Promise<Models.FileSystemListPathsResponse>;\n  /**\n   * @param recursive Required\n   * @param callback The callback\n   */\n  listPaths(recursive: boolean, callback: coreHttp.ServiceCallback<Models.PathList>): void;\n  /**\n   * @param recursive Required\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listPaths(recursive: boolean, options: Models.FileSystemListPathsOptionalParams, callback: coreHttp.ServiceCallback<Models.PathList>): void;\n  listPaths(recursive: boolean, options?: Models.FileSystemListPathsOptionalParams | coreHttp.ServiceCallback<Models.PathList>, callback?: coreHttp.ServiceCallback<Models.PathList>): Promise<Models.FileSystemListPathsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        recursive,\n        options\n      },\n      listPathsOperationSpec,\n      callback) as Promise<Models.FileSystemListPathsResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new coreHttp.Serializer(Mappers);\nconst createOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{filesystem}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.resource1,\n    Parameters.timeout\n  ],\n  headerParameters: [\n    Parameters.properties,\n    Parameters.requestId,\n    Parameters.version\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.FileSystemCreateHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileSystemCreateHeaders\n    }\n  },\n  serializer\n};\n\nconst setPropertiesOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PATCH\",\n  path: \"{filesystem}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.resource1,\n    Parameters.timeout\n  ],\n  headerParameters: [\n    Parameters.properties,\n    Parameters.requestId,\n    Parameters.version,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.FileSystemSetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileSystemSetPropertiesHeaders\n    }\n  },\n  serializer\n};\n\nconst getPropertiesOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"HEAD\",\n  path: \"{filesystem}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.resource1,\n    Parameters.timeout\n  ],\n  headerParameters: [\n    Parameters.requestId,\n    Parameters.version\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.FileSystemGetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileSystemGetPropertiesHeaders\n    }\n  },\n  serializer\n};\n\nconst deleteMethodOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"{filesystem}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.resource1,\n    Parameters.timeout\n  ],\n  headerParameters: [\n    Parameters.requestId,\n    Parameters.version,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince\n  ],\n  responses: {\n    202: {\n      headersMapper: Mappers.FileSystemDeleteHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileSystemDeleteHeaders\n    }\n  },\n  serializer\n};\n\nconst listPathsOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{filesystem}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.continuation,\n    Parameters.path,\n    Parameters.recursive0,\n    Parameters.maxResults,\n    Parameters.upn,\n    Parameters.resource1,\n    Parameters.timeout\n  ],\n  headerParameters: [\n    Parameters.requestId,\n    Parameters.version\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.PathList,\n      headersMapper: Mappers.FileSystemListPathsHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileSystemListPathsHeaders\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  PathAppendDataHeaders,\n  PathCreateHeaders,\n  PathDeleteHeaders,\n  PathFlushDataHeaders,\n  PathGetPropertiesHeaders,\n  PathLeaseHeaders,\n  PathReadHeaders,\n  PathSetAccessControlHeaders,\n  PathUpdateHeaders,\n  StorageError,\n  StorageErrorError\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/pathOperationsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClientContext } from \"../storageClientContext\";\n\n/** Class representing a PathOperations. */\nexport class PathOperations {\n  private readonly client: StorageClientContext;\n\n  /**\n   * Create a PathOperations.\n   * @param {StorageClientContext} client Reference to the service client.\n   */\n  constructor(client: StorageClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Create or rename a file or directory.    By default, the destination is overwritten and if the\n   * destination already exists and has a lease the lease is broken.  This operation supports\n   * conditional HTTP requests.  For more information, see [Specifying Conditional Headers for Blob\n   * Service\n   * Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).\n   * To fail if the destination already exists, use a conditional request with If-None-Match: \"*\".\n   * @summary Create File | Create Directory | Rename File | Rename Directory\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PathCreateResponse>\n   */\n  create(options?: Models.PathCreateOptionalParams): Promise<Models.PathCreateResponse>;\n  /**\n   * @param callback The callback\n   */\n  create(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  create(options: Models.PathCreateOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  create(options?: Models.PathCreateOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.PathCreateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      createOperationSpec,\n      callback) as Promise<Models.PathCreateResponse>;\n  }\n\n  /**\n   * Uploads data to be appended to a file, flushes (writes) previously uploaded data to a file, sets\n   * properties for a file or directory, or sets access control for a file or directory. Data can\n   * only be appended to a file. This operation supports conditional HTTP requests. For more\n   * information, see [Specifying Conditional Headers for Blob Service\n   * Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).\n   * @summary Append Data | Flush Data | Set Properties | Set Access Control\n   * @param action The action must be \"append\" to upload data to be appended to a file, \"flush\" to\n   * flush previously uploaded data to a file, \"setProperties\" to set the properties of a file or\n   * directory, or \"setAccessControl\" to set the owner, group, permissions, or access control list\n   * for a file or directory.  Note that Hierarchical Namespace must be enabled for the account in\n   * order to use access control.  Also note that the Access Control List (ACL) includes permissions\n   * for the owner, owning group, and others, so the x-ms-permissions and x-ms-acl request headers\n   * are mutually exclusive. Possible values include: 'append', 'flush', 'setProperties',\n   * 'setAccessControl'\n   * @param body Initial data\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PathUpdateResponse>\n   */\n  update(action: Models.PathUpdateAction, body: coreHttp.HttpRequestBody, options?: Models.PathUpdateOptionalParams): Promise<Models.PathUpdateResponse>;\n  /**\n   * @param action The action must be \"append\" to upload data to be appended to a file, \"flush\" to\n   * flush previously uploaded data to a file, \"setProperties\" to set the properties of a file or\n   * directory, or \"setAccessControl\" to set the owner, group, permissions, or access control list\n   * for a file or directory.  Note that Hierarchical Namespace must be enabled for the account in\n   * order to use access control.  Also note that the Access Control List (ACL) includes permissions\n   * for the owner, owning group, and others, so the x-ms-permissions and x-ms-acl request headers\n   * are mutually exclusive. Possible values include: 'append', 'flush', 'setProperties',\n   * 'setAccessControl'\n   * @param body Initial data\n   * @param callback The callback\n   */\n  update(action: Models.PathUpdateAction, body: coreHttp.HttpRequestBody, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param action The action must be \"append\" to upload data to be appended to a file, \"flush\" to\n   * flush previously uploaded data to a file, \"setProperties\" to set the properties of a file or\n   * directory, or \"setAccessControl\" to set the owner, group, permissions, or access control list\n   * for a file or directory.  Note that Hierarchical Namespace must be enabled for the account in\n   * order to use access control.  Also note that the Access Control List (ACL) includes permissions\n   * for the owner, owning group, and others, so the x-ms-permissions and x-ms-acl request headers\n   * are mutually exclusive. Possible values include: 'append', 'flush', 'setProperties',\n   * 'setAccessControl'\n   * @param body Initial data\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  update(action: Models.PathUpdateAction, body: coreHttp.HttpRequestBody, options: Models.PathUpdateOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  update(action: Models.PathUpdateAction, body: coreHttp.HttpRequestBody, options?: Models.PathUpdateOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.PathUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        action,\n        body,\n        options\n      },\n      updateOperationSpec,\n      callback) as Promise<Models.PathUpdateResponse>;\n  }\n\n  /**\n   * Create and manage a lease to restrict write and delete access to the path. This operation\n   * supports conditional HTTP requests.  For more information, see [Specifying Conditional Headers\n   * for Blob Service\n   * Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).\n   * @summary Lease Path\n   * @param xMsLeaseAction There are five lease actions: \"acquire\", \"break\", \"change\", \"renew\", and\n   * \"release\". Use \"acquire\" and specify the \"x-ms-proposed-lease-id\" and \"x-ms-lease-duration\" to\n   * acquire a new lease. Use \"break\" to break an existing lease. When a lease is broken, the lease\n   * break period is allowed to elapse, during which time no lease operation except break and release\n   * can be performed on the file. When a lease is successfully broken, the response indicates the\n   * interval in seconds until a new lease can be acquired. Use \"change\" and specify the current\n   * lease ID in \"x-ms-lease-id\" and the new lease ID in \"x-ms-proposed-lease-id\" to change the lease\n   * ID of an active lease. Use \"renew\" and specify the \"x-ms-lease-id\" to renew an existing lease.\n   * Use \"release\" and specify the \"x-ms-lease-id\" to release a lease. Possible values include:\n   * 'acquire', 'break', 'change', 'renew', 'release'\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PathLeaseResponse>\n   */\n  lease(xMsLeaseAction: Models.PathLeaseAction, options?: Models.PathLeaseOptionalParams): Promise<Models.PathLeaseResponse>;\n  /**\n   * @param xMsLeaseAction There are five lease actions: \"acquire\", \"break\", \"change\", \"renew\", and\n   * \"release\". Use \"acquire\" and specify the \"x-ms-proposed-lease-id\" and \"x-ms-lease-duration\" to\n   * acquire a new lease. Use \"break\" to break an existing lease. When a lease is broken, the lease\n   * break period is allowed to elapse, during which time no lease operation except break and release\n   * can be performed on the file. When a lease is successfully broken, the response indicates the\n   * interval in seconds until a new lease can be acquired. Use \"change\" and specify the current\n   * lease ID in \"x-ms-lease-id\" and the new lease ID in \"x-ms-proposed-lease-id\" to change the lease\n   * ID of an active lease. Use \"renew\" and specify the \"x-ms-lease-id\" to renew an existing lease.\n   * Use \"release\" and specify the \"x-ms-lease-id\" to release a lease. Possible values include:\n   * 'acquire', 'break', 'change', 'renew', 'release'\n   * @param callback The callback\n   */\n  lease(xMsLeaseAction: Models.PathLeaseAction, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param xMsLeaseAction There are five lease actions: \"acquire\", \"break\", \"change\", \"renew\", and\n   * \"release\". Use \"acquire\" and specify the \"x-ms-proposed-lease-id\" and \"x-ms-lease-duration\" to\n   * acquire a new lease. Use \"break\" to break an existing lease. When a lease is broken, the lease\n   * break period is allowed to elapse, during which time no lease operation except break and release\n   * can be performed on the file. When a lease is successfully broken, the response indicates the\n   * interval in seconds until a new lease can be acquired. Use \"change\" and specify the current\n   * lease ID in \"x-ms-lease-id\" and the new lease ID in \"x-ms-proposed-lease-id\" to change the lease\n   * ID of an active lease. Use \"renew\" and specify the \"x-ms-lease-id\" to renew an existing lease.\n   * Use \"release\" and specify the \"x-ms-lease-id\" to release a lease. Possible values include:\n   * 'acquire', 'break', 'change', 'renew', 'release'\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  lease(xMsLeaseAction: Models.PathLeaseAction, options: Models.PathLeaseOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  lease(xMsLeaseAction: Models.PathLeaseAction, options?: Models.PathLeaseOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.PathLeaseResponse> {\n    return this.client.sendOperationRequest(\n      {\n        xMsLeaseAction,\n        options\n      },\n      leaseOperationSpec,\n      callback) as Promise<Models.PathLeaseResponse>;\n  }\n\n  /**\n   * Read the contents of a file.  For read operations, range requests are supported. This operation\n   * supports conditional HTTP requests.  For more information, see [Specifying Conditional Headers\n   * for Blob Service\n   * Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).\n   * @summary Read File\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PathReadResponse>\n   */\n  read(options?: Models.PathReadOptionalParams): Promise<Models.PathReadResponse>;\n  /**\n   * @param callback The callback\n   */\n  read(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  read(options: Models.PathReadOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  read(options?: Models.PathReadOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.PathReadResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      readOperationSpec,\n      callback) as Promise<Models.PathReadResponse>;\n  }\n\n  /**\n   * Get Properties returns all system and user defined properties for a path. Get Status returns all\n   * system defined properties for a path. Get Access Control List returns the access control list\n   * for a path. This operation supports conditional HTTP requests.  For more information, see\n   * [Specifying Conditional Headers for Blob Service\n   * Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).\n   * @summary Get Properties | Get Status | Get Access Control List\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PathGetPropertiesResponse>\n   */\n  getProperties(options?: Models.PathGetPropertiesOptionalParams): Promise<Models.PathGetPropertiesResponse>;\n  /**\n   * @param callback The callback\n   */\n  getProperties(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getProperties(options: Models.PathGetPropertiesOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  getProperties(options?: Models.PathGetPropertiesOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.PathGetPropertiesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getPropertiesOperationSpec,\n      callback) as Promise<Models.PathGetPropertiesResponse>;\n  }\n\n  /**\n   * Delete the file or directory. This operation supports conditional HTTP requests.  For more\n   * information, see [Specifying Conditional Headers for Blob Service\n   * Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).\n   * @summary Delete File | Delete Directory\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PathDeleteResponse>\n   */\n  deleteMethod(options?: Models.PathDeleteMethodOptionalParams): Promise<Models.PathDeleteResponse>;\n  /**\n   * @param callback The callback\n   */\n  deleteMethod(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  deleteMethod(options: Models.PathDeleteMethodOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  deleteMethod(options?: Models.PathDeleteMethodOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.PathDeleteResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      deleteMethodOperationSpec,\n      callback) as Promise<Models.PathDeleteResponse>;\n  }\n\n  /**\n   * Set the owner, group, permissions, or access control list for a path.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PathSetAccessControlResponse>\n   */\n  setAccessControl(options?: Models.PathSetAccessControlOptionalParams): Promise<Models.PathSetAccessControlResponse>;\n  /**\n   * @param callback The callback\n   */\n  setAccessControl(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  setAccessControl(options: Models.PathSetAccessControlOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  setAccessControl(options?: Models.PathSetAccessControlOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.PathSetAccessControlResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      setAccessControlOperationSpec,\n      callback) as Promise<Models.PathSetAccessControlResponse>;\n  }\n\n  /**\n   * Set the owner, group, permissions, or access control list for a path.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PathFlushDataResponse>\n   */\n  flushData(options?: Models.PathFlushDataOptionalParams): Promise<Models.PathFlushDataResponse>;\n  /**\n   * @param callback The callback\n   */\n  flushData(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  flushData(options: Models.PathFlushDataOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  flushData(options?: Models.PathFlushDataOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.PathFlushDataResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      flushDataOperationSpec,\n      callback) as Promise<Models.PathFlushDataResponse>;\n  }\n\n  /**\n   * Append data to the file.\n   * @param body Initial data\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PathAppendDataResponse>\n   */\n  appendData(body: coreHttp.HttpRequestBody, options?: Models.PathAppendDataOptionalParams): Promise<Models.PathAppendDataResponse>;\n  /**\n   * @param body Initial data\n   * @param callback The callback\n   */\n  appendData(body: coreHttp.HttpRequestBody, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param body Initial data\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  appendData(body: coreHttp.HttpRequestBody, options: Models.PathAppendDataOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  appendData(body: coreHttp.HttpRequestBody, options?: Models.PathAppendDataOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.PathAppendDataResponse> {\n    return this.client.sendOperationRequest(\n      {\n        body,\n        options\n      },\n      appendDataOperationSpec,\n      callback) as Promise<Models.PathAppendDataResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new coreHttp.Serializer(Mappers);\nconst createOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{filesystem}/{path}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.resource2,\n    Parameters.continuation,\n    Parameters.mode,\n    Parameters.timeout\n  ],\n  headerParameters: [\n    Parameters.renameSource,\n    Parameters.sourceLeaseId,\n    Parameters.properties,\n    Parameters.permissions,\n    Parameters.umask,\n    Parameters.requestId,\n    Parameters.version,\n    Parameters.cacheControl,\n    Parameters.contentEncoding,\n    Parameters.contentLanguage,\n    Parameters.contentDisposition,\n    Parameters.contentType,\n    Parameters.leaseId,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.sourceIfMatch,\n    Parameters.sourceIfNoneMatch,\n    Parameters.sourceIfModifiedSince,\n    Parameters.sourceIfUnmodifiedSince\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.PathCreateHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PathCreateHeaders\n    }\n  },\n  serializer\n};\n\nconst updateOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PATCH\",\n  path: \"{filesystem}/{path}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.action0,\n    Parameters.position,\n    Parameters.retainUncommittedData,\n    Parameters.close,\n    Parameters.timeout\n  ],\n  headerParameters: [\n    Parameters.contentLength,\n    Parameters.properties,\n    Parameters.owner,\n    Parameters.group,\n    Parameters.permissions,\n    Parameters.acl,\n    Parameters.requestId,\n    Parameters.version,\n    Parameters.contentMD5,\n    Parameters.cacheControl,\n    Parameters.contentType,\n    Parameters.contentDisposition,\n    Parameters.contentEncoding,\n    Parameters.contentLanguage,\n    Parameters.leaseId,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince\n  ],\n  requestBody: {\n    parameterPath: \"body\",\n    mapper: {\n      required: true,\n      serializedName: \"body\",\n      type: {\n        name: \"Stream\"\n      }\n    }\n  },\n  contentType: \"application/octet-stream\",\n  responses: {\n    200: {\n      headersMapper: Mappers.PathUpdateHeaders\n    },\n    202: {\n      headersMapper: Mappers.PathUpdateHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PathUpdateHeaders\n    }\n  },\n  serializer\n};\n\nconst leaseOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"{filesystem}/{path}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout\n  ],\n  headerParameters: [\n    Parameters.xMsLeaseAction,\n    Parameters.xMsLeaseDuration,\n    Parameters.xMsLeaseBreakPeriod,\n    Parameters.proposedLeaseId,\n    Parameters.requestId,\n    Parameters.version,\n    Parameters.leaseId,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.PathLeaseHeaders\n    },\n    201: {\n      headersMapper: Mappers.PathLeaseHeaders\n    },\n    202: {\n      headersMapper: Mappers.PathLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PathLeaseHeaders\n    }\n  },\n  serializer\n};\n\nconst readOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{filesystem}/{path}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout\n  ],\n  headerParameters: [\n    Parameters.range,\n    Parameters.xMsRangeGetContentMd5,\n    Parameters.requestId,\n    Parameters.version,\n    Parameters.leaseId,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince\n  ],\n  responses: {\n    200: {\n      bodyMapper: {\n        serializedName: \"parsedResponse\",\n        type: {\n          name: \"Stream\"\n        }\n      },\n      headersMapper: Mappers.PathReadHeaders\n    },\n    206: {\n      bodyMapper: {\n        serializedName: \"parsedResponse\",\n        type: {\n          name: \"Stream\"\n        }\n      },\n      headersMapper: Mappers.PathReadHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PathReadHeaders\n    }\n  },\n  serializer\n};\n\nconst getPropertiesOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"HEAD\",\n  path: \"{filesystem}/{path}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.action1,\n    Parameters.upn,\n    Parameters.timeout\n  ],\n  headerParameters: [\n    Parameters.requestId,\n    Parameters.version,\n    Parameters.leaseId,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.PathGetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PathGetPropertiesHeaders\n    }\n  },\n  serializer\n};\n\nconst deleteMethodOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"{filesystem}/{path}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.recursive1,\n    Parameters.continuation,\n    Parameters.timeout\n  ],\n  headerParameters: [\n    Parameters.requestId,\n    Parameters.version,\n    Parameters.leaseId,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.PathDeleteHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PathDeleteHeaders\n    }\n  },\n  serializer\n};\n\nconst setAccessControlOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PATCH\",\n  path: \"{filesystem}/{path}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.action2\n  ],\n  headerParameters: [\n    Parameters.owner,\n    Parameters.group,\n    Parameters.permissions,\n    Parameters.acl,\n    Parameters.requestId,\n    Parameters.version,\n    Parameters.leaseId,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.PathSetAccessControlHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PathSetAccessControlHeaders\n    }\n  },\n  serializer\n};\n\nconst flushDataOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PATCH\",\n  path: \"{filesystem}/{path}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeout,\n    Parameters.position,\n    Parameters.retainUncommittedData,\n    Parameters.close,\n    Parameters.action3\n  ],\n  headerParameters: [\n    Parameters.contentLength,\n    Parameters.requestId,\n    Parameters.version,\n    Parameters.contentMD5,\n    Parameters.cacheControl,\n    Parameters.contentType,\n    Parameters.contentDisposition,\n    Parameters.contentEncoding,\n    Parameters.contentLanguage,\n    Parameters.leaseId,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.PathFlushDataHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PathFlushDataHeaders\n    }\n  },\n  serializer\n};\n\nconst appendDataOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PATCH\",\n  path: \"{filesystem}/{path}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.position,\n    Parameters.timeout,\n    Parameters.action4\n  ],\n  headerParameters: [\n    Parameters.contentLength,\n    Parameters.requestId,\n    Parameters.version,\n    Parameters.transactionalContentHash,\n    Parameters.leaseId\n  ],\n  requestBody: {\n    parameterPath: \"body\",\n    mapper: {\n      required: true,\n      serializedName: \"body\",\n      type: {\n        name: \"Stream\"\n      }\n    }\n  },\n  responses: {\n    202: {\n      headersMapper: Mappers.PathAppendDataHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PathAppendDataHeaders\n    }\n  },\n  serializer\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { createClientLogger } from \"@azure/logger\";\n\n/**\n * The @azure/logger configuration for this package.\n */\nexport const logger = createClientLogger(\"storage-file-datalake\");\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nexport const SDK_VERSION: string = \"12.0.0-preview.8\";\nexport const SERVICE_VERSION: string = \"2019-07-07\";\n\nexport const StorageOAuthScopes: string | string[] = \"https://storage.azure.com/.default\";\n\nexport const StorageDataLakeLoggingAllowedHeaderNames = [\n  \"Access-Control-Allow-Origin\",\n  \"Cache-Control\",\n  \"Content-Length\",\n  \"Content-Type\",\n  \"Date\",\n  \"Request-Id\",\n  \"traceparent\",\n  \"Transfer-Encoding\",\n  \"User-Agent\",\n  \"x-ms-client-request-id\",\n  \"x-ms-date\",\n  \"x-ms-error-code\",\n  \"x-ms-request-id\",\n  \"x-ms-return-client-request-id\",\n  \"x-ms-version\",\n  \"Accept-Ranges\",\n  \"Content-Disposition\",\n  \"Content-Encoding\",\n  \"Content-Language\",\n  \"Content-MD5\",\n  \"Content-Range\",\n  \"ETag\",\n  \"Last-Modified\",\n  \"Server\",\n  \"Vary\",\n  \"x-ms-content-crc64\",\n  \"x-ms-copy-action\",\n  \"x-ms-copy-completion-time\",\n  \"x-ms-copy-id\",\n  \"x-ms-copy-progress\",\n  \"x-ms-copy-status\",\n  \"x-ms-has-immutability-policy\",\n  \"x-ms-has-legal-hold\",\n  \"x-ms-lease-state\",\n  \"x-ms-lease-status\",\n  \"x-ms-range\",\n  \"x-ms-request-server-encrypted\",\n  \"x-ms-server-encrypted\",\n  \"x-ms-snapshot\",\n  \"x-ms-source-range\",\n  \"If-Match\",\n  \"If-Modified-Since\",\n  \"If-None-Match\",\n  \"If-Unmodified-Since\",\n  \"x-ms-access-tier\",\n  \"x-ms-access-tier-change-time\",\n  \"x-ms-access-tier-inferred\",\n  \"x-ms-account-kind\",\n  \"x-ms-archive-status\",\n  \"x-ms-blob-append-offset\",\n  \"x-ms-blob-cache-control\",\n  \"x-ms-blob-committed-block-count\",\n  \"x-ms-blob-condition-appendpos\",\n  \"x-ms-blob-condition-maxsize\",\n  \"x-ms-blob-content-disposition\",\n  \"x-ms-blob-content-encoding\",\n  \"x-ms-blob-content-language\",\n  \"x-ms-blob-content-length\",\n  \"x-ms-blob-content-md5\",\n  \"x-ms-blob-content-type\",\n  \"x-ms-blob-public-access\",\n  \"x-ms-blob-sequence-number\",\n  \"x-ms-blob-type\",\n  \"x-ms-copy-destination-snapshot\",\n  \"x-ms-creation-time\",\n  \"x-ms-default-encryption-scope\",\n  \"x-ms-delete-snapshots\",\n  \"x-ms-delete-type-permanent\",\n  \"x-ms-deny-encryption-scope-override\",\n  \"x-ms-encryption-algorithm\",\n  \"x-ms-if-sequence-number-eq\",\n  \"x-ms-if-sequence-number-le\",\n  \"x-ms-if-sequence-number-lt\",\n  \"x-ms-incremental-copy\",\n  \"x-ms-lease-action\",\n  \"x-ms-lease-break-period\",\n  \"x-ms-lease-duration\",\n  \"x-ms-lease-id\",\n  \"x-ms-lease-time\",\n  \"x-ms-page-write\",\n  \"x-ms-proposed-lease-id\",\n  \"x-ms-range-get-content-md5\",\n  \"x-ms-rehydrate-priority\",\n  \"x-ms-sequence-number-action\",\n  \"x-ms-sku-name\",\n  \"x-ms-source-content-md5\",\n  \"x-ms-source-if-match\",\n  \"x-ms-source-if-modified-since\",\n  \"x-ms-source-if-none-match\",\n  \"x-ms-source-if-unmodified-since\",\n  \"x-ms-tag-count\",\n  \"x-ms-encryption-key-sha256\"\n];\n\nexport const StorageDataLakeLoggingAllowedQueryParameters = [\n  \"comp\",\n  \"maxresults\",\n  \"rscc\",\n  \"rscd\",\n  \"rsce\",\n  \"rscl\",\n  \"rsct\",\n  \"se\",\n  \"si\",\n  \"sip\",\n  \"sp\",\n  \"spr\",\n  \"sr\",\n  \"srt\",\n  \"ss\",\n  \"st\",\n  \"sv\",\n  \"include\",\n  \"marker\",\n  \"prefix\",\n  \"copyid\",\n  \"restype\",\n  \"blockid\",\n  \"blocklisttype\",\n  \"delimiter\",\n  \"prevsnapshot\",\n  \"ske\",\n  \"skoid\",\n  \"sks\",\n  \"skt\",\n  \"sktid\",\n  \"skv\",\n  \"snapshot\"\n];\n\nexport const UrlConstants = {\n  Parameters: {\n    FORCE_BROWSER_NO_CACHE: \"_\",\n    SIGNATURE: \"sig\",\n    SNAPSHOT: \"snapshot\",\n    TIMEOUT: \"timeout\"\n  }\n};\n\nexport const HttpUrlConnection = {\n  HTTP_ACCEPTED: 202,\n  HTTP_CONFLICT: 409,\n  HTTP_NOT_FOUND: 404,\n  HTTP_PRECON_FAILED: 412,\n  HTTP_RANGE_NOT_SATISFIABLE: 416\n};\n\nexport const HeaderConstants = {\n  AUTHORIZATION: \"Authorization\",\n  AUTHORIZATION_SCHEME: \"Bearer\",\n  CONTENT_ENCODING: \"Content-Encoding\",\n  CONTENT_ID: \"Content-ID\",\n  CONTENT_LANGUAGE: \"Content-Language\",\n  CONTENT_LENGTH: \"Content-Length\",\n  CONTENT_MD5: \"Content-Md5\",\n  CONTENT_TRANSFER_ENCODING: \"Content-Transfer-Encoding\",\n  CONTENT_TYPE: \"Content-Type\",\n  COOKIE: \"Cookie\",\n  DATE: \"date\",\n  IF_MATCH: \"if-match\",\n  IF_MODIFIED_SINCE: \"if-modified-since\",\n  IF_NONE_MATCH: \"if-none-match\",\n  IF_UNMODIFIED_SINCE: \"if-unmodified-since\",\n  PREFIX_FOR_STORAGE: \"x-ms-\",\n  RANGE: \"Range\",\n  USER_AGENT: \"User-Agent\",\n  X_MS_CLIENT_REQUEST_ID: \"x-ms-client-request-id\",\n  X_MS_COPY_SOURCE: \"x-ms-copy-source\",\n  X_MS_DATE: \"x-ms-date\",\n  X_MS_ERROR_CODE: \"x-ms-error-code\",\n  X_MS_VERSION: \"x-ms-version\"\n};\n\nexport const DevelopmentConnectionString = `DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://127.0.0.1:10000/devstoreaccount1;`;\n\n// Mapping pairs to transform url from dfs endpoint to blob endpoint\n// Customize this value to add more mapping patterns\nexport const ToBlobEndpointHostMappings = [[\"dfs.core.windows.net\", \"blob.core.windows.net\"]];\n\n// Mapping pairs to transform url from blob endpoint to dfs endpoint\n// Customize this value to add more mapping patterns\nexport const ToDfsEndpointHostMappings = [[\"blob.core.windows.net\", \"dfs.core.windows.net\"]];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { HttpHeaders, isNode, URLBuilder } from \"@azure/core-http\";\n\nimport { DevelopmentConnectionString, HeaderConstants, UrlConstants } from \"./constants\";\n\n/**\n * Reserved URL characters must be properly escaped for Storage services like Blob or File.\n *\n * ## URL encode and escape strategy for JS SDKs\n *\n * When customers pass a URL string into XxxClient classes constructors, the URL string may already be URL encoded or not.\n * But before sending to Azure Storage server, the URL must be encoded. However, it's hard for a SDK to guess whether the URL\n * string has been encoded or not. We have 2 potential strategies, and chose strategy two for the XxxClient constructors.\n *\n * ### Strategy One: Assume the customer URL string is not encoded, and always encode URL string in SDK.\n *\n * This is what legacy V2 SDK does, simple and works for most of the cases.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b:\",\n *   SDK will encode it to \"http://account.blob.core.windows.net/con/b%3A\" and send to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%3A\",\n *   SDK will encode it to \"http://account.blob.core.windows.net/con/b%253A\" and send to server. A blob named \"b%3A\" will be created.\n *\n * But this strategy will make it not possible to create a blob with \"?\" in it's name. Because when customer URL string is\n * \"http://account.blob.core.windows.net/con/blob?name\", the \"?name\" will be treated as URL paramter instead of blob name.\n * If customer URL string is \"http://account.blob.core.windows.net/con/blob%3Fname\", a blob named \"blob%3Fname\" will be created.\n * V2 SDK doesn't have this issue because it doesn't allow customer pass in a full URL, it accepts a separate blob name and encodeURIComponent for it.\n * We cannot accept a SDK cannot create a blob name with \"?\". So we implement strategy two:\n *\n * ### Strategy Two: SDK doesn't assume the URL has been encoded or not. It will just escape the special characters.\n *\n * This is what V10 Blob Go SDK does. It accepts a URL type in Go, and call url.EscapedPath() to escape the special chars unescaped.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b:\",\n *   SDK will escape \":\" like \"http://account.blob.core.windows.net/con/b%3A\" and send to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%3A\",\n *   There is no special characters, so send \"http://account.blob.core.windows.net/con/b%3A\" to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%253A\",\n *   There is no special characters, so send \"http://account.blob.core.windows.net/con/b%253A\" to server. A blob named \"b%3A\" will be created.\n *\n * This strategy gives us flexibility to create with any special characters. But \"%\" will be treated as a special characters, if the URL string\n * is not encoded, there shouldn't a \"%\" in the URL string, otherwise the URL is not a valid URL.\n * If customer needs to create a blob with \"%\" in it's blob name, use \"%25\" instead of \"%\". Just like above 3rd sample.\n * And following URL strings are invalid:\n * - \"http://account.blob.core.windows.net/con/b%\"\n * - \"http://account.blob.core.windows.net/con/b%2\"\n * - \"http://account.blob.core.windows.net/con/b%G\"\n *\n * Another special character is \"?\", use \"%2F\" to represent a blob name with \"?\" in a URL string.\n *\n * ### Strategy for containerName, blobName or other specific XXXName parameters in methods such as `containerClient.getBlobClient(blobName)`\n *\n * We will apply strategy one, and call encodeURIComponent for these parameters like blobName. Because what customers passes in is a plain name instead of a URL.\n *\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-shares--directories--files--and-metadata\n *\n * @export\n * @param {string} url\n * @returns {string}\n */\nexport function escapeURLPath(url: string): string {\n  const urlParsed = URLBuilder.parse(url);\n\n  let path = urlParsed.getPath();\n  path = path || \"/\";\n\n  path = escape(path);\n  urlParsed.setPath(path);\n\n  return urlParsed.toString();\n}\n\nexport interface ConnectionString {\n  kind: \"AccountConnString\" | \"SASConnString\";\n  url: string;\n  accountName: string;\n  accountKey?: any;\n  accountSas?: string;\n  proxyUri?: string; // Development Connection String may contain proxyUri\n}\n\nfunction getProxyUriFromDevConnString(connectionString: string): string {\n  // Development Connection String\n  // https://docs.microsoft.com/en-us/azure/storage/common/storage-configure-connection-string#connect-to-the-emulator-account-using-the-well-known-account-name-and-key\n  let proxyUri = \"\";\n  if (connectionString.search(\"DevelopmentStorageProxyUri=\") !== -1) {\n    // CONNECTION_STRING=UseDevelopmentStorage=true;DevelopmentStorageProxyUri=http://myProxyUri\n    const matchCredentials = connectionString.split(\";\");\n    for (const element of matchCredentials) {\n      if (element.trim().startsWith(\"DevelopmentStorageProxyUri=\")) {\n        proxyUri = element.trim().match(\"DevelopmentStorageProxyUri=(.*)\")![1];\n      }\n    }\n  }\n  return proxyUri;\n}\n\nexport function getValueInConnString(\n  connectionString: string,\n  argument:\n    | \"BlobEndpoint\"\n    | \"AccountName\"\n    | \"AccountKey\"\n    | \"DefaultEndpointsProtocol\"\n    | \"EndpointSuffix\"\n    | \"SharedAccessSignature\"\n) {\n  const elements = connectionString.split(\";\");\n  for (const element of elements) {\n    if (element.trim().startsWith(argument)) {\n      return element.trim().match(argument + \"=(.*)\")![1];\n    }\n  }\n  return \"\";\n}\n\n/**\n * Extracts the parts of an Azure Storage account connection string.\n *\n * @export\n * @param {string} connectionString Connection string.\n * @returns {ConnectionString}  String key value pairs of the storage account's url and credentials.\n */\nexport function extractConnectionStringParts(connectionString: string): ConnectionString {\n  let proxyUri = \"\";\n\n  if (connectionString.startsWith(\"UseDevelopmentStorage=true\")) {\n    // Development connection string\n    proxyUri = getProxyUriFromDevConnString(connectionString);\n    connectionString = DevelopmentConnectionString;\n  }\n\n  // Matching BlobEndpoint in the Account connection string\n  let blobEndpoint = getValueInConnString(connectionString, \"BlobEndpoint\");\n  // Slicing off '/' at the end if exists\n  // (The methods that use `extractConnectionStringParts` expect the url to not have `/` at the end)\n  blobEndpoint = blobEndpoint.endsWith(\"/\") ? blobEndpoint.slice(0, -1) : blobEndpoint;\n\n  if (\n    connectionString.search(\"DefaultEndpointsProtocol=\") !== -1 &&\n    connectionString.search(\"AccountKey=\") !== -1\n  ) {\n    // Account connection string\n\n    let defaultEndpointsProtocol = \"\";\n    let accountName = \"\";\n    let accountKey = Buffer.from(\"accountKey\", \"base64\");\n    let endpointSuffix = \"\";\n\n    // Get account name and key\n    accountName = getValueInConnString(connectionString, \"AccountName\");\n    accountKey = Buffer.from(getValueInConnString(connectionString, \"AccountKey\"), \"base64\");\n\n    if (!blobEndpoint) {\n      // BlobEndpoint is not present in the Account connection string\n      // Can be obtained from `${defaultEndpointsProtocol}://${accountName}.blob.${endpointSuffix}`\n\n      defaultEndpointsProtocol = getValueInConnString(connectionString, \"DefaultEndpointsProtocol\");\n      const protocol = defaultEndpointsProtocol!.toLowerCase();\n      if (protocol !== \"https\" && protocol !== \"http\") {\n        throw new Error(\n          \"Invalid DefaultEndpointsProtocol in the provided Connection String. Expecting 'https' or 'http'\"\n        );\n      }\n\n      endpointSuffix = getValueInConnString(connectionString, \"EndpointSuffix\");\n      if (!endpointSuffix) {\n        throw new Error(\"Invalid EndpointSuffix in the provided Connection String\");\n      }\n      blobEndpoint = `${defaultEndpointsProtocol}://${accountName}.blob.${endpointSuffix}`;\n    }\n\n    if (!accountName) {\n      throw new Error(\"Invalid AccountName in the provided Connection String\");\n    } else if (accountKey.length === 0) {\n      throw new Error(\"Invalid AccountKey in the provided Connection String\");\n    }\n\n    return {\n      kind: \"AccountConnString\",\n      url: blobEndpoint,\n      accountName,\n      accountKey,\n      proxyUri\n    };\n  } else {\n    // SAS connection string\n\n    let accountSas = getValueInConnString(connectionString, \"SharedAccessSignature\");\n    let accountName = getAccountNameFromUrl(blobEndpoint);\n    if (!blobEndpoint) {\n      throw new Error(\"Invalid BlobEndpoint in the provided SAS Connection String\");\n    } else if (!accountSas) {\n      throw new Error(\"Invalid SharedAccessSignature in the provided SAS Connection String\");\n    } else if (!accountName) {\n      throw new Error(\"Invalid AccountName in the provided SAS Connection String\");\n    }\n\n    return { kind: \"SASConnString\", url: blobEndpoint, accountName, accountSas };\n  }\n}\n\n/**\n * Internal escape method implemented Strategy Two mentioned in escapeURL() description.\n *\n * @param {string} text\n * @returns {string}\n */\nfunction escape(text: string): string {\n  return encodeURIComponent(text)\n    .replace(/%2F/g, \"/\") // Don't escape for \"/\"\n    .replace(/'/g, \"%27\") // Escape for \"'\"\n    .replace(/\\+/g, \"%20\")\n    .replace(/%25/g, \"%\"); // Revert encoded \"%\"\n}\n\n/**\n * Append a string to URL path. Will remove duplicated \"/\" in front of the string\n * when URL path ends with a \"/\".\n *\n * @export\n * @param {string} url Source URL string\n * @param {string} name String to be appended to URL\n * @returns {string} An updated URL string\n */\nexport function appendToURLPath(url: string, name: string): string {\n  const urlParsed = URLBuilder.parse(url);\n\n  let path = urlParsed.getPath();\n  path = path ? (path.endsWith(\"/\") ? `${path}${name}` : `${path}/${name}`) : name;\n  urlParsed.setPath(path);\n\n  return urlParsed.toString();\n}\n\n/**\n * Set URL parameter name and value. If name exists in URL parameters, old value\n * will be replaced by name key. If not provide value, the parameter will be deleted.\n *\n * @export\n * @param {string} url Source URL string\n * @param {string} name Parameter name\n * @param {string} [value] Parameter value\n * @returns {string} An updated URL string\n */\nexport function setURLParameter(url: string, name: string, value?: string): string {\n  const urlParsed = URLBuilder.parse(url);\n  urlParsed.setQueryParameter(name, value);\n  return urlParsed.toString();\n}\n\n/**\n * Get URL parameter by name.\n *\n * @export\n * @param {string} url\n * @param {string} name\n * @returns {(string | string[] | undefined)}\n */\nexport function getURLParameter(url: string, name: string): string | string[] | undefined {\n  const urlParsed = URLBuilder.parse(url);\n  return urlParsed.getQueryParameterValue(name);\n}\n\n/**\n * Set URL host.\n *\n * @export\n * @param {string} url Source URL string\n * @param {string} host New host string\n * @returns An updated URL string\n */\nexport function setURLHost(url: string, host: string): string {\n  const urlParsed = URLBuilder.parse(url);\n  urlParsed.setHost(host);\n  return urlParsed.toString();\n}\n\n/**\n * Get URL path from an URL string.\n *\n * @export\n * @param {string} url Source URL string\n * @returns {(string | undefined)}\n */\nexport function getURLPath(url: string): string | undefined {\n  const urlParsed = URLBuilder.parse(url);\n  return urlParsed.getPath();\n}\n\n/**\n * Set URL path.\n *\n * @export\n * @param {string} url\n * @param {string} [path]\n * @returns {string}\n */\nexport function setURLPath(url: string, path?: string): string {\n  const urlParsed = URLBuilder.parse(url);\n  urlParsed.setPath(path);\n  return urlParsed.toString();\n}\n\n/**\n * Get URL scheme from an URL string.\n *\n * @export\n * @param {string} url Source URL string\n * @returns {(string | undefined)}\n */\nexport function getURLScheme(url: string): string | undefined {\n  const urlParsed = URLBuilder.parse(url);\n  return urlParsed.getScheme();\n}\n\n/**\n * Get URL path and query from an URL string.\n *\n * @export\n * @param {string} url Source URL string\n * @returns {(string | undefined)}\n */\nexport function getURLPathAndQuery(url: string): string | undefined {\n  const urlParsed = URLBuilder.parse(url);\n  const pathString = urlParsed.getPath();\n  if (!pathString) {\n    throw new RangeError(\"Invalid url without valid path.\");\n  }\n\n  let queryString = urlParsed.getQuery() || \"\";\n  queryString = queryString.trim();\n  if (queryString != \"\") {\n    queryString = queryString.startsWith(\"?\") ? queryString : `?${queryString}`; // Ensure query string start with '?'\n  }\n\n  return `${pathString}${queryString}`;\n}\n\n/**\n * Get URL query key value pairs from an URL string.\n *\n * @export\n * @param {string} url\n * @returns {{[key: string]: string}}\n */\nexport function getURLQueries(url: string): { [key: string]: string } {\n  let queryString = URLBuilder.parse(url).getQuery();\n  if (!queryString) {\n    return {};\n  }\n\n  queryString = queryString.trim();\n  queryString = queryString.startsWith(\"?\") ? queryString.substr(1) : queryString;\n\n  let querySubStrings: string[] = queryString.split(\"&\");\n  querySubStrings = querySubStrings.filter((value: string) => {\n    const indexOfEqual = value.indexOf(\"=\");\n    const lastIndexOfEqual = value.lastIndexOf(\"=\");\n    return (\n      indexOfEqual > 0 && indexOfEqual === lastIndexOfEqual && lastIndexOfEqual < value.length - 1\n    );\n  });\n\n  const queries: { [key: string]: string } = {};\n  for (const querySubString of querySubStrings) {\n    const splitResults = querySubString.split(\"=\");\n    const key: string = splitResults[0];\n    const value: string = splitResults[1];\n    queries[key] = value;\n  }\n\n  return queries;\n}\n\n/**\n * Rounds a date off to seconds.\n *\n * @export\n * @param {Date} date\n * @param {boolean} [withMilliseconds=true] If true, YYYY-MM-DDThh:mm:ss.fffffffZ will be returned;\n *                                          If false, YYYY-MM-DDThh:mm:ssZ will be returned.\n * @returns {string} Date string in ISO8061 format, with or without 7 milliseconds component\n */\nexport function truncatedISO8061Date(date: Date, withMilliseconds: boolean = true): string {\n  // Date.toISOString() will return like \"2018-10-29T06:34:36.139Z\"\n  const dateString = date.toISOString();\n\n  return withMilliseconds\n    ? dateString.substring(0, dateString.length - 1) + \"0000\" + \"Z\"\n    : dateString.substring(0, dateString.length - 5) + \"Z\";\n}\n\n/**\n * Base64 encode.\n *\n * @export\n * @param {string} content\n * @returns {string}\n */\nexport function base64encode(content: string): string {\n  return !isNode ? btoa(content) : Buffer.from(content).toString(\"base64\");\n}\n\n/**\n * Base64 decode.\n *\n * @export\n * @param {string} encodedString\n * @returns {string}\n */\nexport function base64decode(encodedString: string): string {\n  return !isNode ? atob(encodedString) : Buffer.from(encodedString, \"base64\").toString();\n}\n\n/**\n * Generate a 64 bytes base64 block ID string.\n *\n * @export\n * @param {number} blockIndex\n * @returns {string}\n */\nexport function generateBlockID(blockIDPrefix: string, blockIndex: number): string {\n  // To generate a 64 bytes base64 string, source string should be 48\n  const maxSourceStringLength = 48;\n\n  // A blob can have a maximum of 100,000 uncommitted blocks at any given time\n  const maxBlockIndexLength = 6;\n\n  const maxAllowedBlockIDPrefixLength = maxSourceStringLength - maxBlockIndexLength;\n\n  if (blockIDPrefix.length > maxAllowedBlockIDPrefixLength) {\n    blockIDPrefix = blockIDPrefix.slice(0, maxAllowedBlockIDPrefixLength);\n  }\n  const res =\n    blockIDPrefix +\n    padStart(blockIndex.toString(), maxSourceStringLength - blockIDPrefix.length, \"0\");\n  return base64encode(res);\n}\n\n/**\n * Delay specified time interval.\n *\n * @export\n * @param {number} timeInMs\n * @param {AbortSignalLike} [aborter]\n * @param {Error} [abortError]\n */\nexport async function delay(timeInMs: number, aborter?: AbortSignalLike, abortError?: Error) {\n  return new Promise((resolve, reject) => {\n    let timeout: any;\n\n    const abortHandler = () => {\n      if (timeout !== undefined) {\n        clearTimeout(timeout);\n      }\n      reject(abortError);\n    };\n\n    const resolveHandler = () => {\n      if (aborter !== undefined) {\n        aborter.removeEventListener(\"abort\", abortHandler);\n      }\n      resolve();\n    };\n\n    timeout = setTimeout(resolveHandler, timeInMs);\n    if (aborter !== undefined) {\n      aborter.addEventListener(\"abort\", abortHandler);\n    }\n  });\n}\n\n/**\n * String.prototype.padStart()\n *\n * @export\n * @param {string} currentString\n * @param {number} targetLength\n * @param {string} [padString=\" \"]\n * @returns {string}\n */\nexport function padStart(\n  currentString: string,\n  targetLength: number,\n  padString: string = \" \"\n): string {\n  if (String.prototype.padStart) {\n    return currentString.padStart(targetLength, padString);\n  }\n\n  padString = padString || \" \";\n  if (currentString.length > targetLength) {\n    return currentString;\n  } else {\n    targetLength = targetLength - currentString.length;\n    if (targetLength > padString.length) {\n      padString += padString.repeat(targetLength / padString.length);\n    }\n    return padString.slice(0, targetLength) + currentString;\n  }\n}\n\nexport function sanitizeURL(url: string): string {\n  let safeURL: string = url;\n  if (getURLParameter(safeURL, UrlConstants.Parameters.SIGNATURE)) {\n    safeURL = setURLParameter(safeURL, UrlConstants.Parameters.SIGNATURE, \"*****\");\n  }\n\n  return safeURL;\n}\n\nexport function sanitizeHeaders(originalHeader: HttpHeaders): HttpHeaders {\n  const headers: HttpHeaders = new HttpHeaders();\n  for (const header of originalHeader.headersArray()) {\n    if (header.name.toLowerCase() === HeaderConstants.AUTHORIZATION.toLowerCase()) {\n      headers.set(header.name, \"*****\");\n    } else if (header.name.toLowerCase() === HeaderConstants.X_MS_COPY_SOURCE) {\n      headers.set(header.name, sanitizeURL(header.value));\n    } else {\n      headers.set(header.name, header.value);\n    }\n  }\n\n  return headers;\n}\n/**\n * If two strings are equal when compared case insensitive.\n *\n * @export\n * @param {string} str1\n * @param {string} str2\n * @returns {boolean}\n */\nexport function iEqual(str1: string, str2: string): boolean {\n  return str1.toLocaleLowerCase() === str2.toLocaleLowerCase();\n}\n\n/**\n * Extracts account name from the blobEndpointUrl\n * @param {string} blobEndpointUrl blobEndpointUrl to extract the account name from\n * @returns {string} account name\n */\nexport function getAccountNameFromUrl(blobEndpointUrl: string): string {\n  const parsedUrl: URLBuilder = URLBuilder.parse(blobEndpointUrl);\n  let accountName;\n  try {\n    if (parsedUrl.getHost()!.split(\".\")[1] === \"blob\") {\n      // `${defaultEndpointsProtocol}://${accountName}.blob.${endpointSuffix}`;\n      accountName = parsedUrl.getHost()!.split(\".\")[0];\n    } else {\n      // IPv4/IPv6 address hosts... Example - http://192.0.0.10:10001/devstoreaccount1/\n      // Single word domain without a [dot] in the endpoint... Example - http://localhost:10001/devstoreaccount1/\n      // .getPath() -> /devstoreaccount1/\n      accountName = parsedUrl.getPath()!.split(\"/\")[1];\n    }\n\n    if (!accountName) {\n      throw new Error(\"Provided accountName is invalid.\");\n    }\n    return accountName;\n  } catch (error) {\n    throw new Error(\"Unable to extract accountName with provided information.\");\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport {\n  BaseRequestPolicy,\n  HttpOperationResponse,\n  isNode,\n  RequestPolicy,\n  RequestPolicyOptions,\n  WebResource,\n} from \"@azure/core-http\";\n\nimport { HeaderConstants, UrlConstants } from \"../utils/constants\";\nimport { setURLParameter } from \"../utils/utils.common\";\n\n/**\n * StorageBrowserPolicy will handle differences between Node.js and browser runtime, including:\n *\n * 1. Browsers cache GET/HEAD requests by adding conditional headers such as 'IF_MODIFIED_SINCE'.\n * StorageBrowserPolicy is a policy used to add a timestamp query to GET/HEAD request URL\n * thus avoid the browser cache.\n *\n * 2. Remove cookie header for security\n *\n * 3. Remove content-length header to avoid browsers warning\n *\n * @class StorageBrowserPolicy\n * @extends {BaseRequestPolicy}\n */\nexport class StorageBrowserPolicy extends BaseRequestPolicy {\n  /**\n   * Creates an instance of StorageBrowserPolicy.\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @memberof StorageBrowserPolicy\n   */\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n  }\n\n  /**\n   * Sends out request.\n   *\n   * @param {WebResource} request\n   * @returns {Promise<HttpOperationResponse>}\n   * @memberof StorageBrowserPolicy\n   */\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    if (isNode) {\n      return this._nextPolicy.sendRequest(request);\n    }\n\n    if (request.method.toUpperCase() === \"GET\" || request.method.toUpperCase() === \"HEAD\") {\n      request.url = setURLParameter(\n        request.url,\n        UrlConstants.Parameters.FORCE_BROWSER_NO_CACHE,\n        new Date().getTime().toString()\n      );\n    }\n\n    request.headers.remove(HeaderConstants.COOKIE);\n\n    // According to XHR standards, content-length should be fully controlled by browsers\n    request.headers.remove(HeaderConstants.CONTENT_LENGTH);\n\n    // DFS flush file API requires content-length=0, workaround to force browsers add content-length header\n    if (request.method === \"PATCH\" && request.body === undefined) {\n      request.body = \"\";\n    }\n\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { RequestPolicy, RequestPolicyFactory, RequestPolicyOptions } from \"@azure/core-http\";\nimport { StorageBrowserPolicy } from \"./policies/StorageBrowserPolicy\";\nexport { StorageBrowserPolicy };\n\n/**\n * StorageBrowserPolicyFactory is a factory class helping generating StorageBrowserPolicy objects.\n *\n * @export\n * @class StorageBrowserPolicyFactory\n * @implements {RequestPolicyFactory}\n */\nexport class StorageBrowserPolicyFactory implements RequestPolicyFactory {\n  /**\n   * Creates a StorageBrowserPolicyFactory object.\n   *\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @returns {StorageBrowserPolicy}\n   * @memberof StorageBrowserPolicyFactory\n   */\n  public create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): StorageBrowserPolicy {\n    return new StorageBrowserPolicy(nextPolicy, options);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { AbortError } from \"@azure/abort-controller\";\nimport {\n  AbortSignalLike,\n  BaseRequestPolicy,\n  HttpOperationResponse,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n  RestError,\n  WebResource\n} from \"@azure/core-http\";\n\nimport { StorageRetryOptions } from \"../StorageRetryPolicyFactory\";\nimport { UrlConstants } from \"../utils/constants\";\nimport { delay, setURLHost, setURLParameter } from \"../utils/utils.common\";\nimport { logger } from \"../log\";\n\n/**\n * A factory method used to generated a RetryPolicy factory.\n *\n * @export\n * @param {StorageRetryOptions} retryOptions\n * @returns\n */\nexport function NewRetryPolicyFactory(retryOptions?: StorageRetryOptions): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions): StorageRetryPolicy => {\n      return new StorageRetryPolicy(nextPolicy, options, retryOptions);\n    }\n  };\n}\n\n/**\n * RetryPolicy types.\n *\n * @export\n * @enum {number}\n */\nexport enum StorageRetryPolicyType {\n  /**\n   * Exponential retry. Retry time delay grows exponentially.\n   */\n  EXPONENTIAL,\n  /**\n   * Linear retry. Retry time delay grows linearly.\n   */\n  FIXED\n}\n\n// Default values of StorageRetryOptions\nconst DEFAULT_RETRY_OPTIONS: StorageRetryOptions = {\n  maxRetryDelayInMs: 120 * 1000,\n  maxTries: 4,\n  retryDelayInMs: 4 * 1000,\n  retryPolicyType: StorageRetryPolicyType.EXPONENTIAL,\n  secondaryHost: \"\",\n  tryTimeoutInMs: undefined // Use server side default timeout strategy\n};\n\nconst RETRY_ABORT_ERROR = new AbortError(\"The operation was aborted.\");\n\n/**\n * Retry policy with exponential retry and linear retry implemented.\n *\n * @class RetryPolicy\n * @extends {BaseRequestPolicy}\n */\nexport class StorageRetryPolicy extends BaseRequestPolicy {\n  /**\n   * RetryOptions.\n   *\n   * @private\n   * @type {StorageRetryOptions}\n   * @memberof StorageRetryPolicy\n   */\n  private readonly retryOptions: StorageRetryOptions;\n\n  /**\n   * Creates an instance of RetryPolicy.\n   *\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @param {StorageRetryOptions} [retryOptions=DEFAULT_RETRY_OPTIONS]\n   * @memberof StorageRetryPolicy\n   */\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    retryOptions: StorageRetryOptions = DEFAULT_RETRY_OPTIONS\n  ) {\n    super(nextPolicy, options);\n\n    // Initialize retry options\n    this.retryOptions = {\n      retryPolicyType: retryOptions.retryPolicyType\n        ? retryOptions.retryPolicyType\n        : DEFAULT_RETRY_OPTIONS.retryPolicyType,\n\n      maxTries:\n        retryOptions.maxTries && retryOptions.maxTries >= 1\n          ? Math.floor(retryOptions.maxTries)\n          : DEFAULT_RETRY_OPTIONS.maxTries,\n\n      tryTimeoutInMs:\n        retryOptions.tryTimeoutInMs && retryOptions.tryTimeoutInMs >= 0\n          ? retryOptions.tryTimeoutInMs\n          : DEFAULT_RETRY_OPTIONS.tryTimeoutInMs,\n\n      retryDelayInMs:\n        retryOptions.retryDelayInMs && retryOptions.retryDelayInMs >= 0\n          ? Math.min(\n              retryOptions.retryDelayInMs,\n              retryOptions.maxRetryDelayInMs\n                ? retryOptions.maxRetryDelayInMs\n                : DEFAULT_RETRY_OPTIONS.maxRetryDelayInMs!\n            )\n          : DEFAULT_RETRY_OPTIONS.retryDelayInMs,\n\n      maxRetryDelayInMs:\n        retryOptions.maxRetryDelayInMs && retryOptions.maxRetryDelayInMs >= 0\n          ? retryOptions.maxRetryDelayInMs\n          : DEFAULT_RETRY_OPTIONS.maxRetryDelayInMs,\n\n      secondaryHost: retryOptions.secondaryHost\n        ? retryOptions.secondaryHost\n        : DEFAULT_RETRY_OPTIONS.secondaryHost\n    };\n  }\n\n  /**\n   * Sends request.\n   *\n   * @param {WebResource} request\n   * @returns {Promise<HttpOperationResponse>}\n   * @memberof StorageRetryPolicy\n   */\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    return this.attemptSendRequest(request, false, 1);\n  }\n\n  /**\n   * Decide and perform next retry. Won't mutate request parameter.\n   *\n   * @protected\n   * @param {WebResource} request\n   * @param {boolean} secondaryHas404  If attempt was against the secondary & it returned a StatusNotFound (404), then\n   *                                   the resource was not found. This may be due to replication delay. So, in this\n   *                                   case, we'll never try the secondary again for this operation.\n   * @param {number} attempt           How many retries has been attempted to performed, starting from 1, which includes\n   *                                   the attempt will be performed by this method call.\n   * @returns {Promise<HttpOperationResponse>}\n   * @memberof StorageRetryPolicy\n   */\n  protected async attemptSendRequest(\n    request: WebResource,\n    secondaryHas404: boolean,\n    attempt: number\n  ): Promise<HttpOperationResponse> {\n    const newRequest: WebResource = request.clone();\n\n    const isPrimaryRetry =\n      secondaryHas404 ||\n      !this.retryOptions.secondaryHost ||\n      !(request.method === \"GET\" || request.method === \"HEAD\" || request.method === \"OPTIONS\") ||\n      attempt % 2 === 1;\n\n    if (!isPrimaryRetry) {\n      newRequest.url = setURLHost(newRequest.url, this.retryOptions.secondaryHost!);\n    }\n\n    // Set the server-side timeout query parameter \"timeout=[seconds]\"\n    if (this.retryOptions.tryTimeoutInMs) {\n      newRequest.url = setURLParameter(\n        newRequest.url,\n        UrlConstants.Parameters.TIMEOUT,\n        Math.floor(this.retryOptions.tryTimeoutInMs! / 1000).toString()\n      );\n    }\n\n    let response: HttpOperationResponse | undefined;\n    try {\n      logger.info(\n        `RetryPolicy: =====> Try=${attempt} ${isPrimaryRetry ? \"Primary\" : \"Secondary\"}`\n      );\n      response = await this._nextPolicy.sendRequest(newRequest);\n      if (!this.shouldRetry(isPrimaryRetry, attempt, response)) {\n        return response;\n      }\n\n      secondaryHas404 = secondaryHas404 || (!isPrimaryRetry && response.status === 404);\n    } catch (err) {\n      logger.error(\n        `RetryPolicy: Caught error, message: ${err.message}, code: ${err.code}`\n      );\n      if (!this.shouldRetry(isPrimaryRetry, attempt, response, err)) {\n        throw err;\n      }\n    }\n\n    await this.delay(isPrimaryRetry, attempt, request.abortSignal);\n    return await this.attemptSendRequest(request, secondaryHas404, ++attempt);\n  }\n\n  /**\n   * Decide whether to retry according to last HTTP response and retry counters.\n   *\n   * @protected\n   * @param {boolean} isPrimaryRetry\n   * @param {number} attempt\n   * @param {HttpOperationResponse} [response]\n   * @param {RestError} [err]\n   * @returns {boolean}\n   * @memberof StorageRetryPolicy\n   */\n  protected shouldRetry(\n    isPrimaryRetry: boolean,\n    attempt: number,\n    response?: HttpOperationResponse,\n    err?: RestError\n  ): boolean {\n    if (attempt >= this.retryOptions.maxTries!) {\n      logger.info(\n        `RetryPolicy: Attempt(s) ${attempt} >= maxTries ${this.retryOptions\n          .maxTries!}, no further try.`\n      );\n      return false;\n    }\n\n    // Handle network failures, you may need to customize the list when you implement\n    // your own http client\n    const retriableErrors = [\n      \"ETIMEDOUT\",\n      \"ESOCKETTIMEDOUT\",\n      \"ECONNREFUSED\",\n      \"ECONNRESET\",\n      \"ENOENT\",\n      \"ENOTFOUND\",\n      \"TIMEOUT\",\n      \"EPIPE\",\n      \"REQUEST_SEND_ERROR\" // For default xhr based http client provided in ms-rest-js\n    ];\n    if (err) {\n      for (const retriableError of retriableErrors) {\n        if (\n          err.name.toUpperCase().includes(retriableError) ||\n          err.message.toUpperCase().includes(retriableError) ||\n          (err.code &&\n            err.code\n              .toString()\n              .toUpperCase()\n              .includes(retriableError))\n        ) {\n          logger.info(\n            `RetryPolicy: Network error ${retriableError} found, will retry.`\n          );\n          return true;\n        }\n      }\n    }\n\n    // If attempt was against the secondary & it returned a StatusNotFound (404), then\n    // the resource was not found. This may be due to replication delay. So, in this\n    // case, we'll never try the secondary again for this operation.\n    if (response || err) {\n      const statusCode = response ? response.status : err ? err.statusCode : 0;\n      if (!isPrimaryRetry && statusCode === 404) {\n        logger.info(`RetryPolicy: Secondary access with 404, will retry.`);\n        return true;\n      }\n\n      // Server internal error or server timeout\n      if (statusCode === 503 || statusCode === 500) {\n        logger.info(\n          `RetryPolicy: Will retry for status code ${statusCode}.`\n        );\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Delay a calculated time between retries.\n   *\n   * @private\n   * @param {boolean} isPrimaryRetry\n   * @param {number} attempt\n   * @param {AbortSignalLike} [abortSignal]\n   * @memberof StorageRetryPolicy\n   */\n  private async delay(isPrimaryRetry: boolean, attempt: number, abortSignal?: AbortSignalLike) {\n    let delayTimeInMs: number = 0;\n\n    if (isPrimaryRetry) {\n      switch (this.retryOptions.retryPolicyType) {\n        case StorageRetryPolicyType.EXPONENTIAL:\n          delayTimeInMs = Math.min(\n            (Math.pow(2, attempt - 1) - 1) * this.retryOptions.retryDelayInMs!,\n            this.retryOptions.maxRetryDelayInMs!\n          );\n          break;\n        case StorageRetryPolicyType.FIXED:\n          delayTimeInMs = this.retryOptions.retryDelayInMs!;\n          break;\n      }\n    } else {\n      delayTimeInMs = Math.random() * 1000;\n    }\n\n    logger.info(`RetryPolicy: Delay for ${delayTimeInMs}ms`);\n    return delay(delayTimeInMs, abortSignal, RETRY_ABORT_ERROR);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { RequestPolicy, RequestPolicyFactory, RequestPolicyOptions } from \"@azure/core-http\";\nimport { StorageRetryPolicy, StorageRetryPolicyType } from \"./policies/StorageRetryPolicy\";\n\nexport { StorageRetryPolicyType, StorageRetryPolicy };\n\n/**\n * Storage Blob retry options interface.\n *\n * @export\n * @interface StorageRetryOptions\n */\nexport interface StorageRetryOptions {\n  /**\n   * Optional. StorageRetryPolicyType, default is exponential retry policy.\n   *\n   * @type {StorageRetryPolicyType}\n   * @memberof StorageRetryOptions\n   */\n  readonly retryPolicyType?: StorageRetryPolicyType;\n\n  /**\n   * Optional. Max try number of attempts, default is 4.\n   * A value of 1 means 1 try and no retries.\n   * A value smaller than 1 means default retry number of attempts.\n   *\n   * @type {number}\n   * @memberof StorageRetryOptions\n   */\n  readonly maxTries?: number;\n\n  /**\n   * Optional. Indicates the maximum time in ms allowed for any single try of an HTTP request.\n   * A value of zero or undefined means no default timeout on SDK client, Azure\n   * Storage server's default timeout policy will be used.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-blob-service-operations\n   *\n   * @type {number}\n   * @memberof StorageRetryOptions\n   */\n  readonly tryTimeoutInMs?: number;\n\n  /**\n   * Optional. Specifies the amount of delay to use before retrying an operation (default is 4s or 4 * 1000ms).\n   * The delay increases (exponentially or linearly) with each retry up to a maximum specified by\n   * maxRetryDelayInMs. If you specify 0, then you must also specify 0 for maxRetryDelayInMs.\n   *\n   * @type {number}\n   * @memberof StorageRetryOptions\n   */\n  readonly retryDelayInMs?: number;\n\n  /**\n   * Optional. Specifies the maximum delay allowed before retrying an operation (default is 120s or 120 * 1000ms).\n   * If you specify 0, then you must also specify 0 for retryDelayInMs.\n   *\n   * @type {number}\n   * @memberof StorageRetryOptions\n   */\n  readonly maxRetryDelayInMs?: number;\n\n  /**\n   * If a secondaryHost is specified, retries will be tried against this host. If secondaryHost is undefined\n   * (the default) then operations are not retried against another host.\n   *\n   * NOTE: Before setting this field, make sure you understand the issues around\n   * reading stale and potentially-inconsistent data at\n   * {@link https://docs.microsoft.com/en-us/azure/storage/common/storage-designing-ha-apps-with-ragrs}\n   *\n   * @type {string}\n   * @memberof StorageRetryOptions\n   */\n  readonly secondaryHost?: string;\n}\n\n/**\n * StorageRetryPolicyFactory is a factory class helping generating {@link StorageRetryPolicy} objects.\n *\n * @export\n * @class StorageRetryPolicyFactory\n * @implements {RequestPolicyFactory}\n */\nexport class StorageRetryPolicyFactory implements RequestPolicyFactory {\n  private retryOptions?: StorageRetryOptions;\n\n  /**\n   * Creates an instance of StorageRetryPolicyFactory.\n   * @param {StorageRetryOptions} [retryOptions]\n   * @memberof StorageRetryPolicyFactory\n   */\n  constructor(retryOptions?: StorageRetryOptions) {\n    this.retryOptions = retryOptions;\n  }\n\n  /**\n   * Creates a StorageRetryPolicy object.\n   *\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @returns {StorageRetryPolicy}\n   * @memberof StorageRetryPolicyFactory\n   */\n  public create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): StorageRetryPolicy {\n    return new StorageRetryPolicy(nextPolicy, options, this.retryOptions);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {\n  BaseRequestPolicy,\n  HttpHeaders,\n  HttpOperationResponse,\n  isNode,\n  RequestPolicy,\n  RequestPolicyOptions,\n  WebResource\n} from \"@azure/core-http\";\n\nimport { HeaderConstants } from \"../utils/constants\";\n\n/**\n * TelemetryPolicy is a policy used to tag user-agent header for every requests.\n *\n * @class TelemetryPolicy\n * @extends {BaseRequestPolicy}\n */\nexport class TelemetryPolicy extends BaseRequestPolicy {\n  /**\n   * Telemetry string.\n   *\n   * @type {string}\n   * @memberof TelemetryPolicy\n   */\n  public readonly telemetry: string;\n\n  /**\n   * Creates an instance of TelemetryPolicy.\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @param {string} telemetry\n   * @memberof TelemetryPolicy\n   */\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions, telemetry: string) {\n    super(nextPolicy, options);\n    this.telemetry = telemetry;\n  }\n\n  /**\n   * Sends out request.\n   *\n   * @param {WebResource} request\n   * @returns {Promise<HttpOperationResponse>}\n   * @memberof TelemetryPolicy\n   */\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    if (isNode) {\n      if (!request.headers) {\n        request.headers = new HttpHeaders();\n      }\n      if (!request.headers.get(HeaderConstants.USER_AGENT)) {\n        request.headers.set(HeaderConstants.USER_AGENT, this.telemetry);\n      }\n    }\n\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {\n  isNode,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n  UserAgentOptions\n} from \"@azure/core-http\";\nimport * as os from \"os\";\n\nimport { TelemetryPolicy } from \"./policies/TelemetryPolicy\";\nimport { SDK_VERSION } from \"./utils/constants\";\n\n/**\n * TelemetryPolicyFactory is a factory class helping generating {@link TelemetryPolicy} objects.\n *\n * @export\n * @class TelemetryPolicyFactory\n * @implements {RequestPolicyFactory}\n */\nexport class TelemetryPolicyFactory implements RequestPolicyFactory {\n  /**\n   * @internal\n   * @ignore\n   */\n  public readonly telemetryString: string;\n\n  /**\n   * Creates an instance of TelemetryPolicyFactory.\n   * @param {UserAgentOptions} [telemetry]\n   * @memberof TelemetryPolicyFactory\n   */\n  constructor(telemetry?: UserAgentOptions) {\n    const userAgentInfo: string[] = [];\n\n    if (isNode) {\n      if (telemetry) {\n        const telemetryString = (telemetry.userAgentPrefix || \"\").replace(\" \", \"\");\n        if (telemetryString.length > 0 && userAgentInfo.indexOf(telemetryString) === -1) {\n          userAgentInfo.push(telemetryString);\n        }\n      }\n\n      // e.g. azsdk-js-storagedatalake/10.0.0\n      const libInfo = `azsdk-js-storagedatalake/${SDK_VERSION}`;\n      if (userAgentInfo.indexOf(libInfo) === -1) {\n        userAgentInfo.push(libInfo);\n      }\n\n      // e.g. (NODE-VERSION 4.9.1; Windows_NT 10.0.16299)\n      const runtimeInfo = `(NODE-VERSION ${process.version}; ${os.type()} ${os.release()})`;\n      if (userAgentInfo.indexOf(runtimeInfo) === -1) {\n        userAgentInfo.push(runtimeInfo);\n      }\n    }\n\n    this.telemetryString = userAgentInfo.join(\" \");\n  }\n\n  /**\n   * Creates a TelemetryPolicy object.\n   *\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @returns {TelemetryPolicy}\n   * @memberof TelemetryPolicyFactory\n   */\n  public create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): TelemetryPolicy {\n    return new TelemetryPolicy(nextPolicy, options, this.telemetryString);\n  }\n}\n","import {\n  BaseRequestPolicy,\n  bearerTokenAuthenticationPolicy,\n  deserializationPolicy,\n  generateClientRequestIdPolicy,\n  HttpClient as IHttpClient,\n  HttpHeaders,\n  HttpOperationResponse,\n  HttpRequestBody,\n  isNode,\n  isTokenCredential,\n  KeepAliveOptions,\n  keepAlivePolicy,\n  logPolicy,\n  ProxyOptions,\n  proxyPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n  ServiceClientOptions,\n  TokenCredential,\n  tracingPolicy,\n  UserAgentOptions,\n  WebResource\n} from \"@azure/core-http\";\n\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { logger } from \"./log\";\nimport { StorageBrowserPolicyFactory } from \"./StorageBrowserPolicyFactory\";\nimport { StorageRetryOptions, StorageRetryPolicyFactory } from \"./StorageRetryPolicyFactory\";\nimport { TelemetryPolicyFactory } from \"./TelemetryPolicyFactory\";\nimport { Pipeline as BlobPipeline } from \"@azure/storage-blob\";\nimport {\n  StorageDataLakeLoggingAllowedHeaderNames,\n  StorageDataLakeLoggingAllowedQueryParameters,\n  StorageOAuthScopes\n} from \"./utils/constants\";\n\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n// Export following interfaces and types for customers who want to implement their\n// own RequestPolicy or HTTPClient\nexport {\n  BaseRequestPolicy,\n  StorageOAuthScopes,\n  deserializationPolicy,\n  IHttpClient,\n  HttpHeaders,\n  HttpRequestBody,\n  HttpOperationResponse,\n  WebResource,\n  RequestPolicyFactory,\n  RequestPolicy,\n  RequestPolicyOptions\n};\n\n/**\n * Option interface for Pipeline constructor.\n *\n * @export\n * @interface PipelineOptions\n */\nexport interface PipelineOptions {\n  /**\n   * Optional. Configures the HTTP client to send requests and receive responses.\n   *\n   * @type {IHttpClient}\n   * @memberof PipelineOptions\n   */\n  httpClient?: IHttpClient;\n}\n\n/**\n * A Pipeline class containing HTTP request policies.\n * You can create a default Pipeline by calling {@link newPipeline}.\n * Or you can create a Pipeline with your own policies by the constructor of Pipeline.\n *\n * Refer to {@link newPipeline} and provided policies before implementing your\n * customized Pipeline.\n *\n * @export\n * @class Pipeline\n */\nexport class Pipeline extends BlobPipeline {\n  /**\n   * A list of chained request policy factories.\n   *\n   * @type {RequestPolicyFactory[]}\n   * @memberof Pipeline\n   */\n  public readonly factories: RequestPolicyFactory[];\n  /**\n   * Configures pipeline logger and HTTP client.\n   *\n   * @type {PipelineOptions}\n   * @memberof Pipeline\n   */\n  public readonly options: PipelineOptions;\n\n  /**\n   * Creates an instance of Pipeline. Customize HTTPClient by implementing IHttpClient interface.\n   *\n   * @param {RequestPolicyFactory[]} factories\n   * @param {PipelineOptions} [options={}]\n   * @memberof Pipeline\n   */\n  constructor(factories: RequestPolicyFactory[], options: PipelineOptions = {}) {\n    super(factories, options);\n    this.factories = factories;\n    this.options = options;\n  }\n\n  /**\n   * Transfer Pipeline object to ServiceClientOptions object which is required by\n   * ServiceClient constructor.\n   *\n   * @returns {ServiceClientOptions} The ServiceClientOptions object from this Pipeline.\n   * @memberof Pipeline\n   */\n  public toServiceClientOptions(): ServiceClientOptions {\n    return {\n      httpClient: this.options.httpClient,\n      requestPolicyFactories: this.factories\n    };\n  }\n}\n\n/**\n * Options interface for the {@link newPipeline} function.\n *\n * @export\n * @interface StoragePipelineOptions\n */\nexport interface StoragePipelineOptions {\n  /**\n   * Options to configure a proxy for outgoing requests.\n   */\n  proxyOptions?: ProxyOptions;\n  /**\n   * Options for adding user agent details to outgoing requests.\n   *\n   * @type {UserAgentOptions}\n   * @memberof StoragePipelineOptions\n   */\n  userAgentOptions?: UserAgentOptions;\n  /**\n   * Configures the built-in retry policy behavior.\n   *\n   * @type {StorageRetryOptions}\n   * @memberof StoragePipelineOptions\n   */\n  retryOptions?: StorageRetryOptions;\n  /**\n   * Keep alive configurations. Default keep-alive is enabled.\n   *\n   * @type {KeepAliveOptions}\n   * @memberof StoragePipelineOptions\n   */\n  keepAliveOptions?: KeepAliveOptions;\n\n  /**\n   * Configures the HTTP client to send requests and receive responses.\n   *\n   * @type {IHttpClient}\n   * @memberof StoragePipelineOptions\n   */\n  httpClient?: IHttpClient;\n}\n\n/**\n * Creates a new Pipeline object with Credential provided.\n *\n * @export\n * @param {StorageSharedKeyCredential | AnonymousCredential | TokenCredential} credential  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the @azure/identity package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n * @param {StoragePipelineOptions} [pipelineOptions] Optional. Options.\n * @returns {Pipeline} A new Pipeline object.\n */\nexport function newPipeline(\n  credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n  pipelineOptions: StoragePipelineOptions = {}\n): Pipeline {\n  // Order is important. Closer to the API at the top & closer to the network at the bottom.\n  // The credential's policy factory must appear close to the wire so it can sign any\n  // changes made by other factories (like UniqueRequestIDPolicyFactory)\n\n  const telemetryPolicy = new TelemetryPolicyFactory(pipelineOptions.userAgentOptions);\n  const factories: RequestPolicyFactory[] = [\n    tracingPolicy({ userAgent: telemetryPolicy.telemetryString }),\n    keepAlivePolicy(pipelineOptions.keepAliveOptions),\n    telemetryPolicy,\n    generateClientRequestIdPolicy(),\n    new StorageBrowserPolicyFactory(),\n    deserializationPolicy(), // Default deserializationPolicy is provided by protocol layer\n    new StorageRetryPolicyFactory(pipelineOptions.retryOptions),\n    logPolicy({\n      logger: logger.info,\n      allowedHeaderNames: StorageDataLakeLoggingAllowedHeaderNames,\n      allowedQueryParameters: StorageDataLakeLoggingAllowedQueryParameters\n    })\n  ];\n\n  if (isNode) {\n    // ProxyPolicy is only avaiable in Node.js runtime, not in browsers\n    factories.push(proxyPolicy(pipelineOptions.proxyOptions));\n  }\n  factories.push(\n    isTokenCredential(credential)\n      ? bearerTokenAuthenticationPolicy(credential, StorageOAuthScopes)\n      : credential\n  );\n\n  return new Pipeline(factories, {\n    httpClient: pipelineOptions.httpClient\n  });\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { RequestPolicy, RequestPolicyOptions, WebResource } from \"@azure/core-http\";\n\nimport { StorageSharedKeyCredential } from \"../credentials/StorageSharedKeyCredential\";\nimport { HeaderConstants } from \"../utils/constants\";\nimport { getURLPath, getURLQueries } from \"../utils/utils.common\";\nimport { CredentialPolicy } from \"./CredentialPolicy\";\n\n\n/**\n * StorageSharedKeyCredentialPolicy is a policy used to sign HTTP request with a shared key.\n *\n * @export\n * @class StorageSharedKeyCredentialPolicy\n * @extends {CredentialPolicy}\n */\nexport class StorageSharedKeyCredentialPolicy extends CredentialPolicy {\n  /**\n   * Reference to StorageSharedKeyCredential which generates StorageSharedKeyCredentialPolicy\n   *\n   * @type {StorageSharedKeyCredential}\n   * @memberof StorageSharedKeyCredentialPolicy\n   */\n  private readonly factory: StorageSharedKeyCredential;\n\n  /**\n   * Creates an instance of StorageSharedKeyCredentialPolicy.\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @param {StorageSharedKeyCredential} factory\n   * @memberof StorageSharedKeyCredentialPolicy\n   */\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    factory: StorageSharedKeyCredential\n  ) {\n    super(nextPolicy, options);\n    this.factory = factory;\n  }\n\n  /**\n   * Signs request.\n   *\n   * @protected\n   * @param {WebResource} request\n   * @returns {WebResource}\n   * @memberof StorageSharedKeyCredentialPolicy\n   */\n  protected signRequest(request: WebResource): WebResource {\n    request.headers.set(HeaderConstants.X_MS_DATE, new Date().toUTCString());\n\n    if (request.body && typeof request.body === \"string\" && request.body.length > 0) {\n      request.headers.set(HeaderConstants.CONTENT_LENGTH, Buffer.byteLength(request.body));\n    }\n\n    const stringToSign: string =\n      [\n        request.method.toUpperCase(),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_LANGUAGE),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_ENCODING),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_LENGTH),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_MD5),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_TYPE),\n        this.getHeaderValueToSign(request, HeaderConstants.DATE),\n        this.getHeaderValueToSign(request, HeaderConstants.IF_MODIFIED_SINCE),\n        this.getHeaderValueToSign(request, HeaderConstants.IF_MATCH),\n        this.getHeaderValueToSign(request, HeaderConstants.IF_NONE_MATCH),\n        this.getHeaderValueToSign(request, HeaderConstants.IF_UNMODIFIED_SINCE),\n        this.getHeaderValueToSign(request, HeaderConstants.RANGE)\n      ].join(\"\\n\") +\n      \"\\n\" +\n      this.getCanonicalizedHeadersString(request) +\n      this.getCanonicalizedResourceString(request);\n\n    const signature: string = this.factory.computeHMACSHA256(stringToSign);\n    request.headers.set(\n      HeaderConstants.AUTHORIZATION,\n      `SharedKey ${this.factory.accountName}:${signature}`\n    );\n\n    // Workaround for https://github.com/axios/axios/issues/2107\n    // We should always keep the 'content-length' header once the issue is solved\n    // For a better explanation about this workaround, look here: https://github.com/Azure/azure-sdk-for-js/pull/3273\n    if (typeof request.body !== \"function\" && !(request.body && request.onUploadProgress)) {\n      request.headers.remove(HeaderConstants.CONTENT_LENGTH);\n    }\n\n    // Workaround for node-fetch which will set content-type for dfs append data operations based on Patch\n    if (typeof request.body !== \"function\" && !request.headers.get(HeaderConstants.CONTENT_TYPE)) {\n      request.headers.set(HeaderConstants.CONTENT_TYPE, \"\");\n    }\n\n    // console.log(`[URL]:${request.url}`);\n    // console.log(`[HEADERS]:${request.headers.toString()}`);\n    // console.log(`[STRING TO SIGN]:${JSON.stringify(stringToSign)}`);\n    // console.log(`[KEY]: ${request.headers.get(HeaderConstants.AUTHORIZATION)}`);\n    return request;\n  }\n\n  /**\n   * Retrieve header value according to shared key sign rules.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/authenticate-with-shared-key\n   *\n   * @private\n   * @param {WebResource} request\n   * @param {string} headerName\n   * @returns {string}\n   * @memberof StorageSharedKeyCredentialPolicy\n   */\n  private getHeaderValueToSign(request: WebResource, headerName: string): string {\n    const value = request.headers.get(headerName);\n\n    if (!value) {\n      return \"\";\n    }\n\n    // When using version 2015-02-21 or later, if Content-Length is zero, then\n    // set the Content-Length part of the StringToSign to an empty string.\n    // https://docs.microsoft.com/en-us/rest/api/storageservices/authenticate-with-shared-key\n    if (headerName === HeaderConstants.CONTENT_LENGTH && value === \"0\") {\n      return \"\";\n    }\n\n    return value;\n  }\n\n  /**\n   * To construct the CanonicalizedHeaders portion of the signature string, follow these steps:\n   * 1. Retrieve all headers for the resource that begin with x-ms-, including the x-ms-date header.\n   * 2. Convert each HTTP header name to lowercase.\n   * 3. Sort the headers lexicographically by header name, in ascending order.\n   *    Each header may appear only once in the string.\n   * 4. Replace any linear whitespace in the header value with a single space.\n   * 5. Trim any whitespace around the colon in the header.\n   * 6. Finally, append a new-line character to each canonicalized header in the resulting list.\n   *    Construct the CanonicalizedHeaders string by concatenating all headers in this list into a single string.\n   *\n   * @private\n   * @param {WebResource} request\n   * @returns {string}\n   * @memberof StorageSharedKeyCredentialPolicy\n   */\n  private getCanonicalizedHeadersString(request: WebResource): string {\n    let headersArray = request.headers.headersArray().filter((value) => {\n      return value.name.toLowerCase().startsWith(HeaderConstants.PREFIX_FOR_STORAGE);\n    });\n\n    headersArray.sort((a, b): number => {\n      return a.name.toLowerCase().localeCompare(b.name.toLowerCase());\n    });\n\n    // Remove duplicate headers\n    headersArray = headersArray.filter((value, index, array) => {\n      if (index > 0 && value.name.toLowerCase() === array[index - 1].name.toLowerCase()) {\n        return false;\n      }\n      return true;\n    });\n\n    let canonicalizedHeadersStringToSign: string = \"\";\n    headersArray.forEach((header) => {\n      canonicalizedHeadersStringToSign += `${header.name\n        .toLowerCase()\n        .trimRight()}:${header.value.trimLeft()}\\n`;\n    });\n\n    return canonicalizedHeadersStringToSign;\n  }\n\n  /**\n   * Retrieves the webResource canonicalized resource string.\n   *\n   * @private\n   * @param {WebResource} request\n   * @returns {string}\n   * @memberof StorageSharedKeyCredentialPolicy\n   */\n  private getCanonicalizedResourceString(request: WebResource): string {\n    const path = getURLPath(request.url) || \"/\";\n\n    let canonicalizedResourceString: string = \"\";\n    canonicalizedResourceString += `/${this.factory.accountName}${path}`;\n\n    const queries = getURLQueries(request.url);\n    const lowercaseQueries: { [key: string]: string } = {};\n    if (queries) {\n      const queryKeys: string[] = [];\n      for (const key in queries) {\n        if (queries.hasOwnProperty(key)) {\n          const lowercaseKey = key.toLowerCase();\n          lowercaseQueries[lowercaseKey] = queries[key];\n          queryKeys.push(lowercaseKey);\n        }\n      }\n\n      queryKeys.sort();\n      for (const key of queryKeys) {\n        canonicalizedResourceString += `\\n${key}:${decodeURIComponent(lowercaseQueries[key])}`;\n      }\n    }\n\n    return canonicalizedResourceString;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { createHmac } from \"crypto\";\nimport { RequestPolicy, RequestPolicyOptions } from \"@azure/core-http\";\n\nimport { StorageSharedKeyCredentialPolicy } from \"../policies/StorageSharedKeyCredentialPolicy\";\nimport { Credential } from \"./Credential\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * StorageSharedKeyCredential for account key authorization of Azure Storage service.\n *\n * @export\n * @class StorageSharedKeyCredential\n * @extends {Credential}\n */\nexport class StorageSharedKeyCredential extends Credential {\n  /**\n   * Azure Storage account name; readonly.\n   *\n   * @type {string}\n   * @memberof StorageSharedKeyCredential\n   */\n  public readonly accountName: string;\n\n  /**\n   * Azure Storage account key; readonly.\n   *\n   * @type {Buffer}\n   * @memberof StorageSharedKeyCredential\n   */\n  private readonly accountKey: Buffer;\n\n  /**\n   * Creates an instance of StorageSharedKeyCredential.\n   * @param {string} accountName\n   * @param {string} accountKey\n   * @memberof StorageSharedKeyCredential\n   */\n  constructor(accountName: string, accountKey: string) {\n    super();\n    this.accountName = accountName;\n    this.accountKey = Buffer.from(accountKey, \"base64\");\n  }\n\n  /**\n   * Creates a StorageSharedKeyCredentialPolicy object.\n   *\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @returns {StorageSharedKeyCredentialPolicy}\n   * @memberof StorageSharedKeyCredential\n   */\n  public create(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions\n  ): StorageSharedKeyCredentialPolicy {\n    return new StorageSharedKeyCredentialPolicy(nextPolicy, options, this);\n  }\n\n  /**\n   * Generates a hash signature for an HTTP request or for a SAS.\n   *\n   * @param {string} stringToSign\n   * @returns {string}\n   * @memberof StorageSharedKeyCredential\n   */\n  public computeHMACSHA256(stringToSign: string): string {\n    return createHmac(\"sha256\", this.accountKey)\n      .update(stringToSign, \"utf8\")\n      .digest(\"base64\");\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\n\nconst packageName = \"azure-storage-datalake\";\nconst packageVersion = \"1.0.0\";\n\nexport class StorageClientContext extends coreHttp.ServiceClient {\n  url: string;\n  resource: string;\n  version: string;\n\n  /**\n   * Initializes a new instance of the StorageClientContext class.\n   * @param url The URL of the service account, container, or blob that is the targe of the desired\n   * operation.\n   * @param [options] The parameter options\n   */\n  constructor(url: string, options?: coreHttp.ServiceClientOptions) {\n    if (url == undefined) {\n      throw new Error(\"'url' cannot be null.\");\n    }\n\n    if (!options) {\n      options = {};\n    }\n\n    if (!options.userAgent) {\n      const defaultUserAgent = coreHttp.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n\n    super(undefined, options);\n\n    this.resource = 'filesystem';\n    this.version = '2019-07-07';\n    this.baseUri = \"{url}\";\n    this.requestContentType = \"application/json; charset=utf-8\";\n    this.url = url;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { URLBuilder } from \"@azure/core-http\";\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { ContainerItem, PublicAccessType as ContainerPublicAccessType } from \"@azure/storage-blob\";\n\nimport { PathGetPropertiesResponse } from \"./generated/src/models\";\nimport {\n  FileSystemItem,\n  Metadata,\n  PathAccessControlItem,\n  PathGetAccessControlResponse,\n  PathPermissions,\n  PublicAccessType,\n  RolePermissions,\n  ServiceListContainersSegmentResponse,\n  ServiceListFileSystemsSegmentResponse,\n} from \"./models\";\nimport { ToBlobEndpointHostMappings, ToDfsEndpointHostMappings } from \"./utils/constants\";\nimport { base64encode } from \"./utils/utils.common\";\n\n/**\n * Get a blob endpoint URL from incoming blob or dfs endpoint URLs.\n * Only handle known host name pair patterns, add more patterns into ToBlobEndpointHostMappings in constants.ts.\n *\n * Expected input and outputs:\n * http://account.blob.core.windows.net     => http://account.blob.core.windows.net\n * http://account.dfs.core.windows.net      => http://account.blob.core.windows.net\n * http://127.0.0.1:10000                   => http://127.0.0.1:10000\n * http://account.blob.core.windows.net/abc => http://account.blob.core.windows.net/abc\n * http://account.dfs.core.windows.net/abc  => http://account.blob.core.windows.net/abc\n * http://127.0.0.1:10000/abc               => http://127.0.0.1:10000/abc\n *\n * @export\n * @param {string} url\n * @returns {string}\n */\nexport function toBlobEndpointUrl(url: string): string {\n  const urlParsed = URLBuilder.parse(url);\n\n  let host = urlParsed.getHost();\n  if (host === undefined) {\n    throw RangeError(`toBlobEndpointUrl() parameter url ${url} doesn't include valid host.`);\n  }\n\n  for (const mapping of ToBlobEndpointHostMappings) {\n    if (host.includes(mapping[0])) {\n      host = host.replace(mapping[0], mapping[1]);\n      break;\n    }\n  }\n\n  urlParsed.setHost(host);\n  return urlParsed.toString();\n}\n\n/**\n * Get a dfs endpoint URL from incoming blob or dfs endpoint URLs.\n * Only handle known host name pair patterns, add more patterns into ToDfsEndpointHostMappings in constants.ts.\n *\n * Expected input and outputs:\n * http://account.blob.core.windows.net     => http://account.dfs.core.windows.net\n * http://account.dfs.core.windows.net      => http://account.dfs.core.windows.net\n * http://127.0.0.1:10000                   => http://127.0.0.1:10000\n * http://account.blob.core.windows.net/abc => http://account.dfs.core.windows.net/abc\n * http://account.dfs.core.windows.net/abc  => http://account.dfs.core.windows.net/abc\n * http://127.0.0.1:10000/abc               => http://127.0.0.1:10000/abc\n *\n * @export\n * @param {string} url\n * @returns {string}\n */\nexport function toDfsEndpointUrl(url: string): string {\n  const urlParsed = URLBuilder.parse(url);\n\n  let host = urlParsed.getHost();\n  if (host === undefined) {\n    throw RangeError(`toDfsEndpointUrl() parameter url ${url} doesn't include valid host.`);\n  }\n\n  for (const mapping of ToDfsEndpointHostMappings) {\n    if (host.includes(mapping[0])) {\n      host = host.replace(mapping[0], mapping[1]);\n      break;\n    }\n  }\n\n  urlParsed.setHost(host);\n  return urlParsed.toString();\n}\n\nfunction toFileSystemAsyncIterableIterator(\n  iter: AsyncIterableIterator<ServiceListContainersSegmentResponse>\n): AsyncIterableIterator<ServiceListFileSystemsSegmentResponse> {\n  return {\n    async next() {\n      const rawResult = await iter.next();\n      if (rawResult.value) {\n        rawResult.value.fileSystemItems = rawResult.value.containerItems.map(\n          (val: ContainerItem): FileSystemItem => {\n            return {\n              ...val,\n              properties: {\n                ...val.properties,\n                publicAccess: toPublicAccessType(val.properties.publicAccess)\n              }\n            };\n          }\n        );\n      }\n      return rawResult as any;\n    },\n    [Symbol.asyncIterator]() {\n      return this;\n    }\n  };\n}\n\nexport function toFileSystemPagedAsyncIterableIterator(\n  iter: PagedAsyncIterableIterator<ContainerItem, ServiceListContainersSegmentResponse>\n): PagedAsyncIterableIterator<FileSystemItem, ServiceListFileSystemsSegmentResponse> {\n  return {\n    async next(): Promise<{ done?: boolean; value: FileSystemItem }> {\n      const rawResult = await iter.next();\n      const result = rawResult as { done?: boolean; value: FileSystemItem };\n      if (result.value) {\n        result.value.properties.publicAccess = toPublicAccessType(\n          rawResult.value.properties.publicAccess\n        );\n      }\n      return result;\n    },\n    [Symbol.asyncIterator](): PagedAsyncIterableIterator<\n      FileSystemItem,\n      ServiceListFileSystemsSegmentResponse\n    > {\n      return this;\n    },\n    byPage(\n      settings: PageSettings = {}\n    ): AsyncIterableIterator<ServiceListFileSystemsSegmentResponse> {\n      return toFileSystemAsyncIterableIterator(iter.byPage(settings));\n    }\n  };\n}\n\nexport function toContainerPublicAccessType(\n  publicAccessType?: PublicAccessType\n): ContainerPublicAccessType | undefined {\n  if (!publicAccessType) {\n    return undefined;\n  }\n\n  switch (publicAccessType) {\n    case \"filesystem\":\n      return \"container\";\n    case \"file\":\n      return \"blob\";\n    default:\n      throw TypeError(\n        `toContainerPublicAccessType() parameter ${publicAccessType} is not recognized.`\n      );\n  }\n}\n\nexport function toPublicAccessType(\n  containerPublicAccessType?: ContainerPublicAccessType\n): PublicAccessType | undefined {\n  if (!containerPublicAccessType) {\n    return undefined;\n  }\n\n  switch (containerPublicAccessType) {\n    case \"container\":\n      return \"filesystem\";\n    case \"blob\":\n      return \"file\";\n    default:\n      throw TypeError(\n        `toPublicAccessType() parameter ${containerPublicAccessType} is not recognized.`\n      );\n  }\n}\n\nexport function toProperties(metadata?: Metadata): string | undefined {\n  if (metadata === undefined) {\n    return undefined;\n  }\n\n  const properties = [];\n  for (const key in metadata) {\n    if (metadata.hasOwnProperty(key)) {\n      const value = metadata[key];\n      properties.push(`${key}=${base64encode(value)}`);\n    }\n  }\n\n  return properties.join(\",\");\n}\n\nexport function toPathGetAccessControlResponse(\n  response: PathGetPropertiesResponse\n): PathGetAccessControlResponse {\n  return {\n    ...response,\n    _response: response._response,\n    permissions: toPermissions(response.permissions),\n    acl: toAcl(response.acl)\n  };\n}\n\nexport function toRolePermissions(\n  permissionsString: string,\n  allowStickyBit: boolean = false\n): RolePermissions {\n  const error = new RangeError(\n    `toRolePermissions() Invalid role permissions string ${permissionsString}`\n  );\n  if (permissionsString.length !== 3) {\n    throw error;\n  }\n\n  permissionsString = permissionsString.toLowerCase();\n\n  let read = false;\n  if (permissionsString[0] === \"r\") {\n    read = true;\n  } else if (permissionsString[0] !== \"-\") {\n    throw error;\n  }\n\n  let write = false;\n  if (permissionsString[1] === \"w\") {\n    write = true;\n  } else if (permissionsString[1] !== \"-\") {\n    throw error;\n  }\n\n  let execute = false;\n  if (permissionsString[2] === \"x\") {\n    execute = true;\n  } else if (allowStickyBit) {\n    if (permissionsString[2] === \"t\") {\n      execute = true;\n    } else if (permissionsString[2] !== \"-\") {\n      throw error;\n    }\n  } else if (permissionsString[2] !== \"-\") {\n    throw error;\n  }\n\n  return { read, write, execute };\n}\n\nexport function toPermissions(permissionsString?: string): PathPermissions | undefined {\n  if (permissionsString === undefined || permissionsString === \"\" || permissionsString === null) {\n    return undefined;\n  }\n\n  if (permissionsString.length !== 9 && permissionsString.length !== 10) {\n    throw RangeError(`toPermissions() Invalid permissions string ${permissionsString}`);\n  }\n\n  // Case insensitive\n  permissionsString = permissionsString.toLowerCase();\n\n  let stickyBit = false;\n  if (permissionsString[8] === \"t\") {\n    stickyBit = true;\n  }\n\n  let extendedAcls = false;\n  if (permissionsString.length === 10) {\n    if (permissionsString[9] === \"+\") {\n      extendedAcls = true;\n    } else {\n      throw RangeError(\n        `toPermissions() Invalid extendedAcls bit ${permissionsString[9]} in permissions string ${permissionsString}`\n      );\n    }\n  }\n\n  const owner = toRolePermissions(permissionsString.substr(0, 3), false);\n  const group = toRolePermissions(permissionsString.substr(3, 3), false);\n  const other = toRolePermissions(permissionsString.substr(6, 3), true);\n\n  return {\n    owner,\n    group,\n    other,\n    stickyBit,\n    extendedAcls\n  };\n}\n\nexport function toAccessControlItem(aclItemString: string): PathAccessControlItem {\n  const error = new RangeError(\n    `toAccessControlItem() Parameter access control item string ${aclItemString} is not valid.`\n  );\n  if (aclItemString === \"\") {\n    throw error;\n  }\n\n  aclItemString = aclItemString.toLowerCase();\n\n  const parts = aclItemString.split(\":\");\n  if (parts.length < 3 || parts.length > 4) {\n    throw error;\n  }\n\n  let defaultScope = false;\n  let index = 0;\n  if (parts.length === 4) {\n    if (parts[index] !== \"default\") {\n      throw error;\n    }\n    defaultScope = true;\n    index++;\n  }\n\n  const accessControlType = parts[index++];\n  if (\n    accessControlType !== \"user\" &&\n    accessControlType !== \"group\" &&\n    accessControlType !== \"mask\" &&\n    accessControlType !== \"other\"\n  ) {\n    throw error;\n  }\n\n  const entityId = parts[index++];\n  const permissions = toRolePermissions(parts[index++]);\n\n  return {\n    defaultScope,\n    accessControlType,\n    entityId,\n    permissions\n  };\n}\n\nexport function toAcl(aclString?: string): PathAccessControlItem[] {\n  if (aclString === undefined || aclString === \"\" || aclString === null) {\n    return [];\n  }\n\n  const acls = [];\n  const aclParts = aclString.split(\",\");\n  for (const aclPart of aclParts) {\n    acls.push(toAccessControlItem(aclPart));\n  }\n\n  return acls;\n}\n\nexport function toAccessControlItemString(item: PathAccessControlItem): string {\n  return `${item.defaultScope ? \"default:\" : \"\"}${item.accessControlType}:${\n    item.entityId\n  }:${toRolePermissionsString(item.permissions)}`;\n}\n\nexport function toAclString(acl: PathAccessControlItem[]): string {\n  return acl.map(toAccessControlItemString).join(\",\");\n}\n\nexport function toRolePermissionsString(p: RolePermissions, stickyBit: boolean = false): string {\n  return `${p.read ? \"r\" : \"-\"}${p.write ? \"w\" : \"-\"}${stickyBit ? \"t\" : p.execute ? \"x\" : \"-\"}`;\n}\n\nexport function toPermissionsString(permissions: PathPermissions): string {\n  return `${toRolePermissionsString(permissions.owner)}${toRolePermissionsString(\n    permissions.group\n  )}${toRolePermissionsString(permissions.other, permissions.stickyBit)}${\n    permissions.extendedAcls ? \"+\" : \"\"\n  }`;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { isNode, isTokenCredential, TokenCredential } from \"@azure/core-http\";\nimport { SpanOptions } from \"@opentelemetry/types\";\n\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { StorageClientContext } from \"./generated/src/storageClientContext\";\nimport { Pipeline } from \"./Pipeline\";\nimport { toBlobEndpointUrl, toDfsEndpointUrl } from \"./transforms\";\nimport { escapeURLPath, getAccountNameFromUrl, getURLScheme, iEqual } from \"./utils/utils.common\";\n\n\n/**\n * An interface for options common to every remote operation.\n */\nexport interface CommonOptions {\n  /**\n   * Options to configure spans created when tracing is enabled.\n   */\n  tracingOptions?: OperationTracingOptions;\n}\n\nexport interface OperationTracingOptions {\n  /**\n   * OpenTelemetry SpanOptions used to create a span when tracing is enabled.\n   */\n  spanOptions?: SpanOptions;\n}\n\n/**\n * A StorageClient represents a based URL class for {@link BlobServiceClient}, {@link ContainerClient}\n * and etc.\n *\n * @export\n * @class StorageClient\n */\nexport abstract class StorageClient {\n  /**\n   * Encoded URL string value.\n   *\n   * @type {string}\n   * @memberof StorageClient\n   */\n  public readonly url: string;\n\n  public readonly accountName: string;\n\n  /**\n   * Encoded URL string value for corresponding blob endpoint.\n   *\n   * @type {string}\n   * @memberof StorageClient\n   */\n  protected readonly blobEndpointUrl: string;\n\n  /**\n   * Encoded URL string value for corresponding dfs endpoint.\n   *\n   * @type {string}\n   * @memberof StorageClient\n   */\n  protected readonly dfsEndpointUrl: string;\n\n  /**\n   * Request policy pipeline.\n   *\n   * @internal\n   * @ignore\n   * @type {Pipeline}\n   * @memberof StorageClient\n   */\n  protected readonly pipeline: Pipeline;\n  /**\n   * Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the @azure/identity package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   *\n   * @type {StorageSharedKeyCredential | AnonymousCredential | TokenCredential}\n   * @memberof StorageClient\n   */\n  public readonly credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential;\n  /**\n   * StorageClient is a reference to protocol layer operations entry, which is\n   * generated by AutoRest generator.\n   *\n   * @protected\n   * @type {StorageClientContext}\n   * @memberof StorageClient\n   */\n  protected readonly storageClientContext: StorageClientContext;\n  /**\n   * @protected\n   * @type {boolean}\n   * @memberof StorageClient\n   */\n  protected readonly isHttps: boolean;\n\n  /**\n   * Creates an instance of StorageClient.\n   * @param {string} url url to resource\n   * @param {Pipeline} pipeline request policy pipeline.\n   * @memberof StorageClient\n   */\n  protected constructor(url: string, pipeline: Pipeline) {\n    // URL should be encoded and only once, protocol layer shouldn't encode URL again\n    this.url = escapeURLPath(url);\n    this.blobEndpointUrl = toBlobEndpointUrl(this.url);\n    this.dfsEndpointUrl = toDfsEndpointUrl(this.url);\n    this.accountName = getAccountNameFromUrl(this.blobEndpointUrl);\n    this.pipeline = pipeline;\n    this.storageClientContext = new StorageClientContext(\n      this.dfsEndpointUrl,\n      pipeline.toServiceClientOptions()\n    );\n\n    this.isHttps = iEqual(getURLScheme(this.url) || \"\", \"https\");\n\n    this.credential = new AnonymousCredential();\n    for (const factory of this.pipeline.factories) {\n      if (\n        (isNode && factory instanceof StorageSharedKeyCredential) ||\n        factory instanceof AnonymousCredential ||\n        isTokenCredential(factory)\n      ) {\n        this.credential = factory;\n      }\n    }\n\n    // Override protocol layer's default content-type\n    const storageClientContext = this.storageClientContext as any;\n    storageClientContext.requestContentType = undefined;\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\n\nimport * as coreHttp from \"@azure/core-http\";\n\n/**\n * An interface representing Path.\n */\nexport interface Path {\n  name?: string;\n  /**\n   * Default value: false.\n   */\n  isDirectory?: boolean;\n  lastModified?: Date;\n  eTag?: string;\n  contentLength?: number;\n  owner?: string;\n  group?: string;\n  permissions?: string;\n}\n\n/**\n * An interface representing PathList.\n */\nexport interface PathList {\n  paths?: Path[];\n}\n\n/**\n * An interface representing FileSystem.\n */\nexport interface FileSystem {\n  name?: string;\n  lastModified?: Date;\n  eTag?: string;\n}\n\n/**\n * An interface representing FileSystemList.\n */\nexport interface FileSystemList {\n  filesystems?: FileSystem[];\n}\n\n/**\n * The service error response object.\n */\nexport interface StorageErrorError {\n  /**\n   * The service error code.\n   */\n  code?: string;\n  /**\n   * The service error message.\n   */\n  message?: string;\n}\n\n/**\n * An interface representing StorageError.\n */\nexport interface StorageError {\n  /**\n   * The service error response object.\n   */\n  error?: StorageErrorError;\n}\n\n/**\n * Additional parameters for a set of operations.\n */\nexport interface ModifiedAccessConditions {\n  /**\n   * Specify this header value to operate only on a blob if it has been modified since the\n   * specified date/time.\n   */\n  ifModifiedSince?: Date;\n  /**\n   * Specify this header value to operate only on a blob if it has not been modified since the\n   * specified date/time.\n   */\n  ifUnmodifiedSince?: Date;\n  /**\n   * Specify an ETag value to operate only on blobs with a matching value.\n   */\n  ifMatch?: string;\n  /**\n   * Specify an ETag value to operate only on blobs without a matching value.\n   */\n  ifNoneMatch?: string;\n}\n\n/**\n * Additional parameters for a set of operations, such as: Path_create, Path_update,\n * Path_flushData, Path_appendData.\n */\nexport interface PathHttpHeaders {\n  /**\n   * Optional. Sets the blob's cache control. If specified, this property is stored with the blob\n   * and returned with a read request.\n   */\n  cacheControl?: string;\n  /**\n   * Optional. Sets the blob's content encoding. If specified, this property is stored with the\n   * blob and returned with a read request.\n   */\n  contentEncoding?: string;\n  /**\n   * Optional. Set the blob's content language. If specified, this property is stored with the blob\n   * and returned with a read request.\n   */\n  contentLanguage?: string;\n  /**\n   * Optional. Sets the blob's Content-Disposition header.\n   */\n  contentDisposition?: string;\n  /**\n   * Optional. Sets the blob's content type. If specified, this property is stored with the blob\n   * and returned with a read request.\n   */\n  contentType?: string;\n  /**\n   * Specify the transactional md5 for the body, to be validated by the service.\n   */\n  contentMD5?: Uint8Array;\n  /**\n   * Specify the transactional md5 for the body, to be validated by the service.\n   */\n  transactionalContentHash?: Uint8Array;\n}\n\n/**\n * Additional parameters for a set of operations.\n */\nexport interface LeaseAccessConditions {\n  /**\n   * If specified, the operation only succeeds if the resource's lease is active and matches this\n   * ID.\n   */\n  leaseId?: string;\n}\n\n/**\n * Additional parameters for create operation.\n */\nexport interface SourceModifiedAccessConditions {\n  /**\n   * Specify an ETag value to operate only on blobs with a matching value.\n   */\n  sourceIfMatch?: string;\n  /**\n   * Specify an ETag value to operate only on blobs without a matching value.\n   */\n  sourceIfNoneMatch?: string;\n  /**\n   * Specify this header value to operate only on a blob if it has been modified since the\n   * specified date/time.\n   */\n  sourceIfModifiedSince?: Date;\n  /**\n   * Specify this header value to operate only on a blob if it has not been modified since the\n   * specified date/time.\n   */\n  sourceIfUnmodifiedSince?: Date;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ServiceListFileSystemsOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * Filters results to filesystems within the specified prefix.\n   */\n  prefix?: string;\n  /**\n   * Optional.  When deleting a directory, the number of paths that are deleted with each\n   * invocation is limited.  If the number of paths to be deleted exceeds this limit, a\n   * continuation token is returned in this response header.  When a continuation token is returned\n   * in the response, it must be specified in a subsequent invocation of the delete operation to\n   * continue deleting the directory.\n   */\n  continuation?: string;\n  /**\n   * An optional value that specifies the maximum number of items to return. If omitted or greater\n   * than 5,000, the response will include up to 5,000 items.\n   */\n  maxResults?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface FileSystemCreateOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * Optional. User-defined properties to be stored with the filesystem, in the format of a\n   * comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64\n   * encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1\n   * character set.  If the filesystem exists, any properties not included in the list will be\n   * removed.  All properties are removed if the header is omitted.  To merge new and existing\n   * properties, first get all existing properties and the current E-Tag, then make a conditional\n   * request with the E-Tag and include values for all properties.\n   */\n  properties?: string;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface FileSystemSetPropertiesOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * Optional. User-defined properties to be stored with the filesystem, in the format of a\n   * comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64\n   * encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1\n   * character set.  If the filesystem exists, any properties not included in the list will be\n   * removed.  All properties are removed if the header is omitted.  To merge new and existing\n   * properties, first get all existing properties and the current E-Tag, then make a conditional\n   * request with the E-Tag and include values for all properties.\n   */\n  properties?: string;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface FileSystemGetPropertiesOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface FileSystemDeleteMethodOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface FileSystemListPathsOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * Optional.  When deleting a directory, the number of paths that are deleted with each\n   * invocation is limited.  If the number of paths to be deleted exceeds this limit, a\n   * continuation token is returned in this response header.  When a continuation token is returned\n   * in the response, it must be specified in a subsequent invocation of the delete operation to\n   * continue deleting the directory.\n   */\n  continuation?: string;\n  /**\n   * Optional.  Filters results to paths within the specified directory. An error occurs if the\n   * directory does not exist.\n   */\n  path?: string;\n  /**\n   * An optional value that specifies the maximum number of items to return. If omitted or greater\n   * than 5,000, the response will include up to 5,000 items.\n   */\n  maxResults?: number;\n  /**\n   * Optional. Valid only when Hierarchical Namespace is enabled for the account. If \"true\", the\n   * user identity values returned in the x-ms-owner, x-ms-group, and x-ms-acl response headers\n   * will be transformed from Azure Active Directory Object IDs to User Principal Names.  If\n   * \"false\", the values will be returned as Azure Active Directory Object IDs. The default value\n   * is false. Note that group and application Object IDs are not translated because they do not\n   * have unique friendly names.\n   */\n  upn?: boolean;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface PathCreateOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * Required only for Create File and Create Directory. The value must be \"file\" or \"directory\".\n   * Possible values include: 'directory', 'file'\n   */\n  resource?: PathResourceType;\n  /**\n   * Optional.  When deleting a directory, the number of paths that are deleted with each\n   * invocation is limited.  If the number of paths to be deleted exceeds this limit, a\n   * continuation token is returned in this response header.  When a continuation token is returned\n   * in the response, it must be specified in a subsequent invocation of the delete operation to\n   * continue deleting the directory.\n   */\n  continuation?: string;\n  /**\n   * Optional. Valid only when namespace is enabled. This parameter determines the behavior of the\n   * rename operation. The value must be \"legacy\" or \"posix\", and the default value will be\n   * \"posix\". Possible values include: 'legacy', 'posix'\n   */\n  mode?: PathRenameMode;\n  /**\n   * An optional file or directory to be renamed.  The value must have the following format:\n   * \"/{filesystem}/{path}\".  If \"x-ms-properties\" is specified, the properties will overwrite the\n   * existing properties; otherwise, the existing properties will be preserved. This value must be\n   * a URL percent-encoded string. Note that the string may only contain ASCII characters in the\n   * ISO-8859-1 character set.\n   */\n  renameSource?: string;\n  /**\n   * A lease ID for the source path. If specified, the source path must have an active lease and\n   * the leaase ID must match.\n   */\n  sourceLeaseId?: string;\n  /**\n   * Optional. User-defined properties to be stored with the filesystem, in the format of a\n   * comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64\n   * encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1\n   * character set.  If the filesystem exists, any properties not included in the list will be\n   * removed.  All properties are removed if the header is omitted.  To merge new and existing\n   * properties, first get all existing properties and the current E-Tag, then make a conditional\n   * request with the E-Tag and include values for all properties.\n   */\n  properties?: string;\n  /**\n   * Optional and only valid if Hierarchical Namespace is enabled for the account. Sets POSIX\n   * access permissions for the file owner, the file owning group, and others. Each class may be\n   * granted read, write, or execute permission.  The sticky bit is also supported.  Both symbolic\n   * (rwxrw-rw-) and 4-digit octal notation (e.g. 0766) are supported.\n   */\n  permissions?: string;\n  /**\n   * Optional and only valid if Hierarchical Namespace is enabled for the account. When creating a\n   * file or directory and the parent folder does not have a default ACL, the umask restricts the\n   * permissions of the file or directory to be created.  The resulting permission is given by p\n   * bitwise and not u, where p is the permission and u is the umask.  For example, if p is 0777\n   * and u is 0057, then the resulting permission is 0720.  The default permission is 0777 for a\n   * directory and 0666 for a file.  The default umask is 0027.  The umask must be specified in\n   * 4-digit octal notation (e.g. 0766).\n   */\n  umask?: string;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Additional parameters for the operation\n   */\n  pathHttpHeaders?: PathHttpHeaders;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  sourceModifiedAccessConditions?: SourceModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface PathUpdateOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * This parameter allows the caller to upload data in parallel and control the order in which it\n   * is appended to the file.  It is required when uploading data to be appended to the file and\n   * when flushing previously uploaded data to the file.  The value must be the position where the\n   * data is to be appended.  Uploaded data is not immediately flushed, or written, to the file.\n   * To flush, the previously uploaded data must be contiguous, the position parameter must be\n   * specified and equal to the length of the file after all data has been written, and there must\n   * not be a request entity body included with the request.\n   */\n  position?: number;\n  /**\n   * Valid only for flush operations.  If \"true\", uncommitted data is retained after the flush\n   * operation completes; otherwise, the uncommitted data is deleted after the flush operation.\n   * The default is false.  Data at offsets less than the specified position are written to the\n   * file when flush succeeds, but this optional parameter allows data after the flush position to\n   * be retained for a future flush operation.\n   */\n  retainUncommittedData?: boolean;\n  /**\n   * Azure Storage Events allow applications to receive notifications when files change. When Azure\n   * Storage Events are enabled, a file changed event is raised. This event has a property\n   * indicating whether this is the final change to distinguish the difference between an\n   * intermediate flush to a file stream and the final close of a file stream. The close query\n   * parameter is valid only when the action is \"flush\" and change notifications are enabled. If\n   * the value of close is \"true\" and the flush operation completes successfully, the service\n   * raises a file change notification with a property indicating that this is the final update\n   * (the file stream has been closed). If \"false\" a change notification is raised indicating the\n   * file has changed. The default is false. This query parameter is set to true by the Hadoop ABFS\n   * driver to indicate that the file stream has been closed.\"\n   */\n  close?: boolean;\n  /**\n   * Required for \"Append Data\" and \"Flush Data\".  Must be 0 for \"Flush Data\".  Must be the length\n   * of the request content in bytes for \"Append Data\".\n   */\n  contentLength?: number;\n  /**\n   * Optional. User-defined properties to be stored with the filesystem, in the format of a\n   * comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64\n   * encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1\n   * character set.  If the filesystem exists, any properties not included in the list will be\n   * removed.  All properties are removed if the header is omitted.  To merge new and existing\n   * properties, first get all existing properties and the current E-Tag, then make a conditional\n   * request with the E-Tag and include values for all properties.\n   */\n  properties?: string;\n  /**\n   * Optional. The owner of the blob or directory.\n   */\n  owner?: string;\n  /**\n   * Optional. The owning group of the blob or directory.\n   */\n  group?: string;\n  /**\n   * Optional and only valid if Hierarchical Namespace is enabled for the account. Sets POSIX\n   * access permissions for the file owner, the file owning group, and others. Each class may be\n   * granted read, write, or execute permission.  The sticky bit is also supported.  Both symbolic\n   * (rwxrw-rw-) and 4-digit octal notation (e.g. 0766) are supported.\n   */\n  permissions?: string;\n  /**\n   * Sets POSIX access control rights on files and directories. The value is a comma-separated list\n   * of access control entries. Each access control entry (ACE) consists of a scope, a type, a user\n   * or group identifier, and permissions in the format \"[scope:][type]:[id]:[permissions]\".\n   */\n  acl?: string;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Additional parameters for the operation\n   */\n  pathHttpHeaders?: PathHttpHeaders;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface PathLeaseOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The lease duration is required to acquire a lease, and specifies the duration of the lease in\n   * seconds.  The lease duration must be between 15 and 60 seconds or -1 for infinite lease.\n   */\n  xMsLeaseDuration?: number;\n  /**\n   * The lease break period duration is optional to break a lease, and  specifies the break period\n   * of the lease in seconds.  The lease break  duration must be between 0 and 60 seconds.\n   */\n  xMsLeaseBreakPeriod?: number;\n  /**\n   * Proposed lease ID, in a GUID string format. The Blob service returns 400 (Invalid request) if\n   * the proposed lease ID is not in the correct format. See Guid Constructor (String) for a list\n   * of valid GUID string formats.\n   */\n  proposedLeaseId?: string;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface PathReadOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The HTTP Range request header specifies one or more byte ranges of the resource to be\n   * retrieved.\n   */\n  range?: string;\n  /**\n   * Optional. When this header is set to \"true\" and specified together with the Range header, the\n   * service returns the MD5 hash for the range, as long as the range is less than or equal to 4MB\n   * in size. If this header is specified without the Range header, the service returns status code\n   * 400 (Bad Request). If this header is set to true when the range exceeds 4 MB in size, the\n   * service returns status code 400 (Bad Request).\n   */\n  xMsRangeGetContentMd5?: boolean;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface PathGetPropertiesOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * Optional. If the value is \"getStatus\" only the system defined properties for the path are\n   * returned. If the value is \"getAccessControl\" the access control list is returned in the\n   * response headers (Hierarchical Namespace must be enabled for the account), otherwise the\n   * properties are returned. Possible values include: 'getAccessControl', 'getStatus'\n   */\n  action?: PathGetPropertiesAction;\n  /**\n   * Optional. Valid only when Hierarchical Namespace is enabled for the account. If \"true\", the\n   * user identity values returned in the x-ms-owner, x-ms-group, and x-ms-acl response headers\n   * will be transformed from Azure Active Directory Object IDs to User Principal Names.  If\n   * \"false\", the values will be returned as Azure Active Directory Object IDs. The default value\n   * is false. Note that group and application Object IDs are not translated because they do not\n   * have unique friendly names.\n   */\n  upn?: boolean;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface PathDeleteMethodOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * Required\n   */\n  recursive?: boolean;\n  /**\n   * Optional.  When deleting a directory, the number of paths that are deleted with each\n   * invocation is limited.  If the number of paths to be deleted exceeds this limit, a\n   * continuation token is returned in this response header.  When a continuation token is returned\n   * in the response, it must be specified in a subsequent invocation of the delete operation to\n   * continue deleting the directory.\n   */\n  continuation?: string;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface PathSetAccessControlOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Optional. The owner of the blob or directory.\n   */\n  owner?: string;\n  /**\n   * Optional. The owning group of the blob or directory.\n   */\n  group?: string;\n  /**\n   * Optional and only valid if Hierarchical Namespace is enabled for the account. Sets POSIX\n   * access permissions for the file owner, the file owning group, and others. Each class may be\n   * granted read, write, or execute permission.  The sticky bit is also supported.  Both symbolic\n   * (rwxrw-rw-) and 4-digit octal notation (e.g. 0766) are supported.\n   */\n  permissions?: string;\n  /**\n   * Sets POSIX access control rights on files and directories. The value is a comma-separated list\n   * of access control entries. Each access control entry (ACE) consists of a scope, a type, a user\n   * or group identifier, and permissions in the format \"[scope:][type]:[id]:[permissions]\".\n   */\n  acl?: string;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface PathFlushDataOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * This parameter allows the caller to upload data in parallel and control the order in which it\n   * is appended to the file.  It is required when uploading data to be appended to the file and\n   * when flushing previously uploaded data to the file.  The value must be the position where the\n   * data is to be appended.  Uploaded data is not immediately flushed, or written, to the file.\n   * To flush, the previously uploaded data must be contiguous, the position parameter must be\n   * specified and equal to the length of the file after all data has been written, and there must\n   * not be a request entity body included with the request.\n   */\n  position?: number;\n  /**\n   * Valid only for flush operations.  If \"true\", uncommitted data is retained after the flush\n   * operation completes; otherwise, the uncommitted data is deleted after the flush operation.\n   * The default is false.  Data at offsets less than the specified position are written to the\n   * file when flush succeeds, but this optional parameter allows data after the flush position to\n   * be retained for a future flush operation.\n   */\n  retainUncommittedData?: boolean;\n  /**\n   * Azure Storage Events allow applications to receive notifications when files change. When Azure\n   * Storage Events are enabled, a file changed event is raised. This event has a property\n   * indicating whether this is the final change to distinguish the difference between an\n   * intermediate flush to a file stream and the final close of a file stream. The close query\n   * parameter is valid only when the action is \"flush\" and change notifications are enabled. If\n   * the value of close is \"true\" and the flush operation completes successfully, the service\n   * raises a file change notification with a property indicating that this is the final update\n   * (the file stream has been closed). If \"false\" a change notification is raised indicating the\n   * file has changed. The default is false. This query parameter is set to true by the Hadoop ABFS\n   * driver to indicate that the file stream has been closed.\"\n   */\n  close?: boolean;\n  /**\n   * Required for \"Append Data\" and \"Flush Data\".  Must be 0 for \"Flush Data\".  Must be the length\n   * of the request content in bytes for \"Append Data\".\n   */\n  contentLength?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  pathHttpHeaders?: PathHttpHeaders;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Additional parameters for the operation\n   */\n  modifiedAccessConditions?: ModifiedAccessConditions;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface PathAppendDataOptionalParams extends coreHttp.RequestOptionsBase {\n  /**\n   * This parameter allows the caller to upload data in parallel and control the order in which it\n   * is appended to the file.  It is required when uploading data to be appended to the file and\n   * when flushing previously uploaded data to the file.  The value must be the position where the\n   * data is to be appended.  Uploaded data is not immediately flushed, or written, to the file.\n   * To flush, the previously uploaded data must be contiguous, the position parameter must be\n   * specified and equal to the length of the file after all data has been written, and there must\n   * not be a request entity body included with the request.\n   */\n  position?: number;\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/fileservices/setting-timeouts-for-blob-service-operations\">Setting\n   * Timeouts for Blob Service Operations.</a>\n   */\n  timeoutParameter?: number;\n  /**\n   * Required for \"Append Data\" and \"Flush Data\".  Must be 0 for \"Flush Data\".  Must be the length\n   * of the request content in bytes for \"Append Data\".\n   */\n  contentLength?: number;\n  /**\n   * Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the\n   * analytics logs when storage analytics logging is enabled.\n   */\n  requestId?: string;\n  /**\n   * Additional parameters for the operation\n   */\n  pathHttpHeaders?: PathHttpHeaders;\n  /**\n   * Additional parameters for the operation\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Defines headers for ListFileSystems operation.\n */\nexport interface ServiceListFileSystemsHeaders {\n  /**\n   * A UTC date/time value generated by the service that indicates the time at which the response\n   * was initiated.\n   */\n  date?: Date;\n  /**\n   * A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.\n   */\n  requestId?: string;\n  /**\n   * The version of the REST protocol used to process the request.\n   */\n  version?: string;\n  /**\n   * If the number of filesystems to be listed exceeds the maxResults limit, a continuation token\n   * is returned in this response header.  When a continuation token is returned in the response,\n   * it must be specified in a subsequent invocation of the list operation to continue listing the\n   * filesystems.\n   */\n  continuation?: string;\n  /**\n   * The content type of list filesystem response. The default content type is application/json.\n   */\n  contentType?: string;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for Create operation.\n */\nexport interface FileSystemCreateHeaders {\n  /**\n   * A UTC date/time value generated by the service that indicates the time at which the response\n   * was initiated.\n   */\n  date?: Date;\n  /**\n   * An HTTP entity tag associated with the FileSystem.\n   */\n  eTag?: string;\n  /**\n   * The data and time the filesystem was last modified.  Operations on files and directories do\n   * not affect the last modified time.\n   */\n  lastModified?: Date;\n  /**\n   * A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.\n   */\n  clientRequestId?: string;\n  /**\n   * The version of the REST protocol used to process the request.\n   */\n  version?: string;\n  /**\n   * A bool string indicates whether the namespace feature is enabled. If \"true\", the namespace is\n   * enabled for the filesystem.\n   */\n  namespaceEnabled?: string;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for SetProperties operation.\n */\nexport interface FileSystemSetPropertiesHeaders {\n  /**\n   * A UTC date/time value generated by the service that indicates the time at which the response\n   * was initiated.\n   */\n  date?: Date;\n  /**\n   * An HTTP entity tag associated with the filesystem.  Changes to filesystem properties affect\n   * the entity tag, but operations on files and directories do not.\n   */\n  eTag?: string;\n  /**\n   * The data and time the filesystem was last modified.  Changes to filesystem properties update\n   * the last modified time, but operations on files and directories do not.\n   */\n  lastModified?: Date;\n  /**\n   * A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.\n   */\n  requestId?: string;\n  /**\n   * The version of the REST protocol used to process the request.\n   */\n  version?: string;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for GetProperties operation.\n */\nexport interface FileSystemGetPropertiesHeaders {\n  /**\n   * A UTC date/time value generated by the service that indicates the time at which the response\n   * was initiated.\n   */\n  date?: Date;\n  /**\n   * An HTTP entity tag associated with the filesystem.  Changes to filesystem properties affect\n   * the entity tag, but operations on files and directories do not.\n   */\n  eTag?: string;\n  /**\n   * The data and time the filesystem was last modified.  Changes to filesystem properties update\n   * the last modified time, but operations on files and directories do not.\n   */\n  lastModified?: Date;\n  /**\n   * A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.\n   */\n  requestId?: string;\n  /**\n   * The version of the REST protocol used to process the request.\n   */\n  version?: string;\n  /**\n   * The user-defined properties associated with the filesystem.  A comma-separated list of name\n   * and value pairs in the format \"n1=v1, n2=v2, ...\", where each value is a base64 encoded\n   * string. Note that the string may only contain ASCII characters in the ISO-8859-1 character\n   * set.\n   */\n  properties?: string;\n  /**\n   * A bool string indicates whether the namespace feature is enabled. If \"true\", the namespace is\n   * enabled for the filesystem.\n   */\n  namespaceEnabled?: string;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for Delete operation.\n */\nexport interface FileSystemDeleteHeaders {\n  /**\n   * A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.\n   */\n  requestId?: string;\n  /**\n   * The version of the REST protocol used to process the request.\n   */\n  version?: string;\n  /**\n   * A UTC date/time value generated by the service that indicates the time at which the response\n   * was initiated.\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for ListPaths operation.\n */\nexport interface FileSystemListPathsHeaders {\n  /**\n   * A UTC date/time value generated by the service that indicates the time at which the response\n   * was initiated.\n   */\n  date?: Date;\n  /**\n   * An HTTP entity tag associated with the filesystem.  Changes to filesystem properties affect\n   * the entity tag, but operations on files and directories do not.\n   */\n  eTag?: string;\n  /**\n   * The data and time the filesystem was last modified.  Changes to filesystem properties update\n   * the last modified time, but operations on files and directories do not.\n   */\n  lastModified?: Date;\n  /**\n   * A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.\n   */\n  requestId?: string;\n  /**\n   * The version of the REST protocol used to process the request.\n   */\n  version?: string;\n  /**\n   * If the number of paths to be listed exceeds the maxResults limit, a continuation token is\n   * returned in this response header.  When a continuation token is returned in the response, it\n   * must be specified in a subsequent invocation of the list operation to continue listing the\n   * paths.\n   */\n  continuation?: string;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for Create operation.\n */\nexport interface PathCreateHeaders {\n  /**\n   * A UTC date/time value generated by the service that indicates the time at which the response\n   * was initiated.\n   */\n  date?: Date;\n  /**\n   * An HTTP entity tag associated with the file or directory.\n   */\n  eTag?: string;\n  /**\n   * The data and time the file or directory was last modified.  Write operations on the file or\n   * directory update the last modified time.\n   */\n  lastModified?: Date;\n  /**\n   * A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.\n   */\n  requestId?: string;\n  /**\n   * The version of the REST protocol used to process the request.\n   */\n  version?: string;\n  /**\n   * When renaming a directory, the number of paths that are renamed with each invocation is\n   * limited.  If the number of paths to be renamed exceeds this limit, a continuation token is\n   * returned in this response header.  When a continuation token is returned in the response, it\n   * must be specified in a subsequent invocation of the rename operation to continue renaming the\n   * directory.\n   */\n  continuation?: string;\n  /**\n   * The size of the resource in bytes.\n   */\n  contentLength?: number;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for Update operation.\n */\nexport interface PathUpdateHeaders {\n  /**\n   * A UTC date/time value generated by the service that indicates the time at which the response\n   * was initiated.\n   */\n  date?: Date;\n  /**\n   * An HTTP entity tag associated with the file or directory.\n   */\n  eTag?: string;\n  /**\n   * The data and time the file or directory was last modified.  Write operations on the file or\n   * directory update the last modified time.\n   */\n  lastModified?: Date;\n  /**\n   * Indicates that the service supports requests for partial file content.\n   */\n  acceptRanges?: string;\n  /**\n   * If the Cache-Control request header has previously been set for the resource, that value is\n   * returned in this header.\n   */\n  cacheControl?: string;\n  /**\n   * If the Content-Disposition request header has previously been set for the resource, that value\n   * is returned in this header.\n   */\n  contentDisposition?: string;\n  /**\n   * If the Content-Encoding request header has previously been set for the resource, that value is\n   * returned in this header.\n   */\n  contentEncoding?: string;\n  /**\n   * If the Content-Language request header has previously been set for the resource, that value is\n   * returned in this header.\n   */\n  contentLanguage?: string;\n  /**\n   * The size of the resource in bytes.\n   */\n  contentLength?: number;\n  /**\n   * Indicates the range of bytes returned in the event that the client requested a subset of the\n   * file by setting the Range request header.\n   */\n  contentRange?: string;\n  /**\n   * The content type specified for the resource. If no content type was specified, the default\n   * content type is application/octet-stream.\n   */\n  contentType?: string;\n  /**\n   * An MD5 hash of the request content. This header is only returned for \"Append\" operation. This\n   * header is returned so that the client can check for message content integrity. The value of\n   * this header is computed by the service; it is not necessarily the same value specified in the\n   * request headers.\n   */\n  contentMD5?: string;\n  /**\n   * User-defined properties associated with the file or directory, in the format of a\n   * comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64\n   * encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1\n   * character set.\n   */\n  properties?: string;\n  /**\n   * A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.\n   */\n  requestId?: string;\n  /**\n   * The version of the REST protocol used to process the request.\n   */\n  version?: string;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for Lease operation.\n */\nexport interface PathLeaseHeaders {\n  /**\n   * A UTC date/time value generated by the service that indicates the time at which the response\n   * was initiated.\n   */\n  date?: Date;\n  /**\n   * An HTTP entity tag associated with the file or directory.\n   */\n  eTag?: string;\n  /**\n   * The data and time the file or directory was last modified.  Write operations on the file or\n   * directory update the last modified time.\n   */\n  lastModified?: Date;\n  /**\n   * A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.\n   */\n  requestId?: string;\n  /**\n   * The version of the REST protocol used to process the request.\n   */\n  version?: string;\n  /**\n   * A successful \"acquire\" action returns the lease ID.\n   */\n  leaseId?: string;\n  /**\n   * The time remaining in the lease period in seconds.\n   */\n  leaseTime?: string;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for Read operation.\n */\nexport interface PathReadHeaders {\n  /**\n   * Indicates that the service supports requests for partial file content.\n   */\n  acceptRanges?: string;\n  /**\n   * If the Cache-Control request header has previously been set for the resource, that value is\n   * returned in this header.\n   */\n  cacheControl?: string;\n  /**\n   * If the Content-Disposition request header has previously been set for the resource, that value\n   * is returned in this header.\n   */\n  contentDisposition?: string;\n  /**\n   * If the Content-Encoding request header has previously been set for the resource, that value is\n   * returned in this header.\n   */\n  contentEncoding?: string;\n  /**\n   * If the Content-Language request header has previously been set for the resource, that value is\n   * returned in this header.\n   */\n  contentLanguage?: string;\n  /**\n   * The size of the resource in bytes.\n   */\n  contentLength?: number;\n  /**\n   * Indicates the range of bytes returned in the event that the client requested a subset of the\n   * file by setting the Range request header.\n   */\n  contentRange?: string;\n  /**\n   * The content type specified for the resource. If no content type was specified, the default\n   * content type is application/octet-stream.\n   */\n  contentType?: string;\n  /**\n   * The MD5 hash of read range. If the request is to read a specified range and the\n   * \"x-ms-range-get-content-md5\" is set to true, then the request returns an MD5 hash for the\n   * range, as long as the range size is less than or equal to 4 MB.\n   */\n  contentMD5?: string;\n  /**\n   * A UTC date/time value generated by the service that indicates the time at which the response\n   * was initiated.\n   */\n  date?: Date;\n  /**\n   * An HTTP entity tag associated with the file or directory.\n   */\n  eTag?: string;\n  /**\n   * The data and time the file or directory was last modified.  Write operations on the file or\n   * directory update the last modified time.\n   */\n  lastModified?: Date;\n  /**\n   * A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.\n   */\n  requestId?: string;\n  /**\n   * The version of the REST protocol used to process the request.\n   */\n  version?: string;\n  /**\n   * The type of the resource.  The value may be \"file\" or \"directory\".  If not set, the value is\n   * \"file\".\n   */\n  resourceType?: string;\n  /**\n   * The user-defined properties associated with the file or directory, in the format of a\n   * comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64\n   * encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1\n   * character set.\n   */\n  properties?: string;\n  /**\n   * When a resource is leased, specifies whether the lease is of infinite or fixed duration.\n   */\n  leaseDuration?: string;\n  /**\n   * Lease state of the resource.\n   */\n  leaseState?: string;\n  /**\n   * The lease status of the resource.\n   */\n  leaseStatus?: string;\n  /**\n   * The MD5 hash of complete file stored in storage. If the file has a MD5 hash, and if request\n   * contains range header (Range or x-ms-range), this response header is returned with the value\n   * of the complete file's MD5 value. This value may or may not be equal to the value returned in\n   * Content-MD5 header, with the latter calculated from the requested range.\n   */\n  xMsContentMd5?: string;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for GetProperties operation.\n */\nexport interface PathGetPropertiesHeaders {\n  /**\n   * Indicates that the service supports requests for partial file content.\n   */\n  acceptRanges?: string;\n  /**\n   * If the Cache-Control request header has previously been set for the resource, that value is\n   * returned in this header.\n   */\n  cacheControl?: string;\n  /**\n   * If the Content-Disposition request header has previously been set for the resource, that value\n   * is returned in this header.\n   */\n  contentDisposition?: string;\n  /**\n   * If the Content-Encoding request header has previously been set for the resource, that value is\n   * returned in this header.\n   */\n  contentEncoding?: string;\n  /**\n   * If the Content-Language request header has previously been set for the resource, that value is\n   * returned in this header.\n   */\n  contentLanguage?: string;\n  /**\n   * The size of the resource in bytes.\n   */\n  contentLength?: number;\n  /**\n   * Indicates the range of bytes returned in the event that the client requested a subset of the\n   * file by setting the Range request header.\n   */\n  contentRange?: string;\n  /**\n   * The content type specified for the resource. If no content type was specified, the default\n   * content type is application/octet-stream.\n   */\n  contentType?: string;\n  /**\n   * The MD5 hash of complete file stored in storage. This header is returned only for\n   * \"GetProperties\" operation. If the Content-MD5 header has been set for the file, this response\n   * header is returned for GetProperties call so that the client can check for message content\n   * integrity.\n   */\n  contentMD5?: string;\n  /**\n   * A UTC date/time value generated by the service that indicates the time at which the response\n   * was initiated.\n   */\n  date?: Date;\n  /**\n   * An HTTP entity tag associated with the file or directory.\n   */\n  eTag?: string;\n  /**\n   * The data and time the file or directory was last modified.  Write operations on the file or\n   * directory update the last modified time.\n   */\n  lastModified?: Date;\n  /**\n   * A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.\n   */\n  requestId?: string;\n  /**\n   * The version of the REST protocol used to process the request.\n   */\n  version?: string;\n  /**\n   * The type of the resource.  The value may be \"file\" or \"directory\".  If not set, the value is\n   * \"file\".\n   */\n  resourceType?: string;\n  /**\n   * The user-defined properties associated with the file or directory, in the format of a\n   * comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64\n   * encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1\n   * character set.\n   */\n  properties?: string;\n  /**\n   * The owner of the file or directory. Included in the response if Hierarchical Namespace is\n   * enabled for the account.\n   */\n  owner?: string;\n  /**\n   * The owning group of the file or directory. Included in the response if Hierarchical Namespace\n   * is enabled for the account.\n   */\n  group?: string;\n  /**\n   * The POSIX access permissions for the file owner, the file owning group, and others. Included\n   * in the response if Hierarchical Namespace is enabled for the account.\n   */\n  permissions?: string;\n  /**\n   * The POSIX access control list for the file or directory.  Included in the response only if the\n   * action is \"getAccessControl\" and Hierarchical Namespace is enabled for the account.\n   */\n  acl?: string;\n  /**\n   * When a resource is leased, specifies whether the lease is of infinite or fixed duration.\n   */\n  leaseDuration?: string;\n  /**\n   * Lease state of the resource.\n   */\n  leaseState?: string;\n  /**\n   * The lease status of the resource.\n   */\n  leaseStatus?: string;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for Delete operation.\n */\nexport interface PathDeleteHeaders {\n  /**\n   * A UTC date/time value generated by the service that indicates the time at which the response\n   * was initiated.\n   */\n  date?: Date;\n  /**\n   * A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.\n   */\n  requestId?: string;\n  /**\n   * The version of the REST protocol used to process the request.\n   */\n  version?: string;\n  /**\n   * When deleting a directory, the number of paths that are deleted with each invocation is\n   * limited.  If the number of paths to be deleted exceeds this limit, a continuation token is\n   * returned in this response header.  When a continuation token is returned in the response, it\n   * must be specified in a subsequent invocation of the delete operation to continue deleting the\n   * directory.\n   */\n  continuation?: string;\n  errorCode?: string;\n}\n\n/**\n * Defines headers for SetAccessControl operation.\n */\nexport interface PathSetAccessControlHeaders {\n  /**\n   * A UTC date/time value generated by the service that indicates the time at which the response\n   * was initiated.\n   */\n  date?: Date;\n  /**\n   * An HTTP entity tag associated with the file or directory.\n   */\n  eTag?: string;\n  /**\n   * The data and time the file or directory was last modified. Write operations on the file or\n   * directory update the last modified time.\n   */\n  lastModified?: Date;\n  /**\n   * If a client request id header is sent in the request, this header will be present in the\n   * response with the same value.\n   */\n  clientRequestId?: string;\n  /**\n   * A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.\n   */\n  requestId?: string;\n  /**\n   * The version of the REST protocol used to process the request.\n   */\n  version?: string;\n}\n\n/**\n * Defines headers for FlushData operation.\n */\nexport interface PathFlushDataHeaders {\n  /**\n   * A UTC date/time value generated by the service that indicates the time at which the response\n   * was initiated.\n   */\n  date?: Date;\n  /**\n   * An HTTP entity tag associated with the file or directory.\n   */\n  eTag?: string;\n  /**\n   * The data and time the file or directory was last modified.  Write operations on the file or\n   * directory update the last modified time.\n   */\n  lastModified?: Date;\n  /**\n   * The size of the resource in bytes.\n   */\n  contentLength?: number;\n  /**\n   * If a client request id header is sent in the request, this header will be present in the\n   * response with the same value.\n   */\n  clientRequestId?: string;\n  /**\n   * A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.\n   */\n  requestId?: string;\n  /**\n   * The version of the REST protocol used to process the request.\n   */\n  version?: string;\n}\n\n/**\n * Defines headers for AppendData operation.\n */\nexport interface PathAppendDataHeaders {\n  /**\n   * A UTC date/time value generated by the service that indicates the time at which the response\n   * was initiated.\n   */\n  date?: Date;\n  /**\n   * A server-generated UUID recorded in the analytics logs for troubleshooting and correlation.\n   */\n  requestId?: string;\n  /**\n   * If a client request id header is sent in the request, this header will be present in the\n   * response with the same value.\n   */\n  clientRequestId?: string;\n  /**\n   * The version of the REST protocol used to process the request.\n   */\n  version?: string;\n}\n\n/**\n * Defines values for PathResourceType.\n * Possible values include: 'directory', 'file'\n * @readonly\n * @enum {string}\n */\nexport enum PathResourceType {\n  Directory = 'directory',\n  File = 'file',\n}\n\n/**\n * Defines values for PathRenameMode.\n * Possible values include: 'legacy', 'posix'\n * @readonly\n * @enum {string}\n */\nexport enum PathRenameMode {\n  Legacy = 'legacy',\n  Posix = 'posix',\n}\n\n/**\n * Defines values for PathUpdateAction.\n * Possible values include: 'append', 'flush', 'setProperties', 'setAccessControl'\n * @readonly\n * @enum {string}\n */\nexport enum PathUpdateAction {\n  Append = 'append',\n  Flush = 'flush',\n  SetProperties = 'setProperties',\n  SetAccessControl = 'setAccessControl',\n}\n\n/**\n * Defines values for PathLeaseAction.\n * Possible values include: 'acquire', 'break', 'change', 'renew', 'release'\n * @readonly\n * @enum {string}\n */\nexport enum PathLeaseAction {\n  Acquire = 'acquire',\n  Break = 'break',\n  Change = 'change',\n  Renew = 'renew',\n  Release = 'release',\n}\n\n/**\n * Defines values for PathGetPropertiesAction.\n * Possible values include: 'getAccessControl', 'getStatus'\n * @readonly\n * @enum {string}\n */\nexport enum PathGetPropertiesAction {\n  GetAccessControl = 'getAccessControl',\n  GetStatus = 'getStatus',\n}\n\n/**\n * Contains response data for the listFileSystems operation.\n */\nexport type ServiceListFileSystemsResponse = FileSystemList & ServiceListFileSystemsHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ServiceListFileSystemsHeaders;\n\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: FileSystemList;\n    };\n};\n\n/**\n * Contains response data for the create operation.\n */\nexport type FileSystemCreateResponse = FileSystemCreateHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: FileSystemCreateHeaders;\n    };\n};\n\n/**\n * Contains response data for the setProperties operation.\n */\nexport type FileSystemSetPropertiesResponse = FileSystemSetPropertiesHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: FileSystemSetPropertiesHeaders;\n    };\n};\n\n/**\n * Contains response data for the getProperties operation.\n */\nexport type FileSystemGetPropertiesResponse = FileSystemGetPropertiesHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: FileSystemGetPropertiesHeaders;\n    };\n};\n\n/**\n * Contains response data for the deleteMethod operation.\n */\nexport type FileSystemDeleteResponse = FileSystemDeleteHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: FileSystemDeleteHeaders;\n    };\n};\n\n/**\n * Contains response data for the listPaths operation.\n */\nexport type FileSystemListPathsResponse = PathList & FileSystemListPathsHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: FileSystemListPathsHeaders;\n\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: PathList;\n    };\n};\n\n/**\n * Contains response data for the create operation.\n */\nexport type PathCreateResponse = PathCreateHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: PathCreateHeaders;\n    };\n};\n\n/**\n * Contains response data for the update operation.\n */\nexport type PathUpdateResponse = PathUpdateHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: PathUpdateHeaders;\n    };\n};\n\n/**\n * Contains response data for the lease operation.\n */\nexport type PathLeaseResponse = PathLeaseHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: PathLeaseHeaders;\n    };\n};\n\n/**\n * Contains response data for the read operation.\n */\nexport type PathReadResponse = PathReadHeaders & {\n  /**\n   * BROWSER ONLY\n   *\n   * The response body as a browser Blob.\n   * Always undefined in node.js.\n   */\n  blobBody?: Promise<Blob>;\n\n  /**\n   * NODEJS ONLY\n   *\n   * The response body as a node.js Readable stream.\n   * Always undefined in the browser.\n   */\n  readableStreamBody?: NodeJS.ReadableStream;\n\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: PathReadHeaders;\n    };\n};\n\n/**\n * Contains response data for the getProperties operation.\n */\nexport type PathGetPropertiesResponse = PathGetPropertiesHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: PathGetPropertiesHeaders;\n    };\n};\n\n/**\n * Contains response data for the deleteMethod operation.\n */\nexport type PathDeleteResponse = PathDeleteHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: PathDeleteHeaders;\n    };\n};\n\n/**\n * Contains response data for the setAccessControl operation.\n */\nexport type PathSetAccessControlResponse = PathSetAccessControlHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: PathSetAccessControlHeaders;\n    };\n};\n\n/**\n * Contains response data for the flushData operation.\n */\nexport type PathFlushDataResponse = PathFlushDataHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: PathFlushDataHeaders;\n    };\n};\n\n/**\n * Contains response data for the appendData operation.\n */\nexport type PathAppendDataResponse = PathAppendDataHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: coreHttp.HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: PathAppendDataHeaders;\n    };\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { DefaultHttpClient } from \"@azure/core-http\";\n\nconst _defaultHttpClient = new DefaultHttpClient();\n\nexport function getCachedDefaultHttpClient() {\n  return _defaultHttpClient;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { HttpRequestBody, isNode, TokenCredential } from \"@azure/core-http\";\nimport { BlobClient } from \"@azure/storage-blob\";\nimport { CanonicalCode } from \"@opentelemetry/types\";\n\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { DataLakeLeaseClient } from \"./DataLakeLeaseClient\";\nimport { PathOperations } from \"./generated/src/operations\";\nimport {\n  DirectoryCreateOptions,\n  DirectoryCreateResponse,\n  FileAppendOptions,\n  FileAppendResponse,\n  FileCreateOptions,\n  FileCreateResponse,\n  FileFlushOptions,\n  FileFlushResponse,\n  FileReadOptions,\n  FileReadResponse,\n  Metadata,\n  PathAccessControlItem,\n  PathCreateOptions,\n  PathCreateResponse,\n  PathDeleteOptions,\n  PathDeleteResponse,\n  PathGetAccessControlOptions,\n  PathGetAccessControlResponse,\n  PathGetPropertiesAction,\n  PathGetPropertiesOptions,\n  PathGetPropertiesResponse,\n  PathHttpHeaders,\n  PathMoveOptions,\n  PathMoveResponse,\n  PathPermissions,\n  PathRenameMode,\n  PathResourceType,\n  PathSetAccessControlOptions,\n  PathSetAccessControlResponse,\n  PathSetHttpHeadersOptions,\n  PathSetHttpHeadersResponse,\n  PathSetMetadataOptions,\n  PathSetMetadataResponse,\n  PathSetPermissionsOptions,\n  PathSetPermissionsResponse\n} from \"./models\";\nimport { newPipeline, Pipeline, StoragePipelineOptions } from \"./Pipeline\";\nimport { StorageClient } from \"./StorageClient\";\nimport {\n  toAclString,\n  toPathGetAccessControlResponse,\n  toPermissionsString,\n  toProperties\n} from \"./transforms\";\nimport { createSpan } from \"./utils/tracing\";\nimport { appendToURLPath, setURLPath } from \"./utils/utils.common\";\nimport { getCachedDefaultHttpClient } from \"./utils/cache\";\n\n/**\n * A DataLakePathClient represents a URL to the Azure Storage path (directory or file).\n *\n * @export\n * @class DataLakePathClient\n * @extends {StorageClient}\n */\nexport class DataLakePathClient extends StorageClient {\n  /**\n   * pathContext provided by protocol layer.\n   *\n   * @private\n   * @type {PathOperations}\n   * @memberof DataLakePathClient\n   */\n  private pathContext: PathOperations;\n\n  /**\n   * blobClient provided by @azure/storage-blob package.\n   *\n   * @private\n   * @type {BlobClient}\n   * @memberof DataLakePathClient\n   */\n  private blobClient: BlobClient;\n\n  /**\n   * Creates an instance of DataLakePathClient from url and credential.\n   *\n   * @param {string} url A Client string pointing to Azure Storage data lake path (directory or file), such as\n   *                     \"https://myaccount.dfs.core.windows.net/filesystem/directory\" or \"https://myaccount.dfs.core.windows.net/filesystem/file\".\n   *                     You can append a SAS if using AnonymousCredential, such as \"https://myaccount.dfs.core.windows.net/filesystem/directory?sasString\".\n   * @param {(StorageSharedKeyCredential | AnonymousCredential | TokenCredential)} [credential] Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the @azure/identity package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param {StoragePipelineOptions} [options] Optional. Options to configure the HTTP pipeline.\n   * @memberof DataLakePathClient\n   */\n  public constructor(\n    url: string,\n    credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    options?: StoragePipelineOptions\n  );\n\n  /**\n   * Creates an instance of DataLakePathClient from url and pipeline.\n   *\n   * @param {string} url A Client string pointing to Azure Storage data lake path (directory or file), such as\n   *                     \"https://myaccount.dfs.core.windows.net/filesystem/directory\" or \"https://myaccount.dfs.core.windows.net/filesystem/file\".\n   *                     You can append a SAS if using AnonymousCredential, such as \"https://myaccount.dfs.core.windows.net/filesystem/directory?sasString\".\n   * @param {Pipeline} pipeline Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   * @memberof DataLakePathClient\n   */\n  public constructor(url: string, pipeline: Pipeline);\n\n  public constructor(\n    url: string,\n    credentialOrPipeline?:\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | Pipeline,\n    options?: StoragePipelineOptions\n  ) {\n    // when options.httpClient is not specified, passing in a DefaultHttpClient instance to\n    // avoid each client creating its own http client.\n    const newOptions: StoragePipelineOptions = {\n      httpClient: getCachedDefaultHttpClient(),\n      ...options\n    };\n    if (credentialOrPipeline instanceof Pipeline) {\n      super(url, credentialOrPipeline);\n    } else {\n      let credential;\n      if (credentialOrPipeline === undefined) {\n        credential = new AnonymousCredential();\n      } else {\n        credential = credentialOrPipeline;\n      }\n\n      const pipeline = newPipeline(credential, newOptions);\n      super(url, pipeline);\n    }\n\n    this.pathContext = new PathOperations(this.storageClientContext);\n    this.blobClient = new BlobClient(this.blobEndpointUrl, this.pipeline);\n  }\n\n  /**\n   * Name of current file system.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof DataLakePathClient\n   */\n  public get fileSystemName(): string {\n    return this.blobClient.containerName;\n  }\n\n  /**\n   * Name of current path (directory or file).\n   *\n   * @readonly\n   * @type {string}\n   * @memberof DataLakePathClient\n   */\n  public get name(): string {\n    return this.blobClient.name;\n  }\n\n  /**\n   * Convert current DataLakePathClient to DataLakeDirectoryClient if current path is a directory.\n   *\n   * @returns {DataLakeDirectoryClient}\n   * @memberof DataLakePathClient\n   */\n  public toDirectoryClient(): DataLakeDirectoryClient {\n    return new DataLakeDirectoryClient(this.dfsEndpointUrl, this.pipeline);\n  }\n\n  /**\n   * Convert current DataLakePathClient to DataLakeFileClient if current path is a file.\n   *\n   * @returns {DataLakeFileClient}\n   * @memberof DataLakePathClient\n   */\n  public toFileClient(): DataLakeFileClient {\n    return new DataLakeFileClient(this.dfsEndpointUrl, this.pipeline);\n  }\n\n  /**\n   * Get a {@link DataLakeLeaseClient} that manages leases on the path (directory or file).\n   *\n   * @param {string} [proposeLeaseId] Optional. Initial proposed lease Id.\n   * @returns {DataLakeLeaseClient}\n   * @memberof DataLakePathClient\n   */\n  public getDataLakeLeaseClient(proposeLeaseId?: string): DataLakeLeaseClient {\n    return new DataLakeLeaseClient(this.blobClient.getBlobLeaseClient(proposeLeaseId));\n  }\n\n  /**\n   * Create a directory or path.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/create\n   *\n   * @param {PathResourceType} resourceType Resource type, \"directory\" or \"file\".\n   * @param {PathCreateOptions} [options={}] Optional. Options when creating path.\n   * @returns {Promise<PathCreateResponse>}\n   * @memberof DataLakePathClient\n   */\n  public async create(\n    resourceType: PathResourceType,\n    options: PathCreateOptions = {}\n  ): Promise<PathCreateResponse> {\n    options.conditions = options.conditions || {};\n    const { span, spanOptions } = createSpan(\"DataLakePathClient-create\", options.tracingOptions);\n    try {\n      return await this.pathContext.create({\n        ...options,\n        resource: resourceType,\n        leaseAccessConditions: options.conditions,\n        modifiedAccessConditions: options.conditions,\n        properties: toProperties(options.metadata),\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Delete current path (directory or file).\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/delete\n   *\n   * @param {boolean} [recursive] Required and valid only when the resource is a directory. If \"true\", all paths beneath the directory will be deleted.\n   * @param {PathDeleteOptions} [options={}] Optional. Options when deleting path.\n   * @returns {Promise<PathDeleteResponse>}\n   * @memberof DataLakePathClient\n   */\n  public async delete(\n    recursive?: boolean,\n    options: PathDeleteOptions = {}\n  ): Promise<PathDeleteResponse> {\n    options.conditions = options.conditions || {};\n    const { span, spanOptions } = createSpan(\"DataLakePathClient-delete\", options.tracingOptions);\n    try {\n      let continuation;\n      let response;\n\n      // How to handle long delete loop?\n      do {\n        response = await this.pathContext.deleteMethod({\n          continuation,\n          recursive,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: options.conditions,\n          spanOptions\n        });\n        continuation = response.continuation;\n      } while (continuation !== undefined && continuation !== \"\");\n\n      return response;\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns the access control data for a path (directory of file).\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/getproperties\n   *\n   * @param {PathGetAccessControlOptions} [options={}] Optional. Options when getting file access control.\n   * @returns {Promise<PathGetAccessControlResponse>}\n   * @memberof DataLakePathClient\n   */\n  public async getAccessControl(\n    options: PathGetAccessControlOptions = {}\n  ): Promise<PathGetAccessControlResponse> {\n    options.conditions = options.conditions || {};\n    const { span, spanOptions } = createSpan(\n      \"DataLakePathClient-getAccessControl\",\n      options.tracingOptions\n    );\n    try {\n      const response = await this.pathContext.getProperties({\n        action: PathGetPropertiesAction.GetAccessControl,\n        upn: options.userPrincipalName,\n        leaseAccessConditions: options.conditions,\n        modifiedAccessConditions: options.conditions,\n        spanOptions\n      });\n      return toPathGetAccessControlResponse(response);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Set the access control data for a path (directory of file).\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update\n   *\n   * @param {PathAccessControlItem[]} acl The POSIX access control list for the file or directory.\n   * @param {PathSetAccessControlOptions} [options={}] Optional. Options when setting path access control.\n   * @returns {Promise<PathSetAccessControlResponse>}\n   * @memberof DataLakePathClient\n   */\n  public async setAccessControl(\n    acl: PathAccessControlItem[],\n    options: PathSetAccessControlOptions = {}\n  ): Promise<PathSetAccessControlResponse> {\n    options.conditions = options.conditions || {};\n    const { span, spanOptions } = createSpan(\n      \"DataLakePathClient-setAccessControl\",\n      options.tracingOptions\n    );\n    try {\n      return await this.pathContext.setAccessControl({\n        ...options,\n        acl: toAclString(acl),\n        leaseAccessConditions: options.conditions,\n        modifiedAccessConditions: options.conditions,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets the file permissions on a path.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update\n   *\n   * @param {PathPermissions} permissions The POSIX access permissions for the file owner, the file owning group, and others.\n   * @param {PathSetPermissionsOptions} [options={}] Optional. Options when setting path permissions.\n   * @returns {Promise<PathSetPermissionsResponse>}\n   * @memberof DataLakePathClient\n   */\n  public async setPermissions(\n    permissions: PathPermissions,\n    options: PathSetPermissionsOptions = {}\n  ): Promise<PathSetPermissionsResponse> {\n    options.conditions = options.conditions || {};\n    const { span, spanOptions } = createSpan(\n      \"DataLakePathClient-setPermissions\",\n      options.tracingOptions\n    );\n    try {\n      return await this.pathContext.setAccessControl({\n        ...options,\n        permissions: toPermissionsString(permissions),\n        leaseAccessConditions: options.conditions,\n        modifiedAccessConditions: options.conditions,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns all user-defined metadata, standard HTTP properties, and system properties\n   * for the path (directory or file).\n   *\n   * WARNING: The `metadata` object returned in the response will have its keys in lowercase, even if\n   * they originally contained uppercase characters. This differs from the metadata keys returned by\n   * the methods of {@link DataLakeFileSystemClient} that list paths using the `includeMetadata` option, which\n   * will retain their original casing.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-properties\n   *\n   * @param {PathGetPropertiesOptions} [options={}] Optional. Options when getting path properties.\n   * @returns {Promise<PathGetPropertiesResponse>}\n   * @memberof DataLakePathClient\n   */\n  public async getProperties(\n    options: PathGetPropertiesOptions = {}\n  ): Promise<PathGetPropertiesResponse> {\n    const { span, spanOptions } = createSpan(\n      \"DataLakePathClient-getProperties\",\n      options.tracingOptions\n    );\n    try {\n      return await this.blobClient.getProperties({\n        ...options,\n        customerProvidedKey: undefined, // Doesn't support customer provided key in data lake package yet\n        tracingOptions: { ...options.tracingOptions, spanOptions }\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets system properties on the path (directory or file).\n   *\n   * If no value provided, or no value provided for the specified blob HTTP headers,\n   * these blob HTTP headers without a value will be cleared.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-properties\n   *\n   * @param {PathHttpHeaders} httpHeaders\n   * @param {PathSetHttpHeadersOptions} [options={}]\n   * @returns {Promise<PathSetHttpHeadersResponse>}\n   * @memberof DataLakePathClient\n   */\n  public async setHttpHeaders(\n    httpHeaders: PathHttpHeaders,\n    options: PathSetHttpHeadersOptions = {}\n  ): Promise<PathSetHttpHeadersResponse> {\n    const { span, spanOptions } = createSpan(\n      \"DataLakePathClient-setHttpHeaders\",\n      options.tracingOptions\n    );\n    try {\n      return await this.blobClient.setHTTPHeaders(\n        {\n          blobCacheControl: httpHeaders.cacheControl,\n          blobContentType: httpHeaders.contentType,\n          blobContentMD5: httpHeaders.contentMD5,\n          blobContentEncoding: httpHeaders.contentEncoding,\n          blobContentLanguage: httpHeaders.contentLanguage,\n          blobContentDisposition: httpHeaders.contentDisposition\n        },\n        {\n          ...options,\n          tracingOptions: { ...options.tracingOptions, spanOptions }\n        }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets user-defined metadata for the specified path (directory of file) as one or more name-value pairs.\n   *\n   * If no option provided, or no metadata defined in the parameter, the path\n   * metadata will be removed.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-metadata\n   *\n   * @param {Metadata} [metadata] Optional. Replace existing metadata with this value.\n   *                              If no value provided the existing metadata will be removed.\n   * @param {PathSetMetadataOptions} [options={}] Optional. Options when setting path metadata.\n   * @returns {Promise<PathSetMetadataResponse>}\n   * @memberof DataLakePathClient\n   */\n  public async setMetadata(\n    metadata?: Metadata,\n    options: PathSetMetadataOptions = {}\n  ): Promise<PathSetMetadataResponse> {\n    const { span, spanOptions } = createSpan(\n      \"DataLakePathClient-setMetadata\",\n      options.tracingOptions\n    );\n    try {\n      return await this.blobClient.setMetadata(metadata, {\n        ...options,\n        customerProvidedKey: undefined, // Doesn't support customer provided key in data lake package yet\n        tracingOptions: { ...options.tracingOptions, spanOptions }\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Move directory or file within same file system.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/create\n   *\n   * @param {string} destinationPath Destination directory path like \"directory\" or file path \"directory/file\"\n   * @param {PathMoveOptions} [options] Optional. Options when moving directory or file.\n   * @returns {Promise<PathMoveResponse>}\n   * @memberof DataLakePathClient\n   */\n  public async move(destinationPath: string, options?: PathMoveOptions): Promise<PathMoveResponse>;\n\n  /**\n   * Move directory or file to another file system.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/create\n   *\n   * @param {string} destinationFileSystem Destination file system like \"filesystem\".\n   * @param {string} destinationPath Destination directory path like \"directory\" or file path \"directory/file\"\n   * @param {PathMoveOptions} [options] Optional. Options when moving directory or file.\n   * @returns {Promise<PathMoveResponse>}\n   * @memberof DataLakePathClient\n   */\n  public async move(\n    destinationFileSystem: string,\n    destinationPath: string,\n    options?: PathMoveOptions\n  ): Promise<PathMoveResponse>;\n\n  public async move(\n    destinationPathOrFileSystem: string,\n    destinationPathOrOptions?: string | PathMoveOptions,\n    options?: PathMoveOptions\n  ): Promise<PathMoveResponse> {\n    let destinationFileSystem = this.fileSystemName;\n    let destinationPath = destinationPathOrFileSystem;\n\n    if (typeof destinationPathOrOptions === \"string\") {\n      destinationFileSystem = destinationPathOrFileSystem;\n      destinationPath = destinationPathOrOptions;\n      options = options || {};\n    } else {\n      options = destinationPathOrOptions || {};\n    }\n\n    options.conditions = options.conditions || {};\n    options.destinationConditions = options.destinationConditions || {};\n\n    const { span, spanOptions } = createSpan(\"DataLakePathClient-move\", options.tracingOptions);\n\n    const renameSource = `/${this.fileSystemName}/${this.name}`; // TODO: Confirm number of /\n    const renameDestination = `/${destinationFileSystem}/${destinationPath}`; // TODO: Confirm encoding\n\n    const destinationUrl = setURLPath(this.dfsEndpointUrl, renameDestination);\n    const destPathClient = new DataLakePathClient(destinationUrl, this.pipeline);\n\n    try {\n      return await destPathClient.pathContext.create({\n        mode: PathRenameMode.Legacy, // By default\n        renameSource,\n        sourceLeaseId: options.conditions.leaseId,\n        leaseAccessConditions: options.destinationConditions,\n        sourceModifiedAccessConditions: {\n          sourceIfMatch: options.conditions.ifMatch,\n          sourceIfNoneMatch: options.conditions.ifNoneMatch,\n          sourceIfModifiedSince: options.conditions.ifModifiedSince,\n          sourceIfUnmodifiedSince: options.conditions.ifUnmodifiedSince\n        },\n        modifiedAccessConditions: options.destinationConditions,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n}\n\n/**\n * A DataLakeDirectoryClient represents a URL to the Azure Storage directory.\n *\n * @export\n * @class DataLakeDirectoryClient\n * @extends {DataLakePathClient}\n */\nexport class DataLakeDirectoryClient extends DataLakePathClient {\n  // https://stackoverflow.com/questions/50729485/override-method-with-different-argument-types-in-extended-class-typescript\n  /**\n   * Create a directory.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/create\n   *\n   * @param {PathResourceType} resourceType Resource type, must be \"directory\" for DataLakeDirectoryClient.\n   * @param {PathCreateOptions} [options] Optional. Options when creating directory.\n   * @returns {Promise<PathCreateResponse>}\n   * @memberof DataLakeDirectoryClient\n   */\n  public async create(\n    resourceType: PathResourceType,\n    options?: PathCreateOptions\n  ): Promise<PathCreateResponse>;\n\n  /**\n   * Create a directory.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/create\n   *\n   * @param {DirectoryCreateOptions} [options] Optional. Options when creating directory.\n   * @returns {Promise<DirectoryCreateResponse>}\n   * @memberof DataLakeDirectoryClient\n   */\n  public async create(options?: DirectoryCreateOptions): Promise<DirectoryCreateResponse>;\n\n  public async create(\n    resourceTypeOrOptions?: PathResourceType | PathCreateOptions,\n    options: PathCreateOptions = {}\n  ): Promise<PathCreateResponse> {\n    if (resourceTypeOrOptions === PathResourceType.Directory) {\n      return super.create(resourceTypeOrOptions as PathResourceType, options);\n    }\n\n    if (resourceTypeOrOptions === PathResourceType.File) {\n      throw TypeError(\n        `DataLakeDirectoryClient:create() resourceType cannot be ${PathResourceType.File}. Refer to DataLakeFileClient for file creation.`\n      );\n    }\n\n    options = resourceTypeOrOptions || {};\n    options.conditions = options.conditions || {};\n    const { span, spanOptions } = createSpan(\n      \"DataLakeDirectoryClient-create\",\n      options.tracingOptions\n    );\n    try {\n      return await super.create(PathResourceType.Directory, {\n        ...options,\n        tracingOptions: {\n          ...options.tracingOptions,\n          spanOptions\n        }\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Creates a {@link DataLakeDirectoryClient} object under current directory.\n   *\n   * @param {string} subdirectoryName Subdirectory name.\n   * @returns {DataLakeDirectoryClient}\n   * @memberof DataLakeDirectoryClient\n   */\n  public getSubdirectoryClient(subdirectoryName: string): DataLakeDirectoryClient {\n    return new DataLakeDirectoryClient(\n      appendToURLPath(this.url, encodeURIComponent(subdirectoryName)),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Creates a {@link DataLakeFileClient} object under current directory.\n   *\n   * @param {string} fileName\n   * @returns {DataLakeFileClient}\n   * @memberof DataLakeDirectoryClient\n   */\n  public getFileClient(fileName: string): DataLakeFileClient {\n    return new DataLakeFileClient(\n      appendToURLPath(this.url, encodeURIComponent(fileName)),\n      this.pipeline\n    );\n  }\n}\n\n/**\n * A DataLakeFileClient represents a URL to the Azure Storage file.\n *\n * @export\n * @class DataLakeFileClient\n * @extends {DataLakePathClient}\n */\nexport class DataLakeFileClient extends DataLakePathClient {\n  /**\n   * pathContextInternal provided by protocol layer.\n   *\n   * @private\n   * @type {PathOperations}\n   * @memberof DataLakeFileClient\n   */\n  private pathContextInternal: PathOperations;\n\n  /**\n   * blobClientInternal provided by @azure/storage-blob package.\n   *\n   * @private\n   * @type {BlobClient}\n   * @memberof DataLakeFileClient\n   */\n  private blobClientInternal: BlobClient;\n\n  /**\n   * Creates an instance of DataLakeFileClient from url and credential.\n   *\n   * @param {string} url A Client string pointing to Azure Storage data lake file, such as\n   *                     \"https://myaccount.dfs.core.windows.net/filesystem/file\".\n   *                     You can append a SAS if using AnonymousCredential, such as \"https://myaccount.dfs.core.windows.net/filesystem/directory/file?sasString\".\n   * @param {(StorageSharedKeyCredential | AnonymousCredential | TokenCredential)} [credential] Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the @azure/identity package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param {StoragePipelineOptions} [options] Optional. Options to configure the HTTP pipeline.\n   * @memberof DataLakeFileClient\n   */\n  public constructor(\n    url: string,\n    credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    options?: StoragePipelineOptions\n  );\n\n  /**\n   * Creates an instance of DataLakeFileClient from url and pipeline.\n   *\n   * @param {string} url A Client string pointing to Azure Storage data lake file, such as\n   *                     \"https://myaccount.dfs.core.windows.net/filesystem/file\".\n   *                     You can append a SAS if using AnonymousCredential, such as \"https://myaccount.dfs.core.windows.net/filesystem/directory/file?sasString\".\n   * @param {Pipeline} pipeline Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   * @memberof DataLakeFileClient\n   */\n  public constructor(url: string, pipeline: Pipeline);\n\n  public constructor(\n    url: string,\n    credentialOrPipeline?:\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | Pipeline,\n    options?: StoragePipelineOptions\n  ) {\n    if (credentialOrPipeline instanceof Pipeline) {\n      super(url, credentialOrPipeline);\n    } else {\n      let credential;\n      if (credentialOrPipeline === undefined) {\n        credential = new AnonymousCredential();\n      } else {\n        credential = credentialOrPipeline;\n      }\n\n      const pipeline = newPipeline(credential, options);\n      super(url, pipeline);\n    }\n\n    this.pathContextInternal = new PathOperations(this.storageClientContext);\n    this.blobClientInternal = new BlobClient(this.blobEndpointUrl, this.pipeline);\n  }\n\n  /**\n   * Create a file.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/create\n   *\n   * @param {PathResourceType} resourceType Resource type, must be \"file\" for DataLakeFileClient.\n   * @param {PathCreateOptions} [options] Optional. Options when creating file.\n   * @returns {Promise<PathCreateResponse>}\n   * @memberof DataLakeFileClient\n   */\n  public async create(\n    resourceType: PathResourceType,\n    options?: PathCreateOptions\n  ): Promise<PathCreateResponse>;\n\n  /**\n   * Create a file.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/create\n   *\n   * @param {FileCreateOptions} [options] Optional. Options when creating file.\n   * @returns {Promise<FileCreateResponse>}\n   * @memberof DataLakeFileClient\n   */\n  public async create(options?: FileCreateOptions): Promise<FileCreateResponse>;\n\n  public async create(\n    resourceTypeOrOptions?: PathResourceType | PathCreateOptions,\n    options: PathCreateOptions = {}\n  ): Promise<PathCreateResponse> {\n    if (resourceTypeOrOptions === PathResourceType.File) {\n      return super.create(resourceTypeOrOptions as PathResourceType, options);\n    }\n\n    if (resourceTypeOrOptions === PathResourceType.Directory) {\n      throw TypeError(\n        `DataLakeFileClient:create() resourceType cannot be ${PathResourceType.Directory}. Refer to DataLakeDirectoryClient for directory creation.`\n      );\n    }\n\n    options = resourceTypeOrOptions || {};\n    options.conditions = options.conditions || {};\n    const { span, spanOptions } = createSpan(\"DataLakeFileClient-create\", options.tracingOptions);\n    try {\n      return await super.create(PathResourceType.File, {\n        ...options,\n        tracingOptions: {\n          ...options.tracingOptions,\n          spanOptions\n        }\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Downloads a file from the service, including its metadata and properties.\n   *\n   * * In Node.js, data returns in a Readable stream readableStreamBody\n   * * In browsers, data returns in a promise contentAsBlob\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob\n   *\n   * * Example usage (Node.js):\n   *\n   * ```js\n   * // Download and convert a file to a string\n   * const downloadResponse = await fileClient.read();\n   * const downloaded = await streamToString(downloadResponse.readableStreamBody);\n   * console.log(\"Downloaded file content:\", downloaded);\n   *\n   * async function streamToString(readableStream) {\n   *   return new Promise((resolve, reject) => {\n   *     const chunks = [];\n   *     readableStream.on(\"data\", (data) => {\n   *       chunks.push(data.toString());\n   *     });\n   *     readableStream.on(\"end\", () => {\n   *       resolve(chunks.join(\"\"));\n   *     });\n   *     readableStream.on(\"error\", reject);\n   *   });\n   * }\n   * ```\n   *\n   * Example usage (browser):\n   *\n   * ```js\n   * // Download and convert a file to a string\n   * const downloadResponse = await fileClient.read();\n   * const downloaded = await blobToString(await downloadResponse.contentAsBlob);\n   * console.log(\"Downloaded file content\", downloaded);\n   *\n   * async function blobToString(blob: Blob): Promise<string> {\n   *   const fileReader = new FileReader();\n   *   return new Promise<string>((resolve, reject) => {\n   *     fileReader.onloadend = (ev: any) => {\n   *       resolve(ev.target!.result);\n   *     };\n   *     fileReader.onerror = reject;\n   *     fileReader.readAsText(blob);\n   *   });\n   * }\n   * ```\n   *\n   * @param {number} [offset=0] Optional. Offset to read file, default value is 0.\n   * @param {number} [count] Optional. How many bytes to read, default will read from offset to the end.\n   * @param {FileReadOptions} [options={}] Optional. Options when reading file.\n   * @returns {Promise<FileReadResponse>}\n   * @memberof DataLakeFileClient\n   */\n  public async read(\n    offset: number = 0,\n    count?: number,\n    options: FileReadOptions = {}\n  ): Promise<FileReadResponse> {\n    const { span, spanOptions } = createSpan(\"DataLakeFileClient-read\", options.tracingOptions);\n    try {\n      const rawResponse = await this.blobClientInternal.download(offset, count, {\n        ...options,\n        tracingOptions: { ...options.tracingOptions, spanOptions }\n      });\n\n      const response = rawResponse as FileReadResponse;\n      if (!isNode && !response.contentAsBlob) {\n        response.contentAsBlob = rawResponse.blobBody;\n      }\n      response.fileContentMD5 = rawResponse.blobContentMD5;\n      response._response.parsedHeaders.fileContentMD5 =\n        rawResponse._response.parsedHeaders.blobContentMD5;\n      delete rawResponse.blobContentMD5;\n      delete rawResponse._response.parsedHeaders.blobContentMD5;\n\n      return response;\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Uploads data to be appended to a file. Data can only be appended to a file.\n   * To apply perviously uploaded data to a file, call flush.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/datalakestoragegen2/path/update\n   *\n   * @param {HttpRequestBody} body Content to be uploaded.\n   * @param {number} offset Append offset in bytes.\n   * @param {number} length Length of content to append.\n   * @param {FileAppendOptions} [options={}] Optional. Options when appending data.\n   * @returns {Promise<FileAppendResponse>}\n   * @memberof DataLakeFileClient\n   */\n  public async append(\n    body: HttpRequestBody,\n    offset: number,\n    length: number,\n    options: FileAppendOptions = {}\n  ): Promise<FileAppendResponse> {\n    options.conditions = options.conditions || {};\n    const { span, spanOptions } = createSpan(\"DataLakeFileClient-append\", options.tracingOptions);\n    try {\n      return await this.pathContextInternal.appendData(body, {\n        pathHttpHeaders: {\n          contentMD5: options.transactionalContentMD5\n        },\n        position: offset,\n        contentLength: length,\n        leaseAccessConditions: options.conditions,\n        onUploadProgress: options.onProgress,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Flushes (writes) previously appended data to a file.\n   *\n   * @param {number} position File position to flush.\n   *                          This parameter allows the caller to upload data in parallel and control the order in which it is appended to the file.\n   *                          It is required when uploading data to be appended to the file and when flushing previously uploaded data to the file.\n   *                          The value must be the position where the data is to be appended. Uploaded data is not immediately flushed, or written,\n   *                          to the file. To flush, the previously uploaded data must be contiguous, the position parameter must be specified and\n   *                          equal to the length of the file after all data has been written, and there must not be a request entity body included\n   *                          with the request.\n   * @param {FileFlushOptions} [options={}] Optional. Options when flushing data.\n   * @returns {Promise<FileFlushResponse>}\n   * @memberof DataLakeFileClient\n   */\n  public async flush(position: number, options: FileFlushOptions = {}): Promise<FileFlushResponse> {\n    options.conditions = options.conditions || {};\n    const { span, spanOptions } = createSpan(\"DataLakeFileClient-flush\", options.tracingOptions);\n    try {\n      return await this.pathContextInternal.flushData({\n        ...options,\n        position,\n        contentLength: 0,\n        leaseAccessConditions: options.conditions,\n        modifiedAccessConditions: options.conditions,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { TokenCredential } from \"@azure/core-http\";\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { ContainerClient } from \"@azure/storage-blob\";\nimport { CanonicalCode } from \"@opentelemetry/types\";\n\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { DataLakeLeaseClient } from \"./DataLakeLeaseClient\";\nimport { FileSystemOperations } from \"./generated/src/operations\";\nimport {\n  AccessPolicy,\n  FileSystemCreateOptions,\n  FileSystemCreateResponse,\n  FileSystemDeleteOptions,\n  FileSystemDeleteResponse,\n  FileSystemGetAccessPolicyOptions,\n  FileSystemGetAccessPolicyResponse,\n  FileSystemGetPropertiesOptions,\n  FileSystemGetPropertiesResponse,\n  FileSystemSetAccessPolicyOptions,\n  FileSystemSetAccessPolicyResponse,\n  FileSystemSetMetadataOptions,\n  FileSystemSetMetadataResponse,\n  ListPathsOptions,\n  ListPathsSegmentOptions,\n  Metadata,\n  Path,\n  PublicAccessType,\n  SignedIdentifier,\n  FileSystemListPathsResponse\n} from \"./models\";\nimport { newPipeline, Pipeline, StoragePipelineOptions } from \"./Pipeline\";\nimport { StorageClient } from \"./StorageClient\";\nimport { toContainerPublicAccessType, toPublicAccessType, toPermissions } from \"./transforms\";\nimport { createSpan } from \"./utils/tracing\";\nimport { appendToURLPath } from \"./utils/utils.common\";\nimport { DataLakeFileClient, DataLakeDirectoryClient } from \"./clients\";\nimport { getCachedDefaultHttpClient } from \"./utils/cache\";\n\n/**\n * A DataLakeFileSystemClient represents a URL to the Azure Storage file system\n * allowing you to manipulate its directories and files.\n *\n * @export\n * @class DataLakeFileSystemClient\n * @extends {StorageClient}\n */\nexport class DataLakeFileSystemClient extends StorageClient {\n  /**\n   * fileSystemContext provided by protocol layer.\n   *\n   * @private\n   * @type {FileSystemOperations}\n   * @memberof DataLakeFileSystemClient\n   */\n  private fileSystemContext: FileSystemOperations;\n\n  /**\n   * blobContainerClient provided by @azure/storage-blob package.\n   *\n   * @private\n   * @type {ContainerClient}\n   * @memberof DataLakeFileSystemClient\n   */\n  private blobContainerClient: ContainerClient;\n\n  /**\n   * Creates an instance of DataLakeFileSystemClient from url and credential.\n   *\n   * @param {string} url A Client string pointing to Azure Storage data lake file system, such as\n   *                     \"https://myaccount.dfs.core.windows.net/filesystem\". You can append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.dfs.core.windows.net/filesystem?sasString\".\n   * @param {(StorageSharedKeyCredential | AnonymousCredential | TokenCredential)} [credential] Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the @azure/identity package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param {StoragePipelineOptions} [options] Optional. Options to configure the HTTP pipeline.\n   * @memberof DataLakeFileSystemClient\n   */\n  constructor(\n    url: string,\n    credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    options?: StoragePipelineOptions\n  );\n\n  /**\n   * Creates an instance of DataLakeFileSystemClient from url and pipeline.\n   *\n   * @param {string} url A Client string pointing to Azure Storage data lake file system, such as\n   *                     \"https://myaccount.dfs.core.windows.net/filesystem\". You can append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.dfs.core.windows.net/filesystem?sasString\".\n   * @param {Pipeline} pipeline Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   * @memberof DataLakeFileSystemClient\n   */\n  constructor(url: string, pipeline: Pipeline);\n\n  constructor(\n    url: string,\n    credentialOrPipeline?:\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | Pipeline,\n    options?: StoragePipelineOptions\n  ) {\n    // when options.httpClient is not specified, passing in a DefaultHttpClient instance to\n    // avoid each client creating its own http client.\n    const newOptions: StoragePipelineOptions = {\n      httpClient: getCachedDefaultHttpClient(),\n      ...options\n    };\n    if (credentialOrPipeline instanceof Pipeline) {\n      super(url, credentialOrPipeline);\n    } else {\n      let credential;\n      if (credentialOrPipeline === undefined) {\n        credential = new AnonymousCredential();\n      } else {\n        credential = credentialOrPipeline;\n      }\n\n      const pipeline = newPipeline(credential, newOptions);\n      super(url, pipeline);\n    }\n\n    this.fileSystemContext = new FileSystemOperations(this.storageClientContext);\n    this.blobContainerClient = new ContainerClient(this.blobEndpointUrl, this.pipeline);\n  }\n\n  /**\n   * Name of current file system.\n   *\n   * @readonly\n   * @type {string}\n   * @memberof DataLakeFileSystemClient\n   */\n  public get name(): string {\n    return this.blobContainerClient.containerName;\n  }\n\n  /**\n   * Creates a {@link DataLakeDirectoryClient} object under current file system.\n   *\n   * @param {string} directoryName\n   * @returns {DataLakeDirectoryClient}\n   * @memberof DataLakeFileSystemClient\n   */\n  public getDirectoryClient(directoryName: string): DataLakeDirectoryClient {\n    return new DataLakeDirectoryClient(\n      appendToURLPath(this.url, encodeURIComponent(directoryName)),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Creates a {@link DataLakeFileClient} object under current file system.\n   *\n   * @param {string} fileName\n   * @returns {DataLakeFileClient}\n   * @memberof DataLakeFileSystemClient\n   */\n  public getFileClient(fileName: string): DataLakeFileClient {\n    return new DataLakeFileClient(\n      appendToURLPath(this.url, encodeURIComponent(fileName)),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Get a {@link DataLakeLeaseClient} that manages leases on the file system.\n   *\n   * @param {string} [proposeLeaseId] Optional. Initial proposed lease Id.\n   * @returns {DataLakeLeaseClient}\n   * @memberof DataLakeFileSystemClient\n   */\n  public getDataLakeLeaseClient(proposeLeaseId?: string): DataLakeLeaseClient {\n    return new DataLakeLeaseClient(this.blobContainerClient.getBlobLeaseClient(proposeLeaseId));\n  }\n\n  /**\n   * Creates a new file system under the specified account. If the file system with\n   * the same name already exists, the operation fails.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-container\n   *\n   * @param {FileSystemCreateOptions} [options={}] Optional. Options when creating file system.\n   * @returns {Promise<FileSystemCreateResponse>}\n   * @memberof DataLakeFileSystemClient\n   */\n  public async create(options: FileSystemCreateOptions = {}): Promise<FileSystemCreateResponse> {\n    const { span, spanOptions } = createSpan(\n      \"DataLakeFileSystemClient-create\",\n      options.tracingOptions\n    );\n    try {\n      return await this.blobContainerClient.create({\n        ...options,\n        access: toContainerPublicAccessType(options.access),\n        tracingOptions: { ...options.tracingOptions, spanOptions }\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Delete current file system.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-container\n   *\n   * @param {FileSystemDeleteOptions} [options={}] Optional. Options when deleting file system.\n   * @returns {Promise<FileSystemDeleteResponse>}\n   * @memberof DataLakeFileSystemClient\n   */\n  public async delete(options: FileSystemDeleteOptions = {}): Promise<FileSystemDeleteResponse> {\n    const { span, spanOptions } = createSpan(\n      \"DataLakeFileSystemClient-delete\",\n      options.tracingOptions\n    );\n    try {\n      return await this.blobContainerClient.delete({\n        ...options,\n        tracingOptions: { ...options.tracingOptions, spanOptions }\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns all user-defined metadata and system properties for the specified\n   * file system.\n   *\n   * WARNING: The `metadata` object returned in the response will have its keys in lowercase, even if\n   * they originally contained uppercase characters. This differs from the metadata keys returned by\n   * the `listFileSystems` method of {@link DataLakeServiceClient} using the `includeMetadata` option, which\n   * will retain their original casing.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-container-properties\n   *\n   * @param {FileSystemGetPropertiesOptions} [options={}] Optional. Options when getting file system properties.\n   * @returns {Promise<FileSystemGetPropertiesResponse>}\n   * @memberof DataLakeFileSystemClient\n   */\n  public async getProperties(\n    options: FileSystemGetPropertiesOptions = {}\n  ): Promise<FileSystemGetPropertiesResponse> {\n    const { span, spanOptions } = createSpan(\n      \"DataLakeFileSystemClient-getProperties\",\n      options.tracingOptions\n    );\n    try {\n      const rawResponse = await this.blobContainerClient.getProperties({\n        ...options,\n        tracingOptions: { ...options.tracingOptions, spanOptions }\n      });\n\n      // Transfer and rename blobPublicAccess to publicAccess\n      const response = rawResponse as FileSystemGetPropertiesResponse;\n\n      response.publicAccess = toPublicAccessType(rawResponse.blobPublicAccess);\n      response._response.parsedHeaders.publicAccess = response.publicAccess;\n\n      delete rawResponse.blobPublicAccess;\n      delete rawResponse._response.parsedHeaders.blobPublicAccess;\n\n      return response;\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets one or more user-defined name-value pairs for the specified file system.\n   *\n   * If no option provided, or no metadata defined in the parameter, the file system\n   * metadata will be removed.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-container-metadata\n   *\n   * @param {Metadata} [metadata] Replace existing metadata with this value.\n   *                              If no value provided the existing metadata will be removed.\n   * @param {FileSystemSetMetadataOptions} [options={}] Optional. Options when setting file system metadata.\n   * @returns {Promise<FileSystemSetMetadataResponse>}\n   * @memberof DataLakeFileSystemClient\n   */\n  public async setMetadata(\n    metadata?: Metadata,\n    options: FileSystemSetMetadataOptions = {}\n  ): Promise<FileSystemSetMetadataResponse> {\n    const { span, spanOptions } = createSpan(\n      \"DataLakeFileSystemClient-setMetadata\",\n      options.tracingOptions\n    );\n    try {\n      return await this.blobContainerClient.setMetadata(metadata, {\n        ...options,\n        tracingOptions: { ...options.tracingOptions, spanOptions }\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Gets the permissions for the specified file system. The permissions indicate\n   * whether file system data may be accessed publicly.\n   *\n   * WARNING: JavaScript Date will potentially lose precision when parsing startsOn and expiresOn strings.\n   * For example, new Date(\"2018-12-31T03:44:23.8827891Z\").toISOString() will get \"2018-12-31T03:44:23.882Z\".\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-container-acl\n   *\n   * @param {FileSystemGetAccessPolicyOptions} [options={}] Optional. Options when getting file system access policy.\n   * @returns {Promise<FileSystemGetAccessPolicyResponse>}\n   * @memberof DataLakeFileSystemClient\n   */\n  public async getAccessPolicy(\n    options: FileSystemGetAccessPolicyOptions = {}\n  ): Promise<FileSystemGetAccessPolicyResponse> {\n    const { span, spanOptions } = createSpan(\n      \"DataLakeFileSystemClient-getAccessPolicy\",\n      options.tracingOptions\n    );\n    try {\n      const rawResponse = await this.blobContainerClient.getAccessPolicy({\n        ...options,\n        tracingOptions: { ...options.tracingOptions, spanOptions }\n      });\n\n      // Transfer and rename blobPublicAccess to publicAccess\n      const response = (rawResponse as unknown) as FileSystemGetAccessPolicyResponse;\n\n      response.publicAccess = toPublicAccessType(rawResponse.blobPublicAccess);\n      response._response.parsedHeaders.publicAccess = response.publicAccess;\n\n      delete rawResponse.blobPublicAccess;\n      delete rawResponse._response.parsedHeaders.blobPublicAccess;\n\n      return response;\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets the permissions for the specified file system. The permissions indicate\n   * whether directories or files in a file system may be accessed publicly.\n   *\n   * When you set permissions for a file system, the existing permissions are replaced.\n   * If no access or containerAcl provided, the existing file system ACL will be\n   * removed.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-container-acl\n   *\n   * @param {PublicAccessType} [access] Optional. The level of public access to data in the file system.\n   * @param {SignedIdentifier<AccessPolicy>[]} [fileSystemAcl] Optional. Array of elements each having a unique Id and details of the access policy.\n   * @param {FileSystemSetAccessPolicyOptions} [options={}] Optional. Options when setting file system access policy.\n   * @returns {Promise<FileSystemSetAccessPolicyResponse>}\n   * @memberof DataLakeFileSystemClient\n   */\n  public async setAccessPolicy(\n    access?: PublicAccessType,\n    fileSystemAcl?: SignedIdentifier<AccessPolicy>[],\n    options: FileSystemSetAccessPolicyOptions = {}\n  ): Promise<FileSystemSetAccessPolicyResponse> {\n    const { span, spanOptions } = createSpan(\n      \"DataLakeFileSystemClient-setAccessPolicy\",\n      options.tracingOptions\n    );\n    try {\n      return await this.blobContainerClient.setAccessPolicy(\n        toContainerPublicAccessType(access),\n        fileSystemAcl,\n        {\n          ...options,\n          tracingOptions: { ...options.tracingOptions, spanOptions }\n        }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to list all the paths (directories and files)\n   * under the specified file system.\n   *\n   * .byPage() returns an async iterable iterator to list the paths in pages.\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * // Get the fileSystemClient before you run these snippets,\n   * // Can be obtained from `serviceClient.getFileSystemClient(\"<your-filesystem-name>\");`\n   * let i = 1;\n   * for await (const path of fileSystemClient.listPaths()) {\n   *   console.log(`Path ${i++}: ${path.name}, isDirectory?: ${path.isDirectory}`);\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let i = 1;\n   * let iter = fileSystemClient.listPaths();\n   * let pathItem = await iter.next();\n   * while (!pathItem.done) {\n   *   console.log(`Path ${i++}: ${pathItem.value.name}, isDirectory?: ${pathItem.value.isDirectory}`);\n   *   pathItem = await iter.next();\n   * }\n   * ```\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * // passing optional maxPageSize in the page settings\n   * let i = 1;\n   * for await (const response of fileSystemClient.listPaths().byPage({ maxPageSize: 20 })) {\n   *   for (const path of response.pathItems) {\n   *     console.log(`Path ${i++}: ${path.name}, isDirectory?: ${path.isDirectory}`);\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a marker:\n   *\n   * ```js\n   * let i = 1;\n   * let iterator = fileSystemClient.listPaths().byPage({ maxPageSize: 2 });\n   * let response = (await iterator.next()).value;\n   *\n   * // Prints 2 path names\n   * for (const path of response.pathItems) {\n   *   console.log(`Path ${i++}: ${path.name}, isDirectory?: ${path.isDirectory}`);\n   * }\n   *\n   * // Gets next marker\n   * let marker = response.continuationToken;\n   *\n   * // Passing next marker as continuationToken\n   *\n   * iterator = fileSystemClient.listPaths().byPage({ continuationToken: marker, maxPageSize: 10 });\n   * response = (await iterator.next()).value;\n   *\n   * // Prints 10 path names\n   * for (const path of response.pathItems) {\n   *   console.log(`Path ${i++}: ${path.name}, isDirectory?: ${path.isDirectory}`);\n   * }\n   * ```\n   *\n   * @see https://docs.microsoft.com/rest/api/storageservices/list-blobs\n   *\n   * @param {ListPathsOptions} [options={}] Optional. Options when listing paths.\n   * @returns {PagedAsyncIterableIterator<Path, FileSystemListPathsResponse>}\n   * @memberof DataLakeFileSystemClient\n   */\n  public listPaths(\n    options: ListPathsOptions = {}\n  ): PagedAsyncIterableIterator<Path, FileSystemListPathsResponse> {\n    options.path = options.path === \"\" ? undefined : options.path;\n\n    const iter = this.listItems(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings: PageSettings = {}) => {\n        return this.listSegments(settings.continuationToken, {\n          maxResults: settings.maxPageSize,\n          ...options\n        });\n      }\n    };\n  }\n\n  private async *listItems(options: ListPathsSegmentOptions = {}): AsyncIterableIterator<Path> {\n    for await (const response of this.listSegments(undefined, options)) {\n      yield* response.pathItems || [];\n    }\n  }\n\n  private async *listSegments(\n    continuation?: string,\n    options: ListPathsSegmentOptions = {}\n  ): AsyncIterableIterator<FileSystemListPathsResponse> {\n    let response;\n    if (!!continuation || continuation === undefined) {\n      do {\n        response = await this.listPathsSegment(continuation, options);\n        continuation = response.continuation;\n        yield response;\n      } while (continuation);\n    }\n  }\n\n  private async listPathsSegment(\n    continuation?: string,\n    options: ListPathsSegmentOptions = {}\n  ): Promise<FileSystemListPathsResponse> {\n    const { span, spanOptions } = createSpan(\n      \"DataLakeFileSystemClient-listPathsSegment\",\n      options.tracingOptions\n    );\n    try {\n      const rawResponse = await this.fileSystemContext.listPaths(options.recursive || false, {\n        continuation,\n        ...options,\n        upn: options.userPrincipalName,\n        spanOptions\n      });\n\n      const response = rawResponse as FileSystemListPathsResponse;\n      response.pathItems = [];\n      for (const path of rawResponse.paths || []) {\n        response.pathItems.push({\n          ...path,\n          permissions: toPermissions(path.permissions)\n        });\n      }\n      delete rawResponse.paths;\n\n      return response;\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport \"@azure/core-paging\";\n\nimport { TokenCredential } from \"@azure/core-http\";\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { BlobServiceClient } from \"@azure/storage-blob\";\n\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { DataLakeFileSystemClient } from \"./DataLakeFileSystemClient\";\nimport {\n  FileSystemItem,\n  ServiceListFileSystemsOptions,\n  ServiceListFileSystemsSegmentResponse\n} from \"./models\";\nimport { Pipeline, StoragePipelineOptions, newPipeline } from \"./Pipeline\";\nimport { StorageClient } from \"./StorageClient\";\nimport { appendToURLPath } from \"./utils/utils.common\";\nimport { createSpan } from \"./utils/tracing\";\nimport { toFileSystemPagedAsyncIterableIterator } from \"./transforms\";\nimport { ServiceGetUserDelegationKeyOptions, ServiceGetUserDelegationKeyResponse } from \"./models\";\nimport { CanonicalCode } from \"@opentelemetry/types\";\nimport { getCachedDefaultHttpClient } from \"./utils/cache\";\n\n/**\n * DataLakeServiceClient allows you to manipulate Azure\n * Data Lake service resources and file systems. The storage account provides\n * the top-level namespace for the Data Lake service.\n *\n * @export\n * @class DataLakeServiceClient\n * @extends {StorageClient}\n */\nexport class DataLakeServiceClient extends StorageClient {\n  // private serviceContext: Service;\n\n  /**\n   * blobServiceClient provided by @azure/storage-blob package.\n   *\n   * @private\n   * @type {BlobServiceClient}\n   * @memberof DataLakeServiceClient\n   */\n  private blobServiceClient: BlobServiceClient;\n\n  /**\n   * Creates an instance of DataLakeServiceClient from url.\n   *\n   * @param {string} url A Client string pointing to Azure Storage data lake service, such as\n   *                     \"https://myaccount.dfs.core.windows.net\". You can append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.dfs.core.windows.net?sasString\".\n   * @param {(StorageSharedKeyCredential | AnonymousCredential | TokenCredential)} [credential] Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the @azure/identity package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param {StoragePipelineOptions} [options] Optional. Options to configure the HTTP pipeline.\n   * @memberof DataLakeServiceClient\n   */\n  public constructor(\n    url: string,\n    credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    options?: StoragePipelineOptions\n  );\n\n  /**\n   * Creates an instance of DataLakeServiceClient from url and pipeline.\n   *\n   * @param {string} url A Client string pointing to Azure Storage data lake service, such as\n   *                     \"https://myaccount.dfs.core.windows.net\". You can append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.dfs.core.windows.net?sasString\".\n   * @param {Pipeline} pipeline Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   * @memberof DataLakeServiceClient\n   */\n  public constructor(url: string, pipeline: Pipeline);\n\n  public constructor(\n    url: string,\n    credentialOrPipeline?:\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | Pipeline,\n    options?: StoragePipelineOptions\n  ) {\n    // when options.httpClient is not specified, passing in a DefaultHttpClient instance to\n    // avoid each client creating its own http client.\n    const newOptions: StoragePipelineOptions = {\n      httpClient: getCachedDefaultHttpClient(),\n      ...options\n    };\n\n    if (credentialOrPipeline instanceof Pipeline) {\n      super(url, credentialOrPipeline);\n    } else {\n      let credential;\n      if (credentialOrPipeline === undefined) {\n        credential = new AnonymousCredential();\n      } else {\n        credential = credentialOrPipeline;\n      }\n\n      const pipeline = newPipeline(credential, newOptions);\n      super(url, pipeline);\n    }\n\n    // this.serviceContext = new Service(this.storageClientContext);\n    this.blobServiceClient = new BlobServiceClient(this.blobEndpointUrl, this.pipeline);\n  }\n\n  /**\n   * Creates a {@link DataLakeFileSystemClient} object.\n   *\n   * @param {string} fileSystemName File system name.\n   * @returns {DataLakeFileSystemClient}\n   * @memberof DataLakeServiceClient\n   */\n  public getFileSystemClient(fileSystemName: string): DataLakeFileSystemClient {\n    return new DataLakeFileSystemClient(\n      appendToURLPath(this.url, encodeURIComponent(fileSystemName)),\n      this.pipeline\n    );\n  }\n\n  /**\n   * ONLY AVAILABLE WHEN USING BEARER TOKEN AUTHENTICATION (TokenCredential).\n   *\n   * Retrieves a user delegation key for the Data Lake service. This is only a valid operation when using\n   * bearer token authentication.\n   *\n   * @example\n   * ```js\n   * // Generate user delegation SAS for a file system\n   * const userDelegationKey = await dataLakeServiceClient.getUserDelegationKey(startsOn, expiresOn);\n   * const fileSystemSAS = generateDataLakeSASQueryParameters({\n   *     fileSystemName, // Required\n   *     permissions: FileSystemSASPermissions.parse(\"racwdl\"), // Required\n   *     startsOn, // Required. Date type\n   *     expiresOn, // Optional. Date type\n   *     ipRange: { start: \"0.0.0.0\", end: \"255.255.255.255\" }, // Optional\n   *     protocol: SASProtocol.HttpsAndHttp, // Optional\n   *     version: \"2018-11-09\" // Must >= 2018-11-09 to generate user delegation SAS\n   *   },\n   *   userDelegationKey, // UserDelegationKey\n   *   accountName\n   * ).toString();\n   * ```\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-user-delegation-key\n   *\n   * @param {Date} startsOn The start time for the user delegation SAS. Must be within 7 days of the current time.\n   * @param {Date} expiresOn The end time for the user delegation SAS. Must be within 7 days of the current time.\n   * @param {ServiceGetUserDelegationKeyOptions} [options={}]\n   * @returns {Promise<ServiceGetUserDelegationKeyResponse>}\n   * @memberof DataLakeServiceClient\n   */\n  public async getUserDelegationKey(\n    startsOn: Date,\n    expiresOn: Date,\n    options: ServiceGetUserDelegationKeyOptions = {}\n  ): Promise<ServiceGetUserDelegationKeyResponse> {\n    const { span, spanOptions } = createSpan(\n      \"DataLakeServiceClient-getUserDelegationKey\",\n      options.tracingOptions\n    );\n    try {\n      return await this.blobServiceClient.getUserDelegationKey(startsOn, expiresOn, {\n        ...options,\n        tracingOptions: {\n          ...options.tracingOptions,\n          spanOptions\n        }\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to list all the file systems\n   * under the specified account.\n   *\n   * .byPage() returns an async iterable iterator to list the file systems in pages.\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * let i = 1;\n   * for await (const fileSystem of serviceClient.listFileSystems()) {\n   *   console.log(`FileSystem ${i++}: ${fileSystem.name}`);\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let i = 1;\n   * const iter = serviceClient.listFileSystems();\n   * let fileSystemItem = await iter.next();\n   * while (!fileSystemItem.done) {\n   *   console.log(`FileSystem ${i++}: ${fileSystemItem.value.name}`);\n   *   fileSystemItem = await iter.next();\n   * }\n   * ```\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * // passing optional maxPageSize in the page settings\n   * let i = 1;\n   * for await (const response of serviceClient.listFileSystems().byPage({ maxPageSize: 20 })) {\n   *   if (response.fileSystemItems) {\n   *     for (const fileSystem of response.fileSystemItems) {\n   *       console.log(`FileSystem ${i++}: ${fileSystem.name}`);\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a marker:\n   *\n   * ```js\n   * let i = 1;\n   * let iterator = serviceClient.listFileSystems().byPage({ maxPageSize: 2 });\n   * let response = (await iterator.next()).value;\n   *\n   * // Prints 2 file system names\n   * if (response.fileSystemItems) {\n   *   for (const fileSystem of response.fileSystemItems) {\n   *     console.log(`FileSystem ${i++}: ${fileSystem.name}`);\n   *   }\n   * }\n   *\n   * // Gets next marker\n   * let marker = response.continuationToken;\n   * // Passing next marker as continuationToken\n   * iterator = serviceClient\n   *   .listContainers()\n   *   .byPage({ continuationToken: marker, maxPageSize: 10 });\n   * response = (await iterator.next()).value;\n   *\n   * // Prints 10 file system names\n   * if (response.fileSystemItems) {\n   *   for (const fileSystem of response.fileSystemItems) {\n   *      console.log(`FileSystem ${i++}: ${fileSystem.name}`);\n   *   }\n   * }\n   * ```\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/list-containers2\n   *\n   * @param {ServiceListFileSystemsOptions} [options={}]\n   * @returns {PagedAsyncIterableIterator<FileSystemItem, ServiceListFileSystemsSegmentResponse>}\n   * @memberof DataLakeServiceClient\n   */\n  public listFileSystems(\n    options: ServiceListFileSystemsOptions = {}\n  ): PagedAsyncIterableIterator<FileSystemItem, ServiceListFileSystemsSegmentResponse> {\n    return toFileSystemPagedAsyncIterableIterator(this.blobServiceClient.listContainers(options));\n  }\n\n  // public async createFileSystem(): Promise<DataLakeFileSystemClient> {\n  //   throw Error(\"NotImplemented\");\n  // }\n\n  // public async deleteFileSystem(fileSystem: string): Promise<ServiceDeleteFileSystemResponse> {\n  //   throw Error(\"NotImplemented\");\n  // }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the permissions granted by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant permissions for that operation. Once all the\n * values are set, this should be serialized with toString and set as the permissions field on an\n * {@link AccountSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n *\n * @export\n * @class AccountSASPermissions\n */\nexport class AccountSASPermissions {\n  /**\n   * Parse initializes the AccountSASPermissions fields from a string.\n   *\n   * @static\n   * @param {string} permissions\n   * @returns {AccountSASPermissions}\n   * @memberof AccountSASPermissions\n   */\n  public static parse(permissions: string): AccountSASPermissions {\n    const accountSASPermissions = new AccountSASPermissions();\n\n    for (const c of permissions) {\n      switch (c) {\n        case \"r\":\n          accountSASPermissions.read = true;\n          break;\n        case \"w\":\n          accountSASPermissions.write = true;\n          break;\n        case \"d\":\n          accountSASPermissions.delete = true;\n          break;\n        case \"l\":\n          accountSASPermissions.list = true;\n          break;\n        case \"a\":\n          accountSASPermissions.add = true;\n          break;\n        case \"c\":\n          accountSASPermissions.create = true;\n          break;\n        case \"u\":\n          accountSASPermissions.update = true;\n          break;\n        case \"p\":\n          accountSASPermissions.process = true;\n          break;\n        default:\n          throw new RangeError(`Invalid permission character: ${c}`);\n      }\n    }\n\n    return accountSASPermissions;\n  }\n\n  /**\n   * Permission to read resources and list queues and tables granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASPermissions\n   */\n  public read: boolean = false;\n\n  /**\n   * Permission to write resources granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASPermissions\n   */\n  public write: boolean = false;\n\n  /**\n   * Permission to delete blobs and files granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASPermissions\n   */\n  public delete: boolean = false;\n\n  /**\n   * Permission to list blob containers, blobs, shares, directories, and files granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASPermissions\n   */\n  public list: boolean = false;\n\n  /**\n   * Permission to add messages, table entities, and append to blobs granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASPermissions\n   */\n  public add: boolean = false;\n\n  /**\n   * Permission to create blobs and files granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASPermissions\n   */\n  public create: boolean = false;\n\n  /**\n   * Permissions to update messages and table entities granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASPermissions\n   */\n  public update: boolean = false;\n\n  /**\n   * Permission to get and delete messages granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASPermissions\n   */\n  public process: boolean = false;\n\n  /**\n   * Produces the SAS permissions string for an Azure Storage account.\n   * Call this method to set AccountSASSignatureValues Permissions field.\n   *\n   * Using this method will guarantee the resource types are in\n   * an order accepted by the service.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n   *\n   * @returns {string}\n   * @memberof AccountSASPermissions\n   */\n  public toString(): string {\n    // The order of the characters should be as specified here to ensure correctness:\n    // https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n    // Use a string array instead of string concatenating += operator for performance\n    const permissions: string[] = [];\n    if (this.read) {\n      permissions.push(\"r\");\n    }\n    if (this.write) {\n      permissions.push(\"w\");\n    }\n    if (this.delete) {\n      permissions.push(\"d\");\n    }\n    if (this.list) {\n      permissions.push(\"l\");\n    }\n    if (this.add) {\n      permissions.push(\"a\");\n    }\n    if (this.create) {\n      permissions.push(\"c\");\n    }\n    if (this.update) {\n      permissions.push(\"u\");\n    }\n    if (this.process) {\n      permissions.push(\"p\");\n    }\n    return permissions.join(\"\");\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the resources accessible by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant access to that resource type. Once all the\n * values are set, this should be serialized with toString and set as the resources field on an\n * {@link AccountSASSignatureValues} object. It is possible to construct the resources string without this class, but\n * the order of the resources is particular and this class guarantees correctness.\n *\n * @export\n * @class AccountSASResourceTypes\n */\nexport class AccountSASResourceTypes {\n  /**\n   * Creates an {@link AccountSASResourceTypes} from the specified resource types string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid resource type.\n   *\n   * @static\n   * @param {string} resourceTypes\n   * @returns {AccountSASResourceTypes}\n   * @memberof AccountSASResourceTypes\n   */\n  public static parse(resourceTypes: string): AccountSASResourceTypes {\n    const accountSASResourceTypes = new AccountSASResourceTypes();\n\n    for (const c of resourceTypes) {\n      switch (c) {\n        case \"s\":\n          accountSASResourceTypes.service = true;\n          break;\n        case \"c\":\n          accountSASResourceTypes.container = true;\n          break;\n        case \"o\":\n          accountSASResourceTypes.object = true;\n          break;\n        default:\n          throw new RangeError(`Invalid resource type: ${c}`);\n      }\n    }\n\n    return accountSASResourceTypes;\n  }\n\n  /**\n   * Permission to access service level APIs granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASResourceTypes\n   */\n  public service: boolean = false;\n\n  /**\n   * Permission to access container level APIs (Blob Containers, Tables, Queues, File Shares, File Systems) granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASResourceTypes\n   */\n  public container: boolean = false;\n\n  /**\n   * Permission to access object level APIs (Blobs, Table Entities, Queue Messages, Files, Directories) granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASResourceTypes\n   */\n  public object: boolean = false;\n\n  /**\n   * Converts the given resource types to a string.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n   *\n   * @returns {string}\n   * @memberof AccountSASResourceTypes\n   */\n  public toString(): string {\n    const resourceTypes: string[] = [];\n    if (this.service) {\n      resourceTypes.push(\"s\");\n    }\n    if (this.container) {\n      resourceTypes.push(\"c\");\n    }\n    if (this.object) {\n      resourceTypes.push(\"o\");\n    }\n    return resourceTypes.join(\"\");\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the services accessible by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant access to that service. Once all the\n * values are set, this should be serialized with toString and set as the services field on an\n * {@link AccountSASSignatureValues} object. It is possible to construct the services string without this class, but\n * the order of the services is particular and this class guarantees correctness.\n *\n * @export\n * @class AccountSASServices\n */\nexport class AccountSASServices {\n  /**\n   * Creates an {@link AccountSASServices} from the specified services string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid service.\n   *\n   * @static\n   * @param {string} services\n   * @returns {AccountSASServices}\n   * @memberof AccountSASServices\n   */\n  public static parse(services: string): AccountSASServices {\n    const accountSASServices = new AccountSASServices();\n\n    for (const c of services) {\n      switch (c) {\n        case \"b\":\n          accountSASServices.blob = true;\n          break;\n        case \"f\":\n          accountSASServices.file = true;\n          break;\n        case \"q\":\n          accountSASServices.queue = true;\n          break;\n        case \"t\":\n          accountSASServices.table = true;\n          break;\n        default:\n          throw new RangeError(`Invalid service character: ${c}`);\n      }\n    }\n\n    return accountSASServices;\n  }\n\n  /**\n   * Permission to access blob and data lake resources granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASServices\n   */\n  public blob: boolean = false;\n\n  /**\n   * Permission to access file resources granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASServices\n   */\n  public file: boolean = false;\n\n  /**\n   * Permission to access queue resources granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASServices\n   */\n  public queue: boolean = false;\n\n  /**\n   * Permission to access table resources granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASServices\n   */\n  public table: boolean = false;\n\n  /**\n   * Converts the given services to a string.\n   *\n   * @returns {string}\n   * @memberof AccountSASServices\n   */\n  public toString(): string {\n    const services: string[] = [];\n    if (this.blob) {\n      services.push(\"b\");\n    }\n    if (this.table) {\n      services.push(\"t\");\n    }\n    if (this.queue) {\n      services.push(\"q\");\n    }\n    if (this.file) {\n      services.push(\"f\");\n    }\n    return services.join(\"\");\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * Allowed IP range for a SAS.\n *\n * @export\n * @interface SasIPRange\n */\nexport interface SasIPRange {\n  /**\n   * Starting IP address in the IP range.\n   * If end IP doesn't provide, start IP will the only IP allowed.\n   *\n   * @type {string}\n   * @memberof SasIPRange\n   */\n  start: string;\n  /**\n   * Optional. IP address that ends the IP range.\n   * If not provided, start IP will the only IP allowed.\n   *\n   * @type {string}\n   * @memberof SasIPRange\n   */\n  end?: string;\n}\n\n/**\n * Generate SasIPRange format string. For example:\n *\n * \"8.8.8.8\" or \"1.1.1.1-255.255.255.255\"\n *\n * @export\n * @param {SasIPRange} ipRange\n * @returns {string}\n */\nexport function ipRangeToString(ipRange: SasIPRange): string {\n  return ipRange.end ? `${ipRange.start}-${ipRange.end}` : ipRange.start;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { UserDelegationKey } from \"./models\";\nimport { ipRangeToString, SasIPRange } from \"./SasIPRange\";\nimport { truncatedISO8061Date } from \"./utils/utils.common\";\n\n/**\n * Protocols for generated SAS.\n *\n * @export\n * @enum {number}\n */\nexport enum SASProtocol {\n  /**\n   * Protocol that allows HTTPS only\n   */\n  Https = \"https\",\n\n  /**\n   * Protocol that allows both HTTPS and HTTP\n   */\n  HttpsAndHttp = \"https,http\"\n}\n\n/**\n * Represents the components that make up an Azure Storage SAS' query parameters. This type is not constructed directly\n * by the user; it is only generated by the {@link AccountSASSignatureValues} and {@link BlobSASSignatureValues}\n * types. Once generated, it can be encoded into a {@code String} and appended to a URL directly (though caution should\n * be taken here in case there are existing query parameters, which might affect the appropriate means of appending\n * these query parameters).\n *\n * NOTE: Instances of this class are immutable.\n *\n * @export\n * @class SASQueryParameters\n */\nexport class SASQueryParameters {\n  /**\n   * The storage API version.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly version: string;\n\n  /**\n   * Optional. The allowed HTTP protocol(s).\n   *\n   * @type {SASProtocol}\n   * @memberof SASQueryParameters\n   */\n  public readonly protocol?: SASProtocol;\n\n  /**\n   * Optional. The start time for this SAS token.\n   *\n   * @type {Date}\n   * @memberof SASQueryParameters\n   */\n  public readonly startsOn?: Date;\n\n  /**\n   * Optional only when identifier is provided. The expiry time for this SAS token.\n   *\n   * @type {Date}\n   * @memberof SASQueryParameters\n   */\n  public readonly expiresOn?: Date;\n\n  /**\n   * Optional only when identifier is provided.\n   * Please refer to {@link AccountSASPermissions}, {@link BlobSASPermissions}, or {@link ContainerSASPermissions} for\n   * more details.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly permissions?: string;\n\n  /**\n   * Optional. The storage services being accessed (only for Account SAS). Please refer to {@link AccountSASServices}\n   * for more details.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly services?: string;\n\n  /**\n   * Optional. The storage resource types being accessed (only for Account SAS). Please refer to\n   * {@link AccountSASResourceTypes} for more details.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly resourceTypes?: string;\n\n  /**\n   * Optional. The signed identifier (only for {@link BlobSASSignatureValues}).\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/establishing-a-stored-access-policy\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly identifier?: string;\n\n  /**\n   * Optional. The storage container or blob (only for {@link BlobSASSignatureValues}).\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly resource?: string;\n\n  /**\n   * The signature for the SAS token.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly signature: string;\n\n  /**\n   * Value for cache-control header in Blob/File Service SAS.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly cacheControl?: string;\n\n  /**\n   * Value for content-disposition header in Blob/File Service SAS.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly contentDisposition?: string;\n\n  /**\n   * Value for content-encoding header in Blob/File Service SAS.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly contentEncoding?: string;\n\n  /**\n   * Value for content-length header in Blob/File Service SAS.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly contentLanguage?: string;\n\n  /**\n   * Value for content-type header in Blob/File Service SAS.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly contentType?: string;\n\n  /**\n   * Inner value of getter ipRange.\n   *\n   * @private\n   * @type {SasIPRange}\n   * @memberof SASQueryParameters\n   */\n  private readonly ipRangeInner?: SasIPRange;\n\n  /**\n   * The Azure Active Directory object ID in GUID format.\n   * Property of user delegation key.\n   *\n   * @private\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  private readonly signedOid?: string;\n\n  /**\n   * The Azure Active Directory tenant ID in GUID format.\n   * Property of user delegation key.\n   *\n   * @private\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  private readonly signedTenentId?: string;\n\n  /**\n   * The date-time the key is active.\n   * Property of user delegation key.\n   *\n   * @private\n   * @type {Date}\n   * @memberof SASQueryParameters\n   */\n  private readonly signedStartsOn?: Date;\n\n  /**\n   * The date-time the key expires.\n   * Property of user delegation key.\n   *\n   * @private\n   * @type {Date}\n   * @memberof SASQueryParameters\n   */\n  private readonly signedExpiresOn?: Date;\n\n  /**\n   * Abbreviation of the Azure Storage service that accepts the user delegation key.\n   * Property of user delegation key.\n   *\n   * @private\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  private readonly signedService?: string;\n\n  /**\n   * The service version that created the user delegation key.\n   * Property of user delegation key.\n   *\n   * @private\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  private readonly signedVersion?: string;\n\n  /**\n   * Optional. IP range allowed for this SAS.\n   *\n   * @readonly\n   * @type {(SasIPRange | undefined)}\n   * @memberof SASQueryParameters\n   */\n  public get ipRange(): SasIPRange | undefined {\n    if (this.ipRangeInner) {\n      return {\n        end: this.ipRangeInner.end,\n        start: this.ipRangeInner.start\n      };\n    }\n    return undefined;\n  }\n\n  /**\n   * Creates an instance of SASQueryParameters.\n   *\n   * @param {string} version Representing the storage version\n   * @param {string} signature Representing the signature for the SAS token\n   * @param {string} [permissions] Representing the storage permissions\n   * @param {string} [services] Representing the storage services being accessed (only for Account SAS)\n   * @param {string} [resourceTypes] Representing the storage resource types being accessed (only for Account SAS)\n   * @param {SASProtocol} [protocol] Representing the allowed HTTP protocol(s)\n   * @param {Date} [startsOn] Representing the start time for this SAS token\n   * @param {Date} [expiresOn] Representing the expiry time for this SAS token\n   * @param {SasIPRange} [ipRange] Representing the range of valid IP addresses for this SAS token\n   * @param {string} [identifier] Representing the signed identifier (only for Service SAS)\n   * @param {string} [resource] Representing the storage container or blob (only for Service SAS)\n   * @param {string} [cacheControl] Representing the cache-control header (only for Blob/File Service SAS)\n   * @param {string} [contentDisposition] Representing the content-disposition header (only for Blob/File Service SAS)\n   * @param {string} [contentEncoding] Representing the content-encoding header (only for Blob/File Service SAS)\n   * @param {string} [contentLanguage] Representing the content-language header (only for Blob/File Service SAS)\n   * @param {string} [contentType] Representing the content-type header (only for Blob/File Service SAS)\n   * @param {userDelegationKey} [userDelegationKey] Representing the user delegation key properties\n   * @memberof SASQueryParameters\n   */\n  constructor(\n    version: string,\n    signature: string,\n    permissions?: string,\n    services?: string,\n    resourceTypes?: string,\n    protocol?: SASProtocol,\n    startsOn?: Date,\n    expiresOn?: Date,\n    ipRange?: SasIPRange,\n    identifier?: string,\n    resource?: string,\n    cacheControl?: string,\n    contentDisposition?: string,\n    contentEncoding?: string,\n    contentLanguage?: string,\n    contentType?: string,\n    userDelegationKey?: UserDelegationKey\n  ) {\n    this.version = version;\n    this.services = services;\n    this.resourceTypes = resourceTypes;\n    this.expiresOn = expiresOn;\n    this.permissions = permissions;\n    this.protocol = protocol;\n    this.startsOn = startsOn;\n    this.ipRangeInner = ipRange;\n    this.identifier = identifier;\n    this.resource = resource;\n    this.signature = signature;\n    this.cacheControl = cacheControl;\n    this.contentDisposition = contentDisposition;\n    this.contentEncoding = contentEncoding;\n    this.contentLanguage = contentLanguage;\n    this.contentType = contentType;\n\n    if (userDelegationKey) {\n      this.signedOid = userDelegationKey.signedObjectId;\n      this.signedTenentId = userDelegationKey.signedTenantId;\n      this.signedStartsOn = userDelegationKey.signedStartsOn;\n      this.signedExpiresOn = userDelegationKey.signedExpiresOn;\n      this.signedService = userDelegationKey.signedService;\n      this.signedVersion = userDelegationKey.signedVersion;\n    }\n  }\n\n  /**\n   * Encodes all SAS query parameters into a string that can be appended to a URL.\n   *\n   * @returns {string}\n   * @memberof SASQueryParameters\n   */\n  public toString(): string {\n    const params: string[] = [\n      \"sv\",\n      \"ss\",\n      \"srt\",\n      \"spr\",\n      \"st\",\n      \"se\",\n      \"sip\",\n      \"si\",\n      \"skoid\", // Signed object ID\n      \"sktid\", // Signed tenant ID\n      \"skt\", // Signed key start time\n      \"ske\", // Signed key expiry time\n      \"sks\", // Signed key service\n      \"skv\", // Signed key version\n      \"sr\",\n      \"sp\",\n      \"sig\",\n      \"rscc\",\n      \"rscd\",\n      \"rsce\",\n      \"rscl\",\n      \"rsct\"\n    ];\n    const queries: string[] = [];\n\n    for (const param of params) {\n      switch (param) {\n        case \"sv\":\n          this.tryAppendQueryParameter(queries, param, this.version);\n          break;\n        case \"ss\":\n          this.tryAppendQueryParameter(queries, param, this.services);\n          break;\n        case \"srt\":\n          this.tryAppendQueryParameter(queries, param, this.resourceTypes);\n          break;\n        case \"spr\":\n          this.tryAppendQueryParameter(queries, param, this.protocol);\n          break;\n        case \"st\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.startsOn ? truncatedISO8061Date(this.startsOn, false) : undefined\n          );\n          break;\n        case \"se\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.expiresOn ? truncatedISO8061Date(this.expiresOn, false) : undefined\n          );\n          break;\n        case \"sip\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.ipRange ? ipRangeToString(this.ipRange) : undefined\n          );\n          break;\n        case \"si\":\n          this.tryAppendQueryParameter(queries, param, this.identifier);\n          break;\n        case \"skoid\": // Signed object ID\n          this.tryAppendQueryParameter(queries, param, this.signedOid);\n          break;\n        case \"sktid\": // Signed tenant ID\n          this.tryAppendQueryParameter(queries, param, this.signedTenentId);\n          break;\n        case \"skt\": // Signed key start time\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.signedStartsOn ? truncatedISO8061Date(this.signedStartsOn, false) : undefined\n          );\n          break;\n        case \"ske\": // Signed key expiry time\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.signedExpiresOn ? truncatedISO8061Date(this.signedExpiresOn, false) : undefined\n          );\n          break;\n        case \"sks\": // Signed key service\n          this.tryAppendQueryParameter(queries, param, this.signedService);\n          break;\n        case \"skv\": // Signed key version\n          this.tryAppendQueryParameter(queries, param, this.signedVersion);\n          break;\n        case \"sr\":\n          this.tryAppendQueryParameter(queries, param, this.resource);\n          break;\n        case \"sp\":\n          this.tryAppendQueryParameter(queries, param, this.permissions);\n          break;\n        case \"sig\":\n          this.tryAppendQueryParameter(queries, param, this.signature);\n          break;\n        case \"rscc\":\n          this.tryAppendQueryParameter(queries, param, this.cacheControl);\n          break;\n        case \"rscd\":\n          this.tryAppendQueryParameter(queries, param, this.contentDisposition);\n          break;\n        case \"rsce\":\n          this.tryAppendQueryParameter(queries, param, this.contentEncoding);\n          break;\n        case \"rscl\":\n          this.tryAppendQueryParameter(queries, param, this.contentLanguage);\n          break;\n        case \"rsct\":\n          this.tryAppendQueryParameter(queries, param, this.contentType);\n          break;\n      }\n    }\n    return queries.join(\"&\");\n  }\n\n  /**\n   * A private helper method used to filter and append query key/value pairs into an array.\n   *\n   * @private\n   * @param {string[]} queries\n   * @param {string} key\n   * @param {string} [value]\n   * @returns {void}\n   * @memberof SASQueryParameters\n   */\n  private tryAppendQueryParameter(queries: string[], key: string, value?: string): void {\n    if (!value) {\n      return;\n    }\n\n    key = encodeURIComponent(key);\n    value = encodeURIComponent(value);\n    if (key.length > 0 && value.length > 0) {\n      queries.push(`${key}=${value}`);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { AccountSASPermissions } from \"./AccountSASPermissions\";\nimport { AccountSASResourceTypes } from \"./AccountSASResourceTypes\";\nimport { AccountSASServices } from \"./AccountSASServices\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { SasIPRange, ipRangeToString } from \"./SasIPRange\";\nimport { SASProtocol, SASQueryParameters } from \"./SASQueryParameters\";\nimport { SERVICE_VERSION } from \"./utils/constants\";\nimport { truncatedISO8061Date } from \"./utils/utils.common\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * AccountSASSignatureValues is used to generate a Shared Access Signature (SAS) for an Azure Storage account. Once\n * all the values here are set appropriately, call {@link generateAccountSASQueryParameters} to obtain a representation\n * of the SAS which can actually be applied to data lake urls. Note: that both this class and {@link SASQueryParameters}\n * exist because the former is mutable and a logical representation while the latter is immutable and used to generate\n * actual REST requests.\n *\n * @see https://docs.microsoft.com/en-us/azure/storage/common/storage-dotnet-shared-access-signature-part-1\n * for more conceptual information on SAS\n *\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n * for descriptions of the parameters, including which are required\n *\n * @export\n * @class AccountSASSignatureValues\n */\nexport interface AccountSASSignatureValues {\n  /**\n   * If not provided, this defaults to the service version targeted by this version of the library.\n   *\n   * @type {string}\n   * @memberof AccountSASSignatureValues\n   */\n  version?: string;\n\n  /**\n   * Optional. SAS protocols allowed.\n   *\n   * @type {SASProtocol}\n   * @memberof AccountSASSignatureValues\n   */\n  protocol?: SASProtocol;\n\n  /**\n   * Optional. When the SAS will take effect.\n   *\n   * @type {Date}\n   * @memberof AccountSASSignatureValues\n   */\n  startsOn?: Date;\n\n  /**\n   * The time after which the SAS will no longer work.\n   *\n   * @type {Date}\n   * @memberof AccountSASSignatureValues\n   */\n  expiresOn: Date;\n\n  /**\n   * Specifies which operations the SAS user may perform. Please refer to {@link AccountSASPermissions} for help\n   * constructing the permissions string.\n   *\n   * @type {AccountSASPermissions}\n   * @memberof AccountSASSignatureValues\n   */\n  permissions: AccountSASPermissions;\n\n  /**\n   * Optional. IP range allowed.\n   *\n   * @type {SasIPRange}\n   * @memberof AccountSASSignatureValues\n   */\n  ipRange?: SasIPRange;\n\n  /**\n   * The values that indicate the services accessible with this SAS. Please refer to {@link AccountSASServices} to\n   * construct this value.\n   *\n   * @type {string}\n   * @memberof AccountSASSignatureValues\n   */\n  services: string;\n\n  /**\n   * The values that indicate the resource types accessible with this SAS. Please refer\n   * to {@link AccountSASResourceTypes} to construct this value.\n   *\n   * @type {string}\n   * @memberof AccountSASSignatureValues\n   */\n  resourceTypes: string;\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Generates a {@link SASQueryParameters} object which contains all SAS query parameters needed to make an actual\n * REST request.\n *\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n *\n * @param {AccountSASSignatureValues} accountSASSignatureValues\n * @param {StorageSharedKeyCredential} sharedKeyCredential\n * @returns {SASQueryParameters}\n * @memberof AccountSASSignatureValues\n */\nexport function generateAccountSASQueryParameters(\n  accountSASSignatureValues: AccountSASSignatureValues,\n  sharedKeyCredential: StorageSharedKeyCredential\n): SASQueryParameters {\n  const version = accountSASSignatureValues.version\n    ? accountSASSignatureValues.version\n    : SERVICE_VERSION;\n\n  const parsedPermissions = AccountSASPermissions.parse(\n    accountSASSignatureValues.permissions.toString()\n  );\n  const parsedServices = AccountSASServices.parse(accountSASSignatureValues.services).toString();\n  const parsedResourceTypes = AccountSASResourceTypes.parse(\n    accountSASSignatureValues.resourceTypes\n  ).toString();\n\n  const stringToSign = [\n    sharedKeyCredential.accountName,\n    parsedPermissions,\n    parsedServices,\n    parsedResourceTypes,\n    accountSASSignatureValues.startsOn\n      ? truncatedISO8061Date(accountSASSignatureValues.startsOn, false)\n      : \"\",\n    truncatedISO8061Date(accountSASSignatureValues.expiresOn, false),\n    accountSASSignatureValues.ipRange ? ipRangeToString(accountSASSignatureValues.ipRange) : \"\",\n    accountSASSignatureValues.protocol ? accountSASSignatureValues.protocol : \"\",\n    version,\n    \"\" // Account SAS requires an additional newline character\n  ].join(\"\\n\");\n\n  const signature: string = sharedKeyCredential.computeHMACSHA256(stringToSign);\n\n  return new SASQueryParameters(\n    version,\n    signature,\n    parsedPermissions.toString(),\n    parsedServices,\n    parsedResourceTypes,\n    accountSASSignatureValues.protocol,\n    accountSASSignatureValues.startsOn,\n    accountSASSignatureValues.expiresOn,\n    accountSASSignatureValues.ipRange\n  );\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the permissions granted by a ServiceSAS. Setting\n * a value to true means that any SAS which uses these permissions will grant permissions for that operation. Once all\n * the values are set, this should be serialized with toString and set as the permissions field on a\n * {@link DataLakeSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n *\n * @export\n * @class DataLakeSASPermissions\n */\nexport class DataLakeSASPermissions {\n  /**\n   * Creates a {@link DataLakeSASPermissions} from the specified permissions string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid permission.\n   *\n   * @static\n   * @param {string} permissions\n   * @returns {DataLakeSASPermissions}\n   * @memberof DataLakeSASPermissions\n   */\n  public static parse(permissions: string): DataLakeSASPermissions {\n    const blobSASPermissions = new DataLakeSASPermissions();\n\n    for (const char of permissions) {\n      switch (char) {\n        case \"r\":\n          blobSASPermissions.read = true;\n          break;\n        case \"a\":\n          blobSASPermissions.add = true;\n          break;\n        case \"c\":\n          blobSASPermissions.create = true;\n          break;\n        case \"w\":\n          blobSASPermissions.write = true;\n          break;\n        case \"d\":\n          blobSASPermissions.delete = true;\n          break;\n        default:\n          throw new RangeError(`Invalid permission: ${char}`);\n      }\n    }\n\n    return blobSASPermissions;\n  }\n\n  /**\n   * Specifies Read access granted.\n   *\n   * @type {boolean}\n   * @memberof DataLakeSASPermissions\n   */\n  public read: boolean = false;\n\n  /**\n   * Specifies Add access granted.\n   *\n   * @type {boolean}\n   * @memberof DataLakeSASPermissions\n   */\n  public add: boolean = false;\n\n  /**\n   * Specifies Create access granted.\n   *\n   * @type {boolean}\n   * @memberof DataLakeSASPermissions\n   */\n  public create: boolean = false;\n\n  /**\n   * Specifies Write access granted.\n   *\n   * @type {boolean}\n   * @memberof DataLakeSASPermissions\n   */\n  public write: boolean = false;\n\n  /**\n   * Specifies Delete access granted.\n   *\n   * @type {boolean}\n   * @memberof DataLakeSASPermissions\n   */\n  public delete: boolean = false;\n\n  /**\n   * Converts the given permissions to a string. Using this method will guarantee the permissions are in an\n   * order accepted by the service.\n   *\n   * @returns {string} A string which represents the DataLakeSASPermissions\n   * @memberof DataLakeSASPermissions\n   */\n  public toString(): string {\n    const permissions: string[] = [];\n    if (this.read) {\n      permissions.push(\"r\");\n    }\n    if (this.add) {\n      permissions.push(\"a\");\n    }\n    if (this.create) {\n      permissions.push(\"c\");\n    }\n    if (this.write) {\n      permissions.push(\"w\");\n    }\n    if (this.delete) {\n      permissions.push(\"d\");\n    }\n    return permissions.join(\"\");\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * This is a helper class to construct a string representing the permissions granted by a ServiceSAS to a container.\n * Setting a value to true means that any SAS which uses these permissions will grant permissions for that operation.\n * Once all the values are set, this should be serialized with toString and set as the permissions field on a\n * {@link DataLakeSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n *\n * @export\n * @class FileSystemSASPermissions\n */\nexport class FileSystemSASPermissions {\n  /**\n   * Creates an {@link FileSystemSASPermissions} from the specified permissions string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid permission.\n   *\n   * @static\n   * @param {string} permissions\n   * @returns {FileSystemSASPermissions}\n   * @memberof FileSystemSASPermissions\n   */\n  public static parse(permissions: string) {\n    const containerSASPermissions = new FileSystemSASPermissions();\n\n    for (const char of permissions) {\n      switch (char) {\n        case \"r\":\n          containerSASPermissions.read = true;\n          break;\n        case \"a\":\n          containerSASPermissions.add = true;\n          break;\n        case \"c\":\n          containerSASPermissions.create = true;\n          break;\n        case \"w\":\n          containerSASPermissions.write = true;\n          break;\n        case \"d\":\n          containerSASPermissions.delete = true;\n          break;\n        case \"l\":\n          containerSASPermissions.list = true;\n          break;\n        default:\n          throw new RangeError(`Invalid permission ${char}`);\n      }\n    }\n\n    return containerSASPermissions;\n  }\n\n  /**\n   * Specifies Read access granted.\n   *\n   * @type {boolean}\n   * @memberof FileSystemSASPermissions\n   */\n  public read: boolean = false;\n\n  /**\n   * Specifies Add access granted.\n   *\n   * @type {boolean}\n   * @memberof FileSystemSASPermissions\n   */\n  public add: boolean = false;\n\n  /**\n   * Specifies Create access granted.\n   *\n   * @type {boolean}\n   * @memberof FileSystemSASPermissions\n   */\n  public create: boolean = false;\n\n  /**\n   * Specifies Write access granted.\n   *\n   * @type {boolean}\n   * @memberof FileSystemSASPermissions\n   */\n  public write: boolean = false;\n\n  /**\n   * Specifies Delete access granted.\n   *\n   * @type {boolean}\n   * @memberof FileSystemSASPermissions\n   */\n  public delete: boolean = false;\n\n  /**\n   * Specifies List access granted.\n   *\n   * @type {boolean}\n   * @memberof FileSystemSASPermissions\n   */\n  public list: boolean = false;\n\n  /**\n   * Converts the given permissions to a string. Using this method will guarantee the permissions are in an\n   * order accepted by the service.\n   *\n   * The order of the characters should be as specified here to ensure correctness.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas\n   *\n   * @returns {string}\n   * @memberof FileSystemSASPermissions\n   */\n  public toString(): string {\n    const permissions: string[] = [];\n    if (this.read) {\n      permissions.push(\"r\");\n    }\n    if (this.add) {\n      permissions.push(\"a\");\n    }\n    if (this.create) {\n      permissions.push(\"c\");\n    }\n    if (this.write) {\n      permissions.push(\"w\");\n    }\n    if (this.delete) {\n      permissions.push(\"d\");\n    }\n    if (this.list) {\n      permissions.push(\"l\");\n    }\n    return permissions.join(\"\");\n  }\n}\n","import { UserDelegationKey } from \"../models\";\nimport { createHmac } from \"crypto\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * UserDelegationKeyCredential is only used for generation of user delegation SAS.\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-user-delegation-sas\n *\n * @export\n * @class UserDelegationKeyCredential\n */\nexport class UserDelegationKeyCredential {\n  /**\n   * Azure Storage account name; readonly.\n   *\n   * @type {string}\n   * @memberof UserDelegationKeyCredential\n   */\n  public readonly accountName: string;\n\n  /**\n   * Azure Storage user delegation key; readonly.\n   *\n   * @type {UserDelegationKey}\n   * @memberof UserDelegationKeyCredential\n   */\n  public readonly userDelegationKey: UserDelegationKey;\n\n  /**\n   * Key value in Buffer type.\n   *\n   * @private\n   * @type {Buffer}\n   * @memberof UserDelegationKeyCredential\n   */\n  private readonly key: Buffer;\n\n  /**\n   * Creates an instance of UserDelegationKeyCredential.\n   * @param {string} accountName\n   * @param {UserDelegationKey} userDelegationKey\n   * @memberof UserDelegationKeyCredential\n   */\n  constructor(accountName: string, userDelegationKey: UserDelegationKey) {\n    this.accountName = accountName;\n    this.userDelegationKey = userDelegationKey;\n    this.key = Buffer.from(userDelegationKey.value, \"base64\");\n  }\n\n  /**\n   * Generates a hash signature for an HTTP request or for a SAS.\n   *\n   * @param {string} stringToSign\n   * @returns {string}\n   * @memberof UserDelegationKeyCredential\n   */\n  public computeHMACSHA256(stringToSign: string): string {\n    // console.log(`stringToSign: ${JSON.stringify(stringToSign)}`);\n\n    return createHmac(\"sha256\", this.key)\n      .update(stringToSign, \"utf8\")\n      .digest(\"base64\");\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { DataLakeSASPermissions } from \"./DataLakeSASPermissions\";\nimport { FileSystemSASPermissions } from \"./FileSystemSASPermissions\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { SasIPRange, ipRangeToString } from \"./SasIPRange\";\nimport { SASProtocol } from \"./SASQueryParameters\";\nimport { SASQueryParameters } from \"./SASQueryParameters\";\nimport { UserDelegationKeyCredential } from \"./credentials/UserDelegationKeyCredential\";\nimport { SERVICE_VERSION } from \"./utils/constants\";\nimport { truncatedISO8061Date } from \"./utils/utils.common\";\nimport { UserDelegationKey } from \"./models\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * DataLakeSASSignatureValues is used to help generating Blob and DataLake service SAS tokens for containers, blobs, filesystem, directories and files.\n *\n * @export\n * @class DataLakeSASSignatureValues\n */\nexport interface DataLakeSASSignatureValues {\n  /**\n   * The version of the service this SAS will target. If not specified, it will default to the version targeted by the\n   * library.\n   *\n   * @type {string}\n   * @memberof DataLakeSASSignatureValues\n   */\n  version?: string;\n\n  /**\n   * Optional. SAS protocols, HTTPS only or HTTPSandHTTP\n   *\n   * @type {SASProtocol}\n   * @memberof DataLakeSASSignatureValues\n   */\n  protocol?: SASProtocol;\n\n  /**\n   * Optional. When the SAS will take effect.\n   *\n   * @type {Date}\n   * @memberof DataLakeSASSignatureValues\n   */\n  startsOn?: Date;\n\n  /**\n   * Optional only when identifier is provided. The time after which the SAS will no longer work.\n   *\n   * @type {Date}\n   * @memberof DataLakeSASSignatureValues\n   */\n  expiresOn?: Date;\n\n  /**\n   * Optional only when identifier is provided.\n   * Please refer to either {@link ContainerSASPermissions} or {@link BlobSASPermissions} depending on the resource\n   * being accessed for help constructing the permissions string.\n   *\n   * @type {DataLakeSASPermissions}\n   * @memberof DataLakeSASSignatureValues\n   */\n  permissions?: DataLakeSASPermissions;\n\n  /**\n   * Optional. IP ranges allowed in this SAS.\n   *\n   * @type {SasIPRange}\n   * @memberof DataLakeSASSignatureValues\n   */\n  ipRange?: SasIPRange;\n\n  /**\n   * The name of the file system the SAS user may access.\n   *\n   * @type {string}\n   * @memberof DataLakeSASSignatureValues\n   */\n  fileSystemName: string;\n\n  /**\n   * Optional. The path name of the directory or file SAS user may access. Required if snapshotTime is provided.\n   *\n   * @type {string}\n   * @memberof DataLakeSASSignatureValues\n   */\n  pathName?: string;\n\n  /**\n   * Optional. Snapshot timestamp string the SAS user may access. Only supported from API version 2018-11-09.\n   *\n   * @type {string}\n   * @memberof IBlobSASSignatureValues\n   */\n  snapshotTime?: string;\n\n  /**\n   * Optional. The name of the access policy on the file system this SAS references if any.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/establishing-a-stored-access-policy\n   *\n   * @type {string}\n   * @memberof DataLakeSASSignatureValues\n   */\n  identifier?: string;\n\n  /**\n   * Optional. The cache-control header for the SAS.\n   *\n   * @type {string}\n   * @memberof DataLakeSASSignatureValues\n   */\n  cacheControl?: string;\n\n  /**\n   * Optional. The content-disposition header for the SAS.\n   *\n   * @type {string}\n   * @memberof DataLakeSASSignatureValues\n   */\n  contentDisposition?: string;\n\n  /**\n   * Optional. The content-encoding header for the SAS.\n   *\n   * @type {string}\n   * @memberof DataLakeSASSignatureValues\n   */\n  contentEncoding?: string;\n\n  /**\n   * Optional. The content-language header for the SAS.\n   *\n   * @type {string}\n   * @memberof DataLakeSASSignatureValues\n   */\n  contentLanguage?: string;\n\n  /**\n   * Optional. The content-type header for the SAS.\n   *\n   * @type {string}\n   * @memberof DataLakeSASSignatureValues\n   */\n  contentType?: string;\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn and identifier.\n *\n * WARNING: When identifier is not provided, permissions and expiresOn are required.\n * You MUST assign value to identifier or expiresOn & permissions manually if you initial with\n * this constructor.\n *\n * Fill in the required details before running the following snippets.\n * @example\n * ```js\n * // Generate service level SAS for a file system\n * const containerSAS = generateDataLakeSASQueryParameters({\n *     fileSystemName, // Required\n *     permissions: ContainerSASPermissions.parse(\"racwdl\"), // Required\n *     startsOn: new Date(), // Required\n *     expiresOn: new Date(new Date().valueOf() + 86400), // Optional. Date type\n *     ipRange: { start: \"0.0.0.0\", end: \"255.255.255.255\" }, // Optional\n *     protocol: SASProtocol.HttpsAndHttp, // Optional\n *     version: \"2016-05-31\" // Optional\n *   },\n *   sharedKeyCredential // StorageSharedKeyCredential - `new StorageSharedKeyCredential(account, accountKey)`\n * ).toString();\n * ```\n *\n * // Fill in the required details before running the snippet.\n * @example\n * ```js\n * // Generate service level SAS for a file\n * const fileSAS = generateDataLakeSASQueryParameters({\n *     fileSystemName, // Required\n *     fileName, // Required\n *     permissions: DataLakeSASPermissions.parse(\"racwd\"), // Required\n *     startsOn: new Date(), // Required\n *     expiresOn: new Date(new Date().valueOf() + 86400), // Optional. Date type\n *     cacheControl: \"cache-control-override\", // Optional\n *     contentDisposition: \"content-disposition-override\", // Optional\n *     contentEncoding: \"content-encoding-override\", // Optional\n *     contentLanguage: \"content-language-override\", // Optional\n *     contentType: \"content-type-override\", // Optional\n *     ipRange: { start: \"0.0.0.0\", end: \"255.255.255.255\" }, // Optional\n *     protocol: SASProtocol.HttpsAndHttp, // Optional\n *     version: \"2016-05-31\" // Optional\n *   },\n *   sharedKeyCredential // StorageSharedKeyCredential - `new StorageSharedKeyCredential(account, accountKey)`\n * ).toString();\n * ```\n *\n * @export\n * @param {DataLakeSASSignatureValues} dataLakeSASSignatureValues\n * @param {StorageSharedKeyCredential} sharedKeyCredential\n * @returns {SASQueryParameters}\n */\nexport function generateDataLakeSASQueryParameters(\n  dataLakeSASSignatureValues: DataLakeSASSignatureValues,\n  sharedKeyCredential: StorageSharedKeyCredential\n): SASQueryParameters;\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Creates an instance of SASQueryParameters.\n * WARNING: identifier will be ignored when generating user delegation SAS, permissions and expiresOn are required.\n *\n * @example\n * ```js\n * // Generate user delegation SAS for a file system\n * const userDelegationKey = await dataLakeServiceClient.getUserDelegationKey(startsOn, expiresOn);\n * const fileSystemSAS = generateDataLakeSASQueryParameters({\n *     fileSystemName, // Required\n *     permissions: FileSystemSASPermissions.parse(\"racwdl\"), // Required\n *     startsOn, // Required. Date type\n *     expiresOn, // Optional. Date type\n *     ipRange: { start: \"0.0.0.0\", end: \"255.255.255.255\" }, // Optional\n *     protocol: SASProtocol.HttpsAndHttp, // Optional\n *     version: \"2018-11-09\" // Must >= 2018-11-09 to generate user delegation SAS\n *   },\n *   userDelegationKey, // UserDelegationKey\n *   accountName\n * ).toString();\n * ```\n *\n * @export\n * @param {DataLakeSASSignatureValues} dataLakeSASSignatureValues\n * @param {UserDelegationKey} userDelegationKey Return value of `blobServiceClient.getUserDelegationKey()`\n * @param {string} accountName\n * @returns {SASQueryParameters}\n */\nexport function generateDataLakeSASQueryParameters(\n  dataLakeSASSignatureValues: DataLakeSASSignatureValues,\n  userDelegationKey: UserDelegationKey,\n  accountName: string\n): SASQueryParameters;\n\nexport function generateDataLakeSASQueryParameters(\n  dataLakeSASSignatureValues: DataLakeSASSignatureValues,\n  sharedKeyCredentialOrUserDelegationKey: StorageSharedKeyCredential | UserDelegationKey,\n  accountName?: string\n): SASQueryParameters {\n  const version = dataLakeSASSignatureValues.version\n    ? dataLakeSASSignatureValues.version\n    : SERVICE_VERSION;\n\n  const sharedKeyCredential =\n    sharedKeyCredentialOrUserDelegationKey instanceof StorageSharedKeyCredential\n      ? sharedKeyCredentialOrUserDelegationKey\n      : undefined;\n  let userDelegationKeyCredential: UserDelegationKeyCredential | undefined;\n\n  if (sharedKeyCredential === undefined && accountName !== undefined) {\n    userDelegationKeyCredential = new UserDelegationKeyCredential(\n      accountName,\n      sharedKeyCredentialOrUserDelegationKey as UserDelegationKey\n    );\n  }\n\n  if (sharedKeyCredential === undefined && userDelegationKeyCredential === undefined) {\n    throw TypeError(\"Invalid sharedKeyCredential, userDelegationKey or accountName.\");\n  }\n\n  // Version 2018-11-09 adds support for the signed resource and signed blob snapshot time fields.\n  // https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas#constructing-the-signature-string\n  if (version >= \"2018-11-09\") {\n    if (sharedKeyCredential !== undefined) {\n      return generateBlobSASQueryParameters20181109(\n        dataLakeSASSignatureValues,\n        sharedKeyCredential\n      );\n    } else {\n      return generateBlobSASQueryParametersUDK20181109(\n        dataLakeSASSignatureValues,\n        userDelegationKeyCredential!\n      );\n    }\n  }\n\n  if (version >= \"2015-04-05\") {\n    if (sharedKeyCredential !== undefined) {\n      return generateBlobSASQueryParameters20150405(\n        dataLakeSASSignatureValues,\n        sharedKeyCredential\n      );\n    } else {\n      throw new RangeError(\n        \"'version' must be >= '2018-11-09' when generating user delegation SAS using user delegation key.\"\n      );\n    }\n  }\n\n  throw new RangeError(\"'version' must be >= '2015-04-05'.\");\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n * IMPLEMENTATION FOR API VERSION FROM 2015-04-05 AND BEFORE 2018-11-09.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn and identifier.\n *\n * WARNING: When identifier is not provided, permissions and expiresOn are required.\n * You MUST assign value to identifier or expiresOn & permissions manually if you initial with\n * this constructor.\n *\n * @param {DataLakeSASSignatureValues} dataLakeSASSignatureValues\n * @param {StorageSharedKeyCredential} sharedKeyCredential\n * @returns {SASQueryParameters}\n */\nfunction generateBlobSASQueryParameters20150405(\n  dataLakeSASSignatureValues: DataLakeSASSignatureValues,\n  sharedKeyCredential: StorageSharedKeyCredential\n): SASQueryParameters {\n  if (\n    !dataLakeSASSignatureValues.identifier &&\n    (!dataLakeSASSignatureValues.permissions && !dataLakeSASSignatureValues.expiresOn)\n  ) {\n    throw new RangeError(\n      \"Must provide 'permissions' and 'expiresOn' for DataLake SAS generation when 'identifier' is not provided.\"\n    );\n  }\n\n  const version = dataLakeSASSignatureValues.version\n    ? dataLakeSASSignatureValues.version\n    : SERVICE_VERSION;\n  let resource: string = \"c\";\n  let verifiedPermissions: string | undefined;\n\n  if (dataLakeSASSignatureValues.snapshotTime) {\n    throw RangeError(\"'version' must be >= '2018-11-09' when provided 'snapshotTime'.\");\n  }\n\n  // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n  if (dataLakeSASSignatureValues.permissions) {\n    if (dataLakeSASSignatureValues.pathName) {\n      verifiedPermissions = DataLakeSASPermissions.parse(\n        dataLakeSASSignatureValues.permissions.toString()\n      ).toString();\n      resource = \"b\";\n    } else {\n      verifiedPermissions = FileSystemSASPermissions.parse(\n        dataLakeSASSignatureValues.permissions.toString()\n      ).toString();\n    }\n  }\n\n  // Signature is generated on the un-url-encoded values.\n  const stringToSign = [\n    verifiedPermissions ? verifiedPermissions : \"\",\n    dataLakeSASSignatureValues.startsOn\n      ? truncatedISO8061Date(dataLakeSASSignatureValues.startsOn, false)\n      : \"\",\n    dataLakeSASSignatureValues.expiresOn\n      ? truncatedISO8061Date(dataLakeSASSignatureValues.expiresOn, false)\n      : \"\",\n    getCanonicalName(\n      sharedKeyCredential.accountName,\n      dataLakeSASSignatureValues.fileSystemName,\n      dataLakeSASSignatureValues.pathName\n    ),\n    dataLakeSASSignatureValues.identifier,\n    dataLakeSASSignatureValues.ipRange ? ipRangeToString(dataLakeSASSignatureValues.ipRange) : \"\",\n    dataLakeSASSignatureValues.protocol ? dataLakeSASSignatureValues.protocol : \"\",\n    version,\n    dataLakeSASSignatureValues.cacheControl ? dataLakeSASSignatureValues.cacheControl : \"\",\n    dataLakeSASSignatureValues.contentDisposition\n      ? dataLakeSASSignatureValues.contentDisposition\n      : \"\",\n    dataLakeSASSignatureValues.contentEncoding ? dataLakeSASSignatureValues.contentEncoding : \"\",\n    dataLakeSASSignatureValues.contentLanguage ? dataLakeSASSignatureValues.contentLanguage : \"\",\n    dataLakeSASSignatureValues.contentType ? dataLakeSASSignatureValues.contentType : \"\"\n  ].join(\"\\n\");\n\n  const signature = sharedKeyCredential.computeHMACSHA256(stringToSign);\n\n  return new SASQueryParameters(\n    version,\n    signature,\n    verifiedPermissions,\n    undefined,\n    undefined,\n    dataLakeSASSignatureValues.protocol,\n    dataLakeSASSignatureValues.startsOn,\n    dataLakeSASSignatureValues.expiresOn,\n    dataLakeSASSignatureValues.ipRange,\n    dataLakeSASSignatureValues.identifier,\n    resource,\n    dataLakeSASSignatureValues.cacheControl,\n    dataLakeSASSignatureValues.contentDisposition,\n    dataLakeSASSignatureValues.contentEncoding,\n    dataLakeSASSignatureValues.contentLanguage,\n    dataLakeSASSignatureValues.contentType\n  );\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n * IMPLEMENTATION FOR API VERSION FROM 2018-11-09.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn and identifier.\n *\n * WARNING: When identifier is not provided, permissions and expiresOn are required.\n * You MUST assign value to identifier or expiresOn & permissions manually if you initial with\n * this constructor.\n *\n * @param {DataLakeSASSignatureValues} dataLakeSASSignatureValues\n * @param {StorageSharedKeyCredential} sharedKeyCredential\n * @returns {SASQueryParameters}\n */\nfunction generateBlobSASQueryParameters20181109(\n  dataLakeSASSignatureValues: DataLakeSASSignatureValues,\n  sharedKeyCredential: StorageSharedKeyCredential\n): SASQueryParameters {\n  if (\n    !dataLakeSASSignatureValues.identifier &&\n    (!dataLakeSASSignatureValues.permissions && !dataLakeSASSignatureValues.expiresOn)\n  ) {\n    throw new RangeError(\n      \"Must provide 'permissions' and 'expiresOn' for Blob SAS generation when 'identifier' is not provided.\"\n    );\n  }\n\n  const version = dataLakeSASSignatureValues.version\n    ? dataLakeSASSignatureValues.version\n    : SERVICE_VERSION;\n  let resource: string = \"c\";\n  let verifiedPermissions: string | undefined;\n\n  if (\n    dataLakeSASSignatureValues.pathName === undefined &&\n    dataLakeSASSignatureValues.snapshotTime\n  ) {\n    throw RangeError(\"Must provide 'blobName' when provided 'snapshotTime'.\");\n  }\n\n  // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n  if (dataLakeSASSignatureValues.permissions) {\n    if (dataLakeSASSignatureValues.pathName) {\n      verifiedPermissions = DataLakeSASPermissions.parse(\n        dataLakeSASSignatureValues.permissions.toString()\n      ).toString();\n      resource = \"b\";\n      if (dataLakeSASSignatureValues.snapshotTime) {\n        resource = \"bs\";\n      }\n    } else {\n      verifiedPermissions = FileSystemSASPermissions.parse(\n        dataLakeSASSignatureValues.permissions.toString()\n      ).toString();\n    }\n  }\n\n  // Signature is generated on the un-url-encoded values.\n  const stringToSign = [\n    verifiedPermissions ? verifiedPermissions : \"\",\n    dataLakeSASSignatureValues.startsOn\n      ? truncatedISO8061Date(dataLakeSASSignatureValues.startsOn, false)\n      : \"\",\n    dataLakeSASSignatureValues.expiresOn\n      ? truncatedISO8061Date(dataLakeSASSignatureValues.expiresOn, false)\n      : \"\",\n    getCanonicalName(\n      sharedKeyCredential.accountName,\n      dataLakeSASSignatureValues.fileSystemName,\n      dataLakeSASSignatureValues.pathName\n    ),\n    dataLakeSASSignatureValues.identifier,\n    dataLakeSASSignatureValues.ipRange ? ipRangeToString(dataLakeSASSignatureValues.ipRange) : \"\",\n    dataLakeSASSignatureValues.protocol ? dataLakeSASSignatureValues.protocol : \"\",\n    version,\n    resource,\n    dataLakeSASSignatureValues.snapshotTime,\n    dataLakeSASSignatureValues.cacheControl ? dataLakeSASSignatureValues.cacheControl : \"\",\n    dataLakeSASSignatureValues.contentDisposition\n      ? dataLakeSASSignatureValues.contentDisposition\n      : \"\",\n    dataLakeSASSignatureValues.contentEncoding ? dataLakeSASSignatureValues.contentEncoding : \"\",\n    dataLakeSASSignatureValues.contentLanguage ? dataLakeSASSignatureValues.contentLanguage : \"\",\n    dataLakeSASSignatureValues.contentType ? dataLakeSASSignatureValues.contentType : \"\"\n  ].join(\"\\n\");\n\n  const signature = sharedKeyCredential.computeHMACSHA256(stringToSign);\n\n  return new SASQueryParameters(\n    version,\n    signature,\n    verifiedPermissions,\n    undefined,\n    undefined,\n    dataLakeSASSignatureValues.protocol,\n    dataLakeSASSignatureValues.startsOn,\n    dataLakeSASSignatureValues.expiresOn,\n    dataLakeSASSignatureValues.ipRange,\n    dataLakeSASSignatureValues.identifier,\n    resource,\n    dataLakeSASSignatureValues.cacheControl,\n    dataLakeSASSignatureValues.contentDisposition,\n    dataLakeSASSignatureValues.contentEncoding,\n    dataLakeSASSignatureValues.contentLanguage,\n    dataLakeSASSignatureValues.contentType\n  );\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n * IMPLEMENTATION FOR API VERSION FROM 2018-11-09.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn and identifier.\n *\n * WARNING: identifier will be ignored, permissions and expiresOn are required.\n *\n * @param {DataLakeSASSignatureValues} dataLakeSASSignatureValues\n * @param {UserDelegationKeyCredential} userDelegationKeyCredential\n * @returns {SASQueryParameters}\n */\nfunction generateBlobSASQueryParametersUDK20181109(\n  dataLakeSASSignatureValues: DataLakeSASSignatureValues,\n  userDelegationKeyCredential: UserDelegationKeyCredential\n): SASQueryParameters {\n  if (!dataLakeSASSignatureValues.permissions || !dataLakeSASSignatureValues.expiresOn) {\n    throw new RangeError(\n      \"Must provide 'permissions' and 'expiresOn' for Blob SAS generation when generating user delegation SAS.\"\n    );\n  }\n\n  const version = dataLakeSASSignatureValues.version\n    ? dataLakeSASSignatureValues.version\n    : SERVICE_VERSION;\n  let resource: string = \"c\";\n  let verifiedPermissions: string | undefined;\n\n  if (\n    dataLakeSASSignatureValues.pathName === undefined &&\n    dataLakeSASSignatureValues.snapshotTime\n  ) {\n    throw RangeError(\"Must provide 'blobName' when provided 'snapshotTime'.\");\n  }\n\n  // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n  if (dataLakeSASSignatureValues.permissions) {\n    if (dataLakeSASSignatureValues.pathName) {\n      verifiedPermissions = DataLakeSASPermissions.parse(\n        dataLakeSASSignatureValues.permissions.toString()\n      ).toString();\n      resource = \"b\";\n      if (dataLakeSASSignatureValues.snapshotTime) {\n        resource = \"bs\";\n      }\n    } else {\n      verifiedPermissions = FileSystemSASPermissions.parse(\n        dataLakeSASSignatureValues.permissions.toString()\n      ).toString();\n    }\n  }\n\n  // Signature is generated on the un-url-encoded values.\n  const stringToSign = [\n    verifiedPermissions ? verifiedPermissions : \"\",\n    dataLakeSASSignatureValues.startsOn\n      ? truncatedISO8061Date(dataLakeSASSignatureValues.startsOn, false)\n      : \"\",\n    dataLakeSASSignatureValues.expiresOn\n      ? truncatedISO8061Date(dataLakeSASSignatureValues.expiresOn, false)\n      : \"\",\n    getCanonicalName(\n      userDelegationKeyCredential.accountName,\n      dataLakeSASSignatureValues.fileSystemName,\n      dataLakeSASSignatureValues.pathName\n    ),\n    userDelegationKeyCredential.userDelegationKey.signedObjectId,\n    userDelegationKeyCredential.userDelegationKey.signedTenantId,\n    userDelegationKeyCredential.userDelegationKey.signedStartsOn\n      ? truncatedISO8061Date(userDelegationKeyCredential.userDelegationKey.signedStartsOn, false)\n      : \"\",\n    userDelegationKeyCredential.userDelegationKey.signedExpiresOn\n      ? truncatedISO8061Date(userDelegationKeyCredential.userDelegationKey.signedExpiresOn, false)\n      : \"\",\n    userDelegationKeyCredential.userDelegationKey.signedService,\n    userDelegationKeyCredential.userDelegationKey.signedVersion,\n    dataLakeSASSignatureValues.ipRange ? ipRangeToString(dataLakeSASSignatureValues.ipRange) : \"\",\n    dataLakeSASSignatureValues.protocol ? dataLakeSASSignatureValues.protocol : \"\",\n    version,\n    resource,\n    dataLakeSASSignatureValues.snapshotTime,\n    dataLakeSASSignatureValues.cacheControl,\n    dataLakeSASSignatureValues.contentDisposition,\n    dataLakeSASSignatureValues.contentEncoding,\n    dataLakeSASSignatureValues.contentLanguage,\n    dataLakeSASSignatureValues.contentType\n  ].join(\"\\n\");\n\n  const signature = userDelegationKeyCredential.computeHMACSHA256(stringToSign);\n\n  return new SASQueryParameters(\n    version,\n    signature,\n    verifiedPermissions,\n    undefined,\n    undefined,\n    dataLakeSASSignatureValues.protocol,\n    dataLakeSASSignatureValues.startsOn,\n    dataLakeSASSignatureValues.expiresOn,\n    dataLakeSASSignatureValues.ipRange,\n    dataLakeSASSignatureValues.identifier,\n    resource,\n    dataLakeSASSignatureValues.cacheControl,\n    dataLakeSASSignatureValues.contentDisposition,\n    dataLakeSASSignatureValues.contentEncoding,\n    dataLakeSASSignatureValues.contentLanguage,\n    dataLakeSASSignatureValues.contentType,\n    userDelegationKeyCredential.userDelegationKey\n  );\n}\n\nfunction getCanonicalName(accountName: string, containerName: string, blobName?: string): string {\n  // FileSystem: \"/blob/account/fileSystemName\"\n  // File:       \"/blob/account/fileSystemName/fileName\"\n  const elements: string[] = [`/blob/${accountName}/${containerName}`];\n  if (blobName) {\n    elements.push(`/${blobName}`);\n  }\n  return elements.join(\"\");\n}\n"],"names":["__extends","BaseRequestPolicy","require$$0","require$$1","require$$2","require$$3","require$$4","getTracer","SpanKind","CanonicalCode","coreHttp.Serializer","Parameters.url","Parameters.resource1","Parameters.timeout","Parameters.properties","Parameters.requestId","Parameters.version","Mappers.FileSystemCreateHeaders","Mappers.StorageError","Parameters.ifModifiedSince","Parameters.ifUnmodifiedSince","Mappers.FileSystemSetPropertiesHeaders","Mappers.FileSystemGetPropertiesHeaders","Mappers.FileSystemDeleteHeaders","Parameters.continuation","Parameters.path","Parameters.recursive0","Parameters.maxResults","Parameters.upn","Mappers.PathList","Mappers.FileSystemListPathsHeaders","createOperationSpec","getPropertiesOperationSpec","deleteMethodOperationSpec","serializer","Mappers","Parameters.resource2","Parameters.mode","Parameters.renameSource","Parameters.sourceLeaseId","Parameters.permissions","Parameters.umask","Parameters.cacheControl","Parameters.contentEncoding","Parameters.contentLanguage","Parameters.contentDisposition","Parameters.contentType","Parameters.leaseId","Parameters.ifMatch","Parameters.ifNoneMatch","Parameters.sourceIfMatch","Parameters.sourceIfNoneMatch","Parameters.sourceIfModifiedSince","Parameters.sourceIfUnmodifiedSince","Mappers.PathCreateHeaders","Parameters.action0","Parameters.position","Parameters.retainUncommittedData","Parameters.close","Parameters.contentLength","Parameters.owner","Parameters.group","Parameters.acl","Parameters.contentMD5","Mappers.PathUpdateHeaders","Parameters.xMsLeaseAction","Parameters.xMsLeaseDuration","Parameters.xMsLeaseBreakPeriod","Parameters.proposedLeaseId","Mappers.PathLeaseHeaders","Parameters.range","Parameters.xMsRangeGetContentMd5","Mappers.PathReadHeaders","Parameters.action1","Mappers.PathGetPropertiesHeaders","Parameters.recursive1","Mappers.PathDeleteHeaders","Parameters.action2","Mappers.PathSetAccessControlHeaders","Parameters.action3","Mappers.PathFlushDataHeaders","Parameters.action4","Parameters.transactionalContentHash","Mappers.PathAppendDataHeaders","createClientLogger","URLBuilder","isNode","StorageRetryPolicyType","AbortError","HttpHeaders","os.type","os.release","BlobPipeline","tracingPolicy","keepAlivePolicy","generateClientRequestIdPolicy","deserializationPolicy","logPolicy","proxyPolicy","isTokenCredential","bearerTokenAuthenticationPolicy","createHmac","coreHttp.getDefaultUserAgentValue","coreHttp.ServiceClient","PathResourceType","PathRenameMode","PathGetPropertiesAction","DefaultHttpClient","BlobClient","ContainerClient","__asyncValues","__values","__asyncDelegator","BlobServiceClient","SASProtocol"],"mappings":"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"}